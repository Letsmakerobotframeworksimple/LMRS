keyworddocument = {

	'Call Method' : ['Calls the named method of the given object with the provided arguments', 'The possible return value from the method is returned and can be assigned to a variable', ' Keyword fails both if the object does not have a method with the given name or if executing the method raises an exception', 'Possible equal signs in arguments must be escaped with a backslash like =', ''],

	'Catenate' : ['Catenates the given items together and returns the resulted string', 'By default, items are catenated with spaces, but if the first item contains the string SEPARATOR=&lt;sep&gt;, the separator &lt;sep&gt; is used instead', ' Items are converted into strings when necessary', ''],

	'Comment' : ['Displays the given messages in the log file as keyword arguments', 'This keyword does nothing with the arguments it receives, but as they are visible in the log, this keyword can be used to display simple messages', ' Given arguments are ignored so thoroughly that they can even contain non-existing variables', ' If you are interested about variable values, you can use the Log or Log Many keywords', ],

	'Continue For Loop' : ['Skips the current for loop iteration and continues from the next', 'Skips the remaining keywords in the current for loop iteration and continues from the next one', ' Can be used directly in a for loop or in a keyword that the loop uses', "Example:FOR${var}IN@{VALUES}Run Keyword If'${var}' == 'CONTINUE'Continue For LoopDo Something${var}ENDSee Continue For Loop If to conditionally continue a for loop without using Run Keyword If or other wrapper keywords", ],

	'Continue For Loop If' : ['Skips the current for loop iteration if the condition is true', 'A wrapper for Continue For Loop to continue a for loop based on the given condition', ' The condition is evaluated using the same semantics as with Should Be True keyword', "Example:FOR${var}IN@{VALUES}Continue For Loop If'${var}' == 'CONTINUE'Do Something${var}END,"],

	'Convert To Binary' : ['Converts the given item to a binary string', 'The item, with an optional base, is first converted to an integer using Convert To Integer internally', ' After that it is converted to a binary number (base 2) represented as a string such as 1011', 'The returned value can contain an optional prefix and can be required to be of minimum length (excluding the prefix and a possible minus sign)', ' If the value is initially shorter than the required length, it is padded with zeros', ''],

	'Convert To Boolean' : ['Converts the given item to Boolean true or false', "Handles strings True and False (case-insensitive) as expected, otherwise returns item's truth value using Python's bool() method", ],

	'Convert To Bytes' : ['Converts the given input to bytes according to the input_type', 'Valid input types are listed below:text: Converts text to bytes character by character', ' All characters with ordinal below 256 can be used and are converted to bytes with same values', ' Many characters are easiest to represent using escapes like x00 or xff', ' Supports both Unicode strings and bytes', 'int: Converts integers separated by spaces to bytes', ' Similarly as with Convert To Integer, it is possible to use binary, octal, or hex values by prefixing the values with 0b, 0o, or 0x, respectively', 'hex: Converts hexadecimal values to bytes', ' Single byte is always two characters long (e', 'g', ' 01 or FF)', ' Spaces are ignored and can be used freely as a visual separator', 'bin: Converts binary values to bytes', ' Single byte is always eight characters long (e', 'g', ' 00001010)', ' Spaces are ignored and can be used freely as a visual separator', 'In addition to giving the input as a string, it is possible to use lists or other iterables containing individual characters or numbers', ' In that case numbers do not need to be padded to certain length and they cannot contain extra spaces', 'Examples (last column shows returned bytes):${bytes} =Convert To Byteshyv√§# hyvxe4${bytes} =Convert To Bytesxffx07# xffx07${bytes} =Convert To Bytes82 70int# RF${bytes} =Convert To Bytes0b10 0x10int# x02x10${bytes} =Convert To Bytesff 00 07hex# xffx00x07${bytes} =Convert To Bytes5246212121hex# RF!!!${bytes} =Convert To Bytes0000 1000bin# x08${input} =Create List1212${bytes} =Convert To Bytes${input}int# x01x02x0c${bytes} =Convert To Bytes${input}hex# x01x02x12Use Encode String To Bytes in String library if you need to convert text to bytes using a certain encoding', ],

	'Convert To Hex' : ['Converts the given item to a hexadecimal string', 'The item, with an optional base, is first converted to an integer using Convert To Integer internally', ' After that it is converted to a hexadecimal number (base 16) represented as a string such as FF0A', 'The returned value can contain an optional prefix and can be required to be of minimum length (excluding the prefix and a possible minus sign)', ' If the value is initially shorter than the required length, it is padded with zeros', 'By default the value is returned as an upper case string, but the lowercase argument a true value (see Boolean arguments) turns the value (but not the given prefix) to lower case', ''],

	'Convert To Integer' : ['Converts the given item to an integer number', 'If the given item is a string, it is by default expected to be an integer in base 10', ' There are two ways to convert from other bases:Give base explicitly to the keyword as base argument', 'Prefix the given string with the base so that 0b means binary (base 2), 0o means octal (base 8), and 0x means hex (base 16)', ' The prefix is considered only when base argument is not given and may itself be prefixed with a plus or minus sign', 'The syntax is case-insensitive and possible spaces are ignored', ''],

	'Convert To Number' : ['Converts the given item to a floating point number', 'If the optional precision is positive or zero, the returned number is rounded to that number of decimal digits', ' Negative precision means that the number is rounded to the closest multiple of 10 to the power of the absolute precision', ' If a number is equally close to a certain precision, it is always rounded away from zero', ''],

	'Convert To Octal' : ['Converts the given item to an octal string', 'The item, with an optional base, is first converted to an integer using Convert To Integer internally', ' After that it is converted to an octal number (base 8) represented as a string such as 775', 'The returned value can contain an optional prefix and can be required to be of minimum length (excluding the prefix and a possible minus sign)', ' If the value is initially shorter than the required length, it is padded with zeros', ''],

	'Convert To String' : ['Converts the given item to a Unicode string', 'Strings are also NFC normalized', 'Use Encode String To Bytes and Decode Bytes To String keywords in String library if you need to convert between Unicode and byte strings using different encodings', ' Use Convert To Bytes if you just want to create byte strings', ],

	'Create Dictionary' : ['Creates and returns a dictionary based on the given items', 'Items are typically given using the key=value syntax same way as &amp;{dictionary} variables are created in the Variable table', ' Both keys and values can contain variables, and possible equal sign in key can be escaped with a backslash like escaped=key=value', ' It is also possible to get items from existing dictionaries by simply using them like &amp;{dict}', 'Alternatively items can be specified so that keys and values are given separately', ' This and the key=value syntax can even be combined, but separately given items must be first', ' If same key is used multiple times, the last value has precedence', 'The returned dictionary is ordered, and values with strings as keys can also be accessed using a convenient dot-access syntax like ${dict', 'key}', " Technically the returned dictionary is Robot Framework's own DotDict instance", ' If there is a need, it can be converted into a regular Python dict instance by using the Convert To Dictionary keyword from the Collections library', ''],

	'Create List' : ['Returns a list containing given items', 'The returned list can be assigned both to ${scalar} and @{list} variables', ''],

	'Evaluate' : ['Evaluates the given expression in Python and returns the result', 'expression is evaluated in Python as explained in the Evaluating expressions section', 'modules argument can be used to specify a comma separated list of Python modules to be imported and added to the evaluation namespace', 'namespace argument can be used to pass a custom evaluation namespace as a dictionary', ' Possible modules are added to this namespace', 'Starting from Robot Framework 3', '2, modules used in the expression are imported automatically', ' modules argument is still needed with nested modules like rootmod', 'submod that are implemented so that the root module does not automatically import sub modules', ' This is illustrated by the selenium', 'webdriver example below', 'Variables used like ${variable} are replaced in the expression before evaluation', ' Variables are also available in the evaluation namespace and can be accessed using the special $variable syntax as explained in the Evaluating expressions section', 'Examples (expecting ${result} is number 3', "14):${status} =Evaluate0 &lt; ${result} &lt; 10# Would also work with string '3", "14'${status} =Evaluate0 &lt; $result &lt; 10# Using variable itself, not string representation${random} =Evaluaterandom", 'randint(0, sys', 'maxsize)${options} =Evaluateselenium', 'webdriver', 'ChromeOptions()modules=selenium', 'webdriver${ns} =Create Dictionaryx=${4}y=${2}${result} =Evaluatex*10 + ynamespace=${ns}=&gt;${status} = True${random} = &lt;random integer&gt;${options} = ChromeOptions instance${result} = 42NOTE: Prior to Robot Framework 3', '2 using modules=rootmod', 'submod was not enough to make the root module itself available in the evaluation namespace', ' It needed to be taken into use explicitly like modules=rootmod, rootmod', 'submod', ],

	'Exit For Loop' : ['Stops executing the enclosing for loop', 'Exits the enclosing for loop and continues execution after it', ' Can be used directly in a for loop or in a keyword that the loop uses', "Example:FOR${var}IN@{VALUES}Run Keyword If'${var}' == 'EXIT'Exit For LoopDo Something${var}ENDSee Exit For Loop If to conditionally exit a for loop without using Run Keyword If or other wrapper keywords", ],

	'Exit For Loop If' : ['Stops executing the enclosing for loop if the condition is true', 'A wrapper for Exit For Loop to exit a for loop based on the given condition', ' The condition is evaluated using the same semantics as with Should Be True keyword', "Example:FOR${var}IN@{VALUES}Exit For Loop If'${var}' == 'EXIT'Do Something${var}END,"],

	'Fail' : ['Fails the test with the given message and optionally alters its tags', 'The error message is specified using the msg argument', ' It is possible to use HTML in the given error message, similarly as with any other keyword accepting an error message, by prefixing the error with *HTML*', 'It is possible to modify tags of the current test case by passing tags after the message', ' Tags starting with a hyphen (e', 'g', ' -regression) are removed and others added', ' Tags are modified using Set Tags and Remove Tags internally, and the semantics setting and removing them are the same as with these keywords', ''],

	'Fatal Error' : ['Stops the whole test execution', 'The test or suite where this keyword is used fails with the provided message, and subsequent tests fail with a canned message', ' Possible teardowns will nevertheless be executed', 'See Fail if you only want to stop one test case unconditionally', ],

	'Get Count' : ['Returns and logs how many times item is found from container', 'This keyword works with Python strings and lists and all objects that either have count method or can be converted to Python lists', 'Example:${count} =Get Count${some item}interesting valueShould Be True5 &lt; ${count} &lt; 10,'],

	'Get Length' : ['Returns and logs the length of the given item as an integer', 'The item can be anything that has a length, for example, a string, a list, or a mapping', " The keyword first tries to get the length with the Python function len, which calls the  item's __len__ method internally", " If that fails, the keyword tries to call the item's possible length and size methods directly", " The final attempt is trying to get the value of the item's length attribute", ' If all these attempts are unsuccessful, the keyword fails', ''],

	'Get Library Instance' : ['Returns the currently active instance of the specified test library', 'This keyword makes it easy for test libraries to interact with other test libraries that have state', ' This is illustrated by the Python example below:from robot', 'libraries', 'BuiltIn import BuiltIndef title_should_start_with(expected):    seleniumlib = BuiltIn()', "get_library_instance('SeleniumLibrary')    title = seleniumlib", 'get_title()    if not title', "startswith(expected):        raise AssertionError(Title '%s' did not start with '%s'                             % (title, expected))It is also possible to use this keyword in the test data and pass the returned library instance to another keyword", ' If a library is imported with a custom name, the name used to get the instance must be that name and not the original library name', 'If the optional argument all is given a true value, then a dictionary mapping all library names to instances will be returned', 'Example:&amp;{all libs} =Get library instanceall=True,'],

	'Get Time' : ['Returns the given time in the requested format', 'NOTE: DateTime library contains much more flexible keywords for getting the current date and time and for date and time handling in general', 'How time is returned is determined based on the given format string as follows', ' Note that all checks are case-insensitive', '1) If format contains the word epoch, the time is returned in seconds after the UNIX epoch (1970-01-01 00:00:00 UTC)', ' The return value is always an integer', '2) If format contains any of the words year, month, day, hour, min, or sec, only the selected parts are returned', ' The order of the returned parts is always the one in the previous sentence and the order of words in format is not significant', ' The parts are returned as zero-padded strings (e', 'g', ' May -&gt; 05)', '3) Otherwise (and by default) the time is returned as a timestamp string in the format 2006-02-24 15:08:31', 'By default this keyword returns the current local time, but that can be altered using time argument as explained below', ' Note that all checks involving strings are case-insensitive', '1) If time is a number, or a string that can be converted to a number, it is interpreted as seconds since the UNIX epoch', ' This documentation was originally written about 1177654467 seconds after the epoch', '2) If time is a timestamp, that time will be used', ' Valid timestamp formats are YYYY-MM-DD hh:mm:ss and YYYYMMDD hhmmss', '3) If time is equal to NOW (default), the current local time is used', '4) If time is equal to UTC, the current time in UTC is used', '5) If time is in the format like NOW - 1 day or UTC + 1 hour 30 min, the current local/UTC time plus/minus the time specified with the time string is used', ' The time string format is described in an appendix of Robot Framework User Guide', "Examples (expecting the current local time is 2006-03-29 15:06:21):${time} =Get Time${secs} =Get Timeepoch${year} =Get Timereturn year${yyyy}${mm}${dd} =Get Timeyear,month,day@{time} =Get Timeyear month day hour min sec${y}${s} =Get Timeseconds and year=&gt;${time} = '2006-03-29 15:06:21'${secs} = 1143637581${year} = '2006'${yyyy} = '2006', ${mm} = '03', ${dd} = '29'@{time} = ['2006', '03', '29', '15', '06', '21']${y} = '2006'${s} = '21'Examples (expecting the current local time is 2006-03-29 15:06:21 and UTC time is 2006-03-29 12:06:21):${time} =Get Time1177654467# Time given as epoch seconds${secs} =Get Timesec2007-04-27 09:14:27# Time given as a timestamp${year} =Get TimeyearNOW# The local time of execution@{time} =Get Timehour min secNOW + 1h 2min 3s# 1h 2min 3s added to the local time@{utc} =Get Timehour min secUTC# The UTC time of execution${hour} =Get TimehourUTC - 1 hour# 1h subtracted from the UTC  time=&gt;${time} = '2007-04-27 09:14:27'${secs} = 27${year} = '2006'@{time} = ['16', '08', '24']@{utc} = ['12', '06', '21']${hour} = '11',"],

	'Get Variable Value' : ['Returns variable value or default if the variable does not exist', 'The name of the variable can be given either as a normal variable name (e', 'g', ' ${NAME}) or in escaped format (e', 'g', ' ${NAME})', ' Notice that the former has some limitations explained in Set Suite Variable', ''],

	'Get Variables' : ['Returns a dictionary containing all variables in the current scope', 'Variables are returned as a special dictionary that allows accessing variables in space, case, and underscore insensitive manner similarly as accessing variables in the test data', ' This dictionary supports all same operations as normal Python dictionaries and, for example, Collections library can be used to access or modify it', ' Modifying the returned dictionary has no effect on the variables available in the current scope', 'By default variables are returned with ${}, @{} or &amp;{} decoration based on variable types', ' Giving a true value (see Boolean arguments) to the optional argument no_decoration will return the variables without the decoration', 'Example:${example_variable} =Set Variableexample value${variables} =Get VariablesDictionary Should Contain Key${variables}${example_variable}Dictionary Should Contain Key${variables}${ExampleVariable}Set To Dictionary${variables}${name}valueVariable Should Not Exist${name}${no decoration} =Get Variablesno_decoration=YesDictionary Should Contain Key${no decoration}example_variable,'],

	'Import Library' : ['Imports a library with the given name and optional arguments', 'This functionality allows dynamic importing of libraries while tests are running', ' That may be necessary, if the library itself is dynamic and not yet available when test data is processed', ' In a normal case, libraries should be imported using the Library setting in the Setting table', 'This keyword supports importing libraries both using library names and physical paths', ' When paths are used, they must be given in absolute format or found from search path', ' Forward slashes can be used as path separators in all operating systems', 'It is possible to pass arguments to the imported library and also named argument syntax works if the library supports it', ' WITH NAME syntax can be used to give a custom name to the imported library', ''],

	'Import Resource' : ['Imports a resource file with the given path', 'Resources imported with this keyword are set into the test suite scope similarly when importing them in the Setting table using the Resource setting', 'The given path must be absolute or found from search path', ' Forward slashes can be used as path separator regardless the operating system', ''],

	'Import Variables' : ['Imports a variable file with the given path and optional arguments', 'Variables imported with this keyword are set into the test suite scope similarly when importing them in the Setting table using the Variables setting', ' These variables override possible existing variables with the same names', ' This functionality can thus be used to import new variables, for example, for each test in a test suite', 'The given path must be absolute or found from search path', ' Forward slashes can be used as path separator regardless the operating system', ''],

	'Keyword Should Exist' : ['Fails unless the given keyword exists in the current scope', 'Fails also if there are more than one keywords with the same name', ' Works both with the short name (e', 'g', ' Log) and the full name (e', 'g', ' BuiltIn', 'Log)', 'The default error message can be overridden with the msg argument', 'See also Variable Should Exist', ],

	'Length Should Be' : ['Verifies that the length of the given item is correct', 'The length of the item is got using the Get Length keyword', ' The default error message can be overridden with the msg argument', ],

	'Log' : ['Logs the given message with the given level', 'Valid levels are TRACE, DEBUG, INFO (default), HTML, WARN, and ERROR', ' Messages below the current active log level are ignored', ' See Set Log Level keyword and --loglevel command line option for more details about setting the level', 'Messages logged with the WARN or ERROR levels will be automatically visible also in the console and in the Test Execution Errors section in the log file', 'If the html argument is given a true value (see Boolean arguments), the message will be considered HTML and special characters such as &lt; are not escaped', ' For example, logging &lt;img src=image', 'png&gt; creates an image when html is true, but otherwise the message is that exact string', ' An alternative to using the html argument is using the HTML pseudo log level', ' It logs the message as HTML using the INFO level', 'If the console argument is true, the message will be written to the console where test execution was started from in addition to the log file', ' This keyword always uses the standard output stream and adds a newline after the written message', ' Use Log To Console instead if either of these is undesirable,The formatter argument controls how to format the string representation of the message', ' Possible values are str (default), repr and ascii, and they work similarly to Python built-in functions with same names', ' When using repr, bigger lists, dictionaries and other containers are also pretty-printed so that there is one item per row', ' For more details see String representations', ' This is a new feature in Robot Framework 3', '1', '2', 'The old way to control string representation was using the repr argument, and repr=True is still equivalent to using formatter=repr', ' The repr argument will be deprecated in the future, though, and using formatter is thus recommended', ''],

	'Log Many' : ['Logs the given messages as separate entries using the INFO level', 'Supports also logging list and dictionary variable items individually', ''],

	'Log To Console' : ['Logs the given message to the console', 'By default uses the standard output stream', ' Using the standard error stream is possibly by giving the stream argument value STDERR (case-insensitive)', 'By default appends a newline to the logged message', ' This can be disabled by giving the no_newline argument a true value (see Boolean arguments)', ''],

	'Log Variables' : ['Logs all variables in the current scope with given log level', ],

	'No Operation' : ['Does absolutely nothing', ],

	'Pass Execution' : ['Skips rest of the current test, setup, or teardown with PASS status', 'This keyword can be used anywhere in the test data, but the place where used affects the behavior:When used in any setup or teardown (suite, test or keyword), passes that setup or teardown', ' Possible keyword teardowns of the started keywords are executed', ' Does not affect execution or statuses otherwise', 'When used in a test outside setup or teardown, passes that particular test case', ' Possible test and keyword teardowns are executed', 'Possible continuable failures before this keyword is used, as well as failures in executed teardowns, will fail the execution', 'It is mandatory to give a message explaining why execution was passed', ' By default the message is considered plain text, but starting it with *HTML* allows using HTML formatting', 'It is also possible to modify test tags passing tags after the message similarly as with Fail keyword', ' Tags starting with a hyphen (e', 'g', ' -regression) are removed and others added', ' Tags are modified using Set Tags and Remove Tags internally, and the semantics setting and removing them are the same as with these keywords', ''],

	'Pass Execution If' : ['Conditionally skips rest of the current test, setup, or teardown with PASS status', 'A wrapper for Pass Execution to skip rest of the current test, setup or teardown based the given condition', ' The condition is evaluated similarly as with Should Be True keyword, and message and *tags have same semantics as with Pass Execution', "Example:FOR${var}IN@{VALUES}Pass Execution If'${var}' == 'EXPECTED'Correct value was foundDo Something${var}END,"],

	'Regexp Escape' : ['Returns each argument string escaped for use as a regular expression', 'This keyword can be used to escape strings to be used with Should Match Regexp and Should Not Match Regexp keywords', "Escaping is done with Python's re", 'escape() function', ''],

	'Reload Library' : ['Rechecks what keywords the specified library provides', 'Can be called explicitly in the test data or by a library itself when keywords it provides have changed', 'The library can be specified by its name or as the active instance of the library', ' The latter is especially useful if the library itself calls this keyword as a method', ],

	'Remove Tags' : ['Removes given tags from the current test or all tests in a suite', 'Tags can be given exactly or using a pattern with *, ? and [chars] acting as wildcards', ' See the Glob patterns section for more information', 'This keyword can affect either one test case or all test cases in a test suite similarly as Set Tags keyword', 'The current tags are available as a built-in variable @{TEST TAGS}', 'Example:Remove Tagsmytagsomething-*?ythonSee Set Tags if you want to add certain tags and Fail if you want to fail the test case after setting and/or removing tags', ],

	'Repeat Keyword' : ['Executes the specified keyword multiple times', 'name and args define the keyword that is executed similarly as with Run Keyword', ' repeat specifies how many times (as a count) or how long time (as a timeout) the keyword should be executed', 'If repeat is given as count, it specifies how many times the keyword should be executed', ' repeat can be given as an integer or as a string that can be converted to an integer', ' If it is a string, it can have postfix times or x (case and space insensitive) to make the expression more explicit', "If repeat is given as timeout, it must be in Robot Framework's time format (e", 'g', ' 1 minute, 2 min 3 s)', ' Using a number alone (e', 'g', ' 1 or 1', '5) does not work in this context', 'If repeat is zero or negative, the keyword is not executed at all', ' This keyword fails immediately if any of the execution rounds fails', ''],

	'Replace Variables' : ['Replaces variables in the given text with their current values', 'If the text contains undefined variables, this keyword fails', ' If the given text contains only a single variable, its value is returned as-is and it can be any object', ' Otherwise this keyword always returns a string', 'Example:The file template', 'txt contains Hello ${NAME}! and variable ${NAME} has the value Robot', '${template} =Get File${CURDIR}/template', 'txt${message} =Replace Variables${template}Should Be Equal${message}Hello Robot!,'],

	'Return From Keyword' : ['Returns from the enclosing user keyword', 'This keyword can be used to return from a user keyword with PASS status without executing it fully', ' It is also possible to return values similarly as with the [Return] setting', ' For more detailed information about working with the return values, see the User Guide', 'This keyword is typically wrapped to some other keyword, such as Run Keyword If or Run Keyword If Test Passed, to return based on a condition:Run Keyword If${rc} &lt; 0Return From KeywordRun Keyword If Test PassedReturn From KeywordIt is possible to use this keyword to return from a keyword also inside a for loop', ' That, as well as returning values, is demonstrated by the Find Index keyword in the following somewhat advanced example', ' Notice that it is often a good idea to move this kind of complicated logic into a test library', "*** Variables ***@{LIST} =    foo    baz*** Test Cases ***Example    ${index} =    Find Index    baz    @{LIST}    Should Be Equal    ${index}    ${1}    ${index} =    Find Index    non existing    @{LIST}    Should Be Equal    ${index}    ${-1}*** Keywords ***Find Index   [Arguments]    ${element}    @{items}   ${index} =    Set Variable    ${0}   FOR    ${item}    IN    @{items}       Run Keyword If    '${item}' == '${element}'    Return From Keyword    ${index}       ${index} =    Set Variable    ${index + 1}   END   Return From Keyword    ${-1}    # Also [Return] would work here", 'The most common use case, returning based on an expression, can be accomplished directly with Return From Keyword If', ' See also Run Keyword And Return and Run Keyword And Return If', ],

	'Return From Keyword If' : ['Returns from the enclosing user keyword if condition is true', 'A wrapper for Return From Keyword to return based on the given condition', ' The condition is evaluated using the same semantics as with Should Be True keyword', "Given the same example as in Return From Keyword, we can rewrite the Find Index keyword as follows:*** Keywords ***Find Index   [Arguments]    ${element}    @{items}   ${index} =    Set Variable    ${0}   FOR    ${item}    IN    @{items}       Return From Keyword If    '${item}' == '${element}'    ${index}       ${index} =    Set Variable    ${index + 1}   END   Return From Keyword    ${-1}    # Also [Return] would work here", 'See also Run Keyword And Return and Run Keyword And Return If', ],

	'Run Keyword' : ['Executes the given keyword with the given arguments', 'Because the name of the keyword to execute is given as an argument, it can be a variable and thus set dynamically, e', 'g', ' from a return value of another keyword or from the command line', ],

	'Run Keyword And Continue On Failure' : ['Runs the keyword and continues execution even if a failure occurs', 'The keyword name and arguments work as with Run Keyword', 'Example:Run Keyword And Continue On FailureFailThis is a stupid exampleLogThis keyword is executedThe execution is not continued if the failure is caused by invalid syntax, timeout, or fatal exception', ],

	'Run Keyword And Expect Error' : ['Runs the keyword and checks that the expected error occurred', 'The keyword to execute and its arguments are specified using name and *args exactly like with Run Keyword', 'The expected error must be given in the same format as in Robot Framework reports', ' By default it is interpreted as a glob pattern with *, ? and [chars] as wildcards, but starting from Robot Framework 3', '1 that can be changed by using various prefixes explained in the table below', ' Prefixes are case-sensitive and they must be separated from the actual message with a colon and an optional space like PREFIX: Message or PREFIX:Message', 'PrefixExplanationEQUALSExact match', ' Especially useful if the error contains glob wildcards', 'STARTSError must start with the specified error', 'REGEXPRegular expression match', 'GLOBSame as the default behavior', 'See the Pattern matching section for more information about glob patterns and regular expressions', 'If the expected error occurs, the error message is returned and it can be further processed or tested if needed', ' If there is no error, or the error does not match the expected error, this keyword fails', ''],

	'Run Keyword And Ignore Error' : ['Runs the given keyword with the given arguments and ignores possible error', 'This keyword returns two values, so that the first is either string PASS or FAIL, depending on the status of the executed keyword', ' The second value is either the return value of the keyword or the received error message', ' See Run Keyword And Return Status If you are only interested in the execution status', 'The keyword name and arguments work as in Run Keyword', ' See Run Keyword If for a usage example', 'Errors caused by invalid syntax, timeouts, or fatal exceptions are not caught by this keyword', ' Otherwise this keyword itself never fails', ],

	'Run Keyword And Return' : ['Runs the specified keyword and returns from the enclosing user keyword', 'The keyword to execute is defined with name and *args exactly like with Run Keyword', ' After running the keyword, returns from the enclosing user keyword and passes possible return value from the executed keyword further', ' Returning from a keyword has exactly same semantics as with Return From Keyword', 'Example:Run Keyword And ReturnMy Keywordarg1arg2# Above is equivalent to:${result} =My Keywordarg1arg2Return From Keyword${result}Use Run Keyword And Return If if you want to run keyword and return based on a condition', ],

	'Run Keyword And Return If' : ['Runs the specified keyword and returns from the enclosing user keyword', 'A wrapper for Run Keyword And Return to run and return based on the given condition', ' The condition is evaluated using the same semantics as with Should Be True keyword', 'Example:Run Keyword And Return If${rc} &gt; 0My Keywordarg1arg2# Above is equivalent to:Run Keyword If${rc} &gt; 0Run Keyword And ReturnMy Keyword arg1arg2Use Return From Keyword If if you want to return a certain value based on a condition', ],

	'Run Keyword And Return Status' : ['Runs the given keyword with given arguments and returns the status as a Boolean value', 'This keyword returns Boolean True if the keyword that is executed succeeds and False if it fails', ' This is useful, for example, in combination with Run Keyword If', ' If you are interested in the error message or return value, use Run Keyword And Ignore Error instead', 'The keyword name and arguments work as in Run Keyword', 'Example:${passed} =Run Keyword And Return StatusKeywordargsRun Keyword If${passed}Another keywordErrors caused by invalid syntax, timeouts, or fatal exceptions are not caught by this keyword', ' Otherwise this keyword itself never fails', ],

	'Run Keyword If' : ['Runs the given keyword with the given arguments, if condition is true', 'The given condition is evaluated in Python as explained in Evaluating expressions, and name and *args have same semantics as with Run Keyword', "Example, a simple if/else construct:${status}${value} =Run Keyword And Ignore ErrorMy KeywordRun Keyword If'${status}' == 'PASS'Some ActionargRun Keyword Unless'${status}' == 'PASS'Another ActionIn this example, only either Some Action or Another Action is executed, based on the status of My Keyword", ' Instead of Run Keyword And Ignore Error you can also use Run Keyword And Return Status', 'Variables used like ${variable}, as in the examples above, are replaced in the expression before evaluation', ' Variables are also available in the evaluation namespace and can be accessed using special syntax $variable as explained in the Evaluating expressions section', "Example:Run Keyword If$result is None or $result == 'FAIL'KeywordThis keyword supports also optional ELSE and ELSE IF branches", ' Both of them are defined in *args and must use exactly format ELSE or ELSE IF, respectively', ' ELSE branches must contain first the name of the keyword to execute and then its possible arguments', ' ELSE IF branches must first contain a condition, like the first argument to this keyword, and then the keyword to execute and its possible arguments', ' It is possible to have ELSE branch after ELSE IF and to have multiple ELSE IF branches', ' Nested Run Keyword If usage is not supported when using ELSE and/or ELSE IF branches', "Given previous example, if/else construct can also be created like this:${status}${value} =Run Keyword And Ignore ErrorMy KeywordRun Keyword If'${status}' == 'PASS'Some ActionargELSEAnother ActionThe return value of this keyword is the return value of the actually executed keyword or Python None if no keyword was executed (i", 'e', ' if condition was false)', ' Hence, it is recommended to use ELSE and/or ELSE IF branches to conditionally assign return values from keyword to variables (see Set Variable If if you need to set fixed values conditionally)', ' This is illustrated by the example below:${var1} =Run Keyword If${rc} == 0Some keyword returning a value', '', '', 'ELSE IF0 &lt; ${rc} &lt; 42Another keyword', '', '', 'ELSE IF${rc} &lt; 0Another keyword with args${rc}arg2', '', '', 'ELSEFinal keyword to handle abnormal cases${rc}${var2} =Run Keyword If${condition}Some keywordIn this example, ${var2} will be set to None if ${condition} is false', 'Notice that ELSE and ELSE IF control words must be used explicitly and thus cannot come from variables', ' If you need to use literal ELSE and ELSE IF strings as arguments, you can escape them with a backslash like ELSE and ELSE IF', "Python's os and sys modules are automatically imported when evaluating the condition", ' Attributes they contain can thus be used in the condition:Run Keyword Ifos', "sep == '/'Unix Keyword", '', '', 'ELSE IFsys', 'platform', "startswith('java')Jython Keyword", '', '', 'ELSEWindows Keyword,'],

	'Run Keyword If All Critical Tests Passed' : ['Runs the given keyword with the given arguments, if all critical tests passed', 'This keyword can only be used in suite teardown', ' Trying to use it in any other place will result in an error', 'Otherwise, this keyword works exactly like Run Keyword, see its documentation for more details', ],

	'Run Keyword If All Tests Passed' : ['Runs the given keyword with the given arguments, if all tests passed', 'This keyword can only be used in a suite teardown', ' Trying to use it anywhere else results in an error', 'Otherwise, this keyword works exactly like Run Keyword, see its documentation for more details', ],

	'Run Keyword If Any Critical Tests Failed' : ['Runs the given keyword with the given arguments, if any critical tests failed', 'This keyword can only be used in a suite teardown', ' Trying to use it anywhere else results in an error', 'Otherwise, this keyword works exactly like Run Keyword, see its documentation for more details', ],

	'Run Keyword If Any Tests Failed' : ['Runs the given keyword with the given arguments, if one or more tests failed', 'This keyword can only be used in a suite teardown', ' Trying to use it anywhere else results in an error', 'Otherwise, this keyword works exactly like Run Keyword, see its documentation for more details', ],

	'Run Keyword If Test Failed' : ['Runs the given keyword with the given arguments, if the test failed', 'This keyword can only be used in a test teardown', ' Trying to use it anywhere else results in an error', 'Otherwise, this keyword works exactly like Run Keyword, see its documentation for more details', ],

	'Run Keyword If Test Passed' : ['Runs the given keyword with the given arguments, if the test passed', 'This keyword can only be used in a test teardown', ' Trying to use it anywhere else results in an error', 'Otherwise, this keyword works exactly like Run Keyword, see its documentation for more details', ],

	'Run Keyword If Timeout Occurred' : ['Runs the given keyword if either a test or a keyword timeout has occurred', 'This keyword can only be used in a test teardown', ' Trying to use it anywhere else results in an error', 'Otherwise, this keyword works exactly like Run Keyword, see its documentation for more details', ],

	'Run Keyword Unless' : ['Runs the given keyword with the given arguments if condition is false', 'See Run Keyword If for more information and an example', ' Notice that this keyword does not support ELSE or ELSE IF branches like Run Keyword If does, though', ],

	'Run Keywords' : ['Executes all the given keywords in a sequence', 'This keyword is mainly useful in setups and teardowns when they need to take care of multiple actions and creating a new higher level user keyword would be an overkill', 'By default all arguments are expected to be keywords to be executed', ''],

	'Set Global Variable' : ['Makes a variable available globally in all tests and suites', 'Variables set with this keyword are globally available in all subsequent test suites, test cases and user keywords', ' Also variables in variable tables are overridden', ' Variables assigned locally based on keyword return values or by using Set Test Variable and Set Suite Variable override these variables in that scope, but the global value is not changed in those cases', 'In practice setting variables with this keyword has the same effect as using command line options --variable and --variablefile', ' Because this keyword can change variables everywhere, it should be used with care', 'See Set Suite Variable for more information and examples', ],

	'Set Library Search Order' : ['Sets the resolution order to use when a name matches multiple keywords', 'The library search order is used to resolve conflicts when a keyword name in the test data matches multiple keywords', ' The first library (or resource, see below) containing the keyword is selected and that keyword implementation used', ' If the keyword is not found from any library (or resource), test executing fails the same way as when the search order is not set', 'When this keyword is used, there is no need to use the long LibraryName', 'Keyword Name notation', '  For example, instead of havingMyLibrary', 'KeywordargMyLibrary', 'Another KeywordMyLibrary', 'Keywordxxxyou can haveSet Library Search OrderMyLibraryKeywordargAnother KeywordKeywordxxxThis keyword can be used also to set the order of keywords in different resource files', ' In this case resource names must be given without paths or extensions like:Set Library Search Orderresourceanother_resourceNOTE:The search order is valid only in the suite where this keywords is used', 'Keywords in resources always have higher priority than keywords in libraries regardless the search order', 'The old order is returned and can be used to reset the search order later', 'Library and resource names in the search order are both case and space insensitive', ],

	'Set Local Variable' : ['Makes a variable available everywhere within the local scope', 'Variables set with this keyword are available within the local scope of the currently executed test case or in the local scope of the keyword in which they are defined', ' For example, if you set a variable in a user keyword, it is available only in that keyword', ' Other test cases or keywords will not see variables set with this keyword', 'This keyword is equivalent to a normal variable assignment based on a keyword return value', 'Example:@{list} =Create Listitem1item2item3is equivalent withSet Local Variable@{list}item1item2item3This keyword will provide the option of setting local variables inside keywords like Run Keyword If, Run Keyword And Return If, Run Keyword Unless which until now was not possible by using Set Variable', 'It will also be possible to use this keyword from external libraries that want to set local variables', 'New in Robot Framework 3', '2', ],

	'Set Log Level' : ['Sets the log threshold to the specified level and returns the old level', 'Messages below the level will not logged', ' The default logging level is INFO, but it can be overridden with the command line option --loglevel', 'The available levels: TRACE, DEBUG, INFO (default), WARN, ERROR and NONE (no logging)', ],

	'Set Suite Documentation' : ['Sets documentation for the current test suite', 'By default the possible existing documentation is overwritten, but this can be changed using the optional append argument similarly as with Set Test Message keyword', 'This keyword sets the documentation of the current suite by default', ' If the optional top argument is given a true value (see Boolean arguments), the documentation of the top level suite is altered instead', 'The documentation of the current suite is available as a built-in variable ${SUITE DOCUMENTATION}', ],

	'Set Suite Metadata' : ['Sets metadata for the current test suite', 'By default possible existing metadata values are overwritten, but this can be changed using the optional append argument similarly as with Set Test Message keyword', 'This keyword sets the metadata of the current suite by default', ' If the optional top argument is given a true value (see Boolean arguments), the metadata of the top level suite is altered instead', 'The metadata of the current suite is available as a built-in variable ${SUITE METADATA} in a Python dictionary', ' Notice that modifying this variable directly has no effect on the actual metadata the suite has', ],

	'Set Suite Variable' : ['Makes a variable available everywhere within the scope of the current suite', 'Variables set with this keyword are available everywhere within the scope of the currently executed test suite', ' Setting variables with this keyword thus has the same effect as creating them using the Variable table in the test data file or importing them from variable files', 'Possible child test suites do not see variables set with this keyword by default, but that can be controlled by using children=&lt;option&gt; as the last argument', ' If the specified &lt;option&gt; given a true value (see Boolean arguments), the variable is set also to the child suites', ' Parent and sibling suites will never see variables set with this keyword', 'The name of the variable can be given either as a normal variable name (e', 'g', ' ${NAME}) or in escaped format as ${NAME} or $NAME', ' Variable value can be given using the same syntax as when variables are created in the Variable table', 'If a variable already exists within the new scope, its value will be overwritten', ' Otherwise a new variable is created', ' If a variable already exists within the current scope, the value can be left empty and the variable within the new scope gets the value within the current scope', ''],

	'Set Tags' : ['Adds given tags for the current test or all tests in a suite', 'When this keyword is used inside a test case, that test gets the specified tags and other tests are not affected', 'If this keyword is used in a suite setup, all test cases in that suite, recursively, gets the given tags', ' It is a failure to use this keyword in a suite teardown', 'The current tags are available as a built-in variable @{TEST TAGS}', 'See Remove Tags if you want to remove certain tags and Fail if you want to fail the test case after setting and/or removing tags', ],

	'Set Task Variable' : ['Makes a variable available everywhere within the scope of the current task', 'This is an alias for Set Test Variable that is more applicable when creating tasks, not tests', ' New in RF 3', '1', ],

	'Set Test Documentation' : ['Sets documentation for the current test case', 'By default the possible existing documentation is overwritten, but this can be changed using the optional append argument similarly as with Set Test Message keyword', 'The current test documentation is available as a built-in variable ${TEST DOCUMENTATION}', ' This keyword can not be used in suite setup or suite teardown', ],

	'Set Test Message' : ['Sets message for the current test case', 'If the optional append argument is given a true value (see Boolean arguments), the given message is added after the possible earlier message by joining the messages with a space', 'In test teardown this keyword can alter the possible failure message, but otherwise failures override messages set by this keyword', ' Notice that in teardown the message is available as a built-in variable ${TEST MESSAGE}', 'It is possible to use HTML format in the message by starting the message with *HTML*', ''],

	'Set Test Variable' : ['Makes a variable available everywhere within the scope of the current test', 'Variables set with this keyword are available everywhere within the scope of the currently executed test case', ' For example, if you set a variable in a user keyword, it is available both in the test case level and also in all other user keywords used in the current test', ' Other test cases will not see variables set with this keyword', 'See Set Suite Variable for more information and examples', ],

	'Set Variable' : ['Returns the given values which can then be assigned to a variables', 'This keyword is mainly used for setting scalar variables', ' Additionally it can be used for converting a scalar variable containing a list to a list variable or to multiple scalar variables', ' It is recommended to use Create List when creating new lists', ''],

	'Set Variable If' : ['Sets variable based on the given condition', 'The basic usage is giving a condition and two values', ' The given condition is first evaluated the same way as with the Should Be True keyword', ' If the condition is true, then the first value is returned, and otherwise the second value is returned', ' The second value can also be omitted, in which case it has a default value None', ' This usage is illustrated in the examples below, where ${rc} is assumed to be zero', "${var1} =Set Variable If${rc} == 0zerononzero${var2} =Set Variable If${rc} &gt; 0value1value2${var3} =Set Variable If${rc} &gt; 0whatever=&gt;${var1} = 'zero'${var2} = 'value2'${var3} = NoneIt is also possible to have 'else if' support by replacing the second value with another condition, and having two new values after it", ' If the first condition is not true, the second is evaluated and one of the values after it is returned based on its truth value', ' This can be continued by adding more conditions without a limit', '${var} =Set Variable If${rc} == 0zero', '', '', '${rc} &gt; 0greater than zeroless then zero${var} =Set Variable If', '', '', '${rc} == 0zero', '', '', '${rc} == 1one', '', '', '${rc} == 2two', '', '', '${rc} &gt; 2greater than two', '', '', '${rc} &lt; 0less than zeroUse Get Variable Value if you need to set variables dynamically based on whether a variable exist or not', ],

	'Should Be Empty' : ['Verifies that the given item is empty', 'The length of the item is got using the Get Length keyword', ' The default error message can be overridden with the msg argument', ],

	'Should Be Equal' : ['Fails if the given objects are unequal', 'Optional msg, values and formatter arguments specify how to construct the error message if this keyword fails:If msg is not given, the error message is &lt;first&gt; != &lt;second&gt;', 'If msg is given and values gets a true value (default), the error message is &lt;msg&gt;: &lt;first&gt; != &lt;second&gt;', 'If msg is given and values gets a false value (see Boolean arguments), the error message is simply &lt;msg&gt;', 'formatter controls how to format the values', ' Possible values are str (default), repr and ascii, and they work similarly as Python built-in functions with same names', ' See String representations for more details', 'If ignore_case is given a true value (see Boolean arguments) and both arguments are strings, comparison is done case-insensitively', ' If both arguments are multiline strings, this keyword uses multiline string comparison', ''],

	'Should Be Equal As Integers' : ['Fails if objects are unequal after converting them to integers', 'See Convert To Integer for information how to convert integers from other bases than 10 using base argument or 0b/0o/0x prefixes', 'See Should Be Equal for an explanation on how to override the default error message with msg and values', ''],

	'Should Be Equal As Numbers' : ['Fails if objects are unequal after converting them to real numbers', 'The conversion is done with Convert To Number keyword using the given precision', ''],

	'Should Be Equal As Strings' : ['Fails if objects are unequal after converting them to strings', 'See Should Be Equal for an explanation on how to override the default error message with msg, values and formatter', 'If ignore_case is given a true value (see Boolean arguments), comparison is done case-insensitively', ' If both arguments are multiline strings, this keyword uses multiline string comparison', 'Strings are always NFC normalized', 'ignore_case and formatter are new features in Robot Framework 3', '0', '1 and 3', '1', '2, respectively', ],

	'Should Be True' : ['Fails if the given condition is not true', 'If condition is a string (e', 'g', ' ${rc} &lt; 10), it is evaluated as a Python expression as explained in Evaluating expressions and the keyword status is decided based on the result', ' If a non-string item is given, the status is got directly from its truth value', 'The default error message (&lt;condition&gt; should be true) is not very informative, but it can be overridden with the msg argument', ''],

	'Should Contain' : ['Fails if container does not contain item one or more times', "Works with strings, lists, and anything that supports Python's in operator", 'See Should Be Equal for an explanation on how to override the default error message with arguments msg and values', 'If ignore_case is given a true value (see Boolean arguments) and compared items are strings, it indicates that comparison should be case-insensitive', ' If the container is a list-like object, string items in it are compared case-insensitively', ' New option in Robot Framework 3', '0', '1', ''],

	'Should Contain Any' : ['Fails if container does not contain any of the *items', "Works with strings, lists, and anything that supports Python's in operator", 'Supports additional configuration parameters msg, values and ignore_case, which have exactly the same semantics as arguments with same names have with Should Contain', ' These arguments must always be given using name=value syntax after all items', 'Note that possible equal signs in items must be escaped with a backslash (e', 'g', ' foo=bar) to avoid them to be passed in as **configuration', ''],

	'Should Contain X Times' : ['Fails if container does not contain item count times', 'Works with strings, lists and all objects that Get Count works with', ' The default error message can be overridden with msg and the actual count is always logged', 'If ignore_case is given a true value (see Boolean arguments) and compared items are strings, it indicates that comparison should be case-insensitive', ' If the container is a list-like object, string items in it are compared case-insensitively', ' New option in Robot Framework 3', '0', '1', ''],

	'Should End With' : ['Fails if the string str1 does not end with the string str2', 'See Should Be Equal for an explanation on how to override the default error message with msg and values, as well as for semantics of the ignore_case option', ],

	'Should Match' : ['Fails if the given string does not match the given pattern', 'Pattern matching is similar as matching files in a shell with *, ? and [chars] acting as wildcards', ' See the Glob patterns section for more information', 'See Should Be Equal for an explanation on how to override the default error message with msg and values, as well as for semantics of the ignore_case option', ],

	'Should Match Regexp' : ['Fails if string does not match pattern as a regular expression', 'See the Regular expressions section for more information about regular expressions and how to use then in Robot Framework test data', 'Notice that the given pattern does not need to match the whole string', ' For example, the pattern ello matches the string Hello world!', ' If a full match is needed, the ^ and $ characters can be used to denote the beginning and end of the string, respectively', ' For example, ^ello$ only matches the exact string ello', 'Possible flags altering how the expression is parsed (e', 'g', ' re', 'IGNORECASE, re', 'MULTILINE) must be embedded to the pattern like (?im)pattern', ' The most useful flags are i (case-insensitive), m (multiline mode), s (dotall mode) and x (verbose)', 'If this keyword passes, it returns the portion of the string that matched the pattern', ' Additionally, the possible captured groups are returned', 'See the Should Be Equal keyword for an explanation on how to override the default error message with the msg and values arguments', ''],

	'Should Not Be Empty' : ['Verifies that the given item is not empty', 'The length of the item is got using the Get Length keyword', ' The default error message can be overridden with the msg argument', ],

	'Should Not Be Equal' : ['Fails if the given objects are equal', 'See Should Be Equal for an explanation on how to override the default error message with msg and values', 'If ignore_case is given a true value (see Boolean arguments) and both arguments are strings, comparison is done case-insensitively', ' New option in Robot Framework 3', '0', '1', ],

	'Should Not Be Equal As Integers' : ['Fails if objects are equal after converting them to integers', 'See Convert To Integer for information how to convert integers from other bases than 10 using base argument or 0b/0o/0x prefixes', 'See Should Be Equal for an explanation on how to override the default error message with msg and values', 'See Should Be Equal As Integers for some usage examples', ],

	'Should Not Be Equal As Numbers' : ['Fails if objects are equal after converting them to real numbers', 'The conversion is done with Convert To Number keyword using the given precision', 'See Should Be Equal As Numbers for examples on how to use precision and why it does not always work as expected', ' See also Should Be Equal for an explanation on how to override the default error message with msg and values', ],

	'Should Not Be Equal As Strings' : ['Fails if objects are equal after converting them to strings', 'See Should Be Equal for an explanation on how to override the default error message with msg and values', 'If ignore_case is given a true value (see Boolean arguments), comparison is done case-insensitively', 'Strings are always NFC normalized', 'ignore_case is a new feature in Robot Framework 3', '0', '1', ],

	'Should Not Be True' : ['Fails if the given condition is true', 'See Should Be True for details about how condition is evaluated and how msg can be used to override the default error message', ],

	'Should Not Contain' : ['Fails if container contains item one or more times', "Works with strings, lists, and anything that supports Python's in operator", 'See Should Be Equal for an explanation on how to override the default error message with arguments msg and values', ' ignore_case has exactly the same semantics as with Should Contain', ''],

	'Should Not Contain Any' : ['Fails if container contains one or more of the *items', "Works with strings, lists, and anything that supports Python's in operator", 'Supports additional configuration parameters msg, values and ignore_case, which have exactly the same semantics as arguments with same names have with Should Contain', ' These arguments must always be given using name=value syntax after all items', 'Note that possible equal signs in items must be escaped with a backslash (e', 'g', ' foo=bar) to avoid them to be passed in as **configuration', ''],

	'Should Not End With' : ['Fails if the string str1 ends with the string str2', 'See Should Be Equal for an explanation on how to override the default error message with msg and values, as well as for semantics of the ignore_case option', ],

	'Should Not Match' : ['Fails if the given string matches the given pattern', 'Pattern matching is similar as matching files in a shell with *, ? and [chars] acting as wildcards', ' See the Glob patterns section for more information', 'See Should Be Equal for an explanation on how to override the default error message with msg and values, as well as for semantics of the ignore_case option', ],

	'Should Not Match Regexp' : ['Fails if string matches pattern as a regular expression', 'See Should Match Regexp for more information about arguments', ],

	'Should Not Start With' : ['Fails if the string str1 starts with the string str2', 'See Should Be Equal for an explanation on how to override the default error message with msg and values, as well as for semantics of the ignore_case option', ],

	'Should Start With' : ['Fails if the string str1 does not start with the string str2', 'See Should Be Equal for an explanation on how to override the default error message with msg and values, as well as for semantics of the ignore_case option', ],

	'Sleep' : ['Pauses the test executed for the given time', 'time may be either a number or a time string', ' Time strings are in a format such as 1 day 2 hours 3 minutes 4 seconds 5milliseconds or 1d 2h 3m 4s 5ms, and they are fully explained in an appendix of Robot Framework User Guide', ' Optional reason can be used to explain why sleeping is necessary', ' Both the time slept and the reason are logged', ''],

	'Variable Should Exist' : ['Fails unless the given variable exists within the current scope', 'The name of the variable can be given either as a normal variable name (e', 'g', ' ${NAME}) or in escaped format (e', 'g', ' ${NAME})', ' Notice that the former has some limitations explained in Set Suite Variable', 'The default error message can be overridden with the msg argument', 'See also Variable Should Not Exist and Keyword Should Exist', ],

	'Variable Should Not Exist' : ['Fails if the given variable exists within the current scope', 'The name of the variable can be given either as a normal variable name (e', 'g', ' ${NAME}) or in escaped format (e', 'g', ' ${NAME})', ' Notice that the former has some limitations explained in Set Suite Variable', 'The default error message can be overridden with the msg argument', 'See also Variable Should Exist and Keyword Should Exist', ],

	'Wait Until Keyword Succeeds' : ['Runs the specified keyword and retries if it fails', 'name and args define the keyword that is executed similarly as with Run Keyword', ' How long to retry running the keyword is defined using retry argument either as timeout or count', ' retry_interval is the time to wait before trying to run the keyword again after the previous run has failed', "If retry is given as timeout, it must be in Robot Framework's time format (e", 'g', ' 1 minute, 2 min 3 s, 4', '5) that is explained in an appendix of Robot Framework User Guide', ' If it is given as count, it must have times or x postfix (e', 'g', ' 5 times, 10 x)', " retry_interval must always be given in Robot Framework's time format", 'If the keyword does not succeed regardless of retries, this keyword fails', ' If the executed keyword passes, its return value is returned', ''],
	
		'Append To List' : ['Adds values to the end of list', "Example:Append To List${L1}xxxAppend To List${L2}xyz=&gt;${L1} = ['a', 'xxx']${L2} = ['a', 'b', 'x', 'y', 'z'],"],

	'Combine Lists' : ['Combines the given lists together and returns the result', 'The given lists are not altered by this keyword', "Example:${x} =Combine Lists${L1}${L2}${y} =Combine Lists${L1}${L2}${L1}=&gt;${x} = ['a', 'a', 'b']${y} = ['a', 'a', 'b', 'a']${L1} and ${L2} are not changed", ],

	'Convert To Dictionary' : ['Converts the given item to a Python dict type', 'Mainly useful for converting other mappings to normal dictionaries', " This includes converting Robot Framework's own DotDict instances that it uses if variables are created using the &amp;{var} syntax", 'Use Create Dictionary from the BuiltIn library for constructing new dictionaries', 'New in Robot Framework 2', '9', ],

	'Convert To List' : ['Converts the given item to a Python list type', 'Mainly useful for converting tuples and other iterable to lists', ' Use Create List from the BuiltIn library for constructing new lists', ],

	'Copy Dictionary' : ['Returns a copy of the given dictionary', 'The deepcopy argument controls should the returned dictionary be a shallow or deep copy', ' By default returns a shallow copy, but that can be changed by giving deepcopy a true value (see Boolean arguments)', ' This is a new option in Robot Framework 3', '1', '2', ' Earlier versions always returned shallow copies', 'The given dictionary is never altered by this keyword', ],

	'Copy List' : ['Returns a copy of the given list', 'If the optional deepcopy is given a true value, the returned list is a deep copy', ' New option in Robot Framework 3', '1', '2', 'The given list is never altered by this keyword', ],

	'Count Values In List' : ['Returns the number of occurrences of the given value in list', 'The search can be narrowed to the selected sublist by the start and end indexes having the same semantics as with Get Slice From List keyword', ' The given list is never altered by this keyword', 'Example:${x} =Count Values In List${L3}b=&gt;${x} = 1${L3} is not changed,'],

	'Dictionaries Should Be Equal' : ['Fails if the given dictionaries are not equal', "First the equality of dictionaries' keys is checked and after that all the key value pairs", ' If there are differences between the values, those are listed in the error message', ' The types of the dictionaries do not need to be same', 'See Lists Should Be Equal for more information about configuring the error message with msg and values arguments', ],

	'Dictionary Should Contain Item' : ['An item of key / value must be found in a dictionary', 'Value is converted to unicode for comparison', 'Use the msg argument to override the default error message', ],

	'Dictionary Should Contain Key' : ['Fails if key is not found from dictionary', 'Use the msg argument to override the default error message', ],

	'Dictionary Should Contain Sub Dictionary' : ['Fails unless all items in dict2 are found from dict1', 'See Lists Should Be Equal for more information about configuring the error message with msg and values arguments', ],

	'Dictionary Should Contain Value' : ['Fails if value is not found from dictionary', 'Use the msg argument to override the default error message', ],

	'Dictionary Should Not Contain Key' : ['Fails if key is found from dictionary', 'Use the msg argument to override the default error message', ],

	'Dictionary Should Not Contain Value' : ['Fails if value is found from dictionary', 'Use the msg argument to override the default error message', ],

	'Get Dictionary Items' : ['Returns items of the given dictionary as a list', 'Uses Get Dictionary Keys to get keys and then returns corresponding items', ' By default keys are sorted and items returned in that order, but this can be changed by giving sort_keys a false value (see Boolean arguments)', ' Notice that with Python 3', '5 and earlier dictionary order is undefined unless using ordered dictionaries', 'Items are returned as a flat list so that first item is a key, second item is a corresponding value, third item is the second key, and so on', 'The given dictionary is never altered by this keyword', "Example:${sorted} =Get Dictionary Items${D3}${unsorted} =Get Dictionary Items${D3}sort_keys=False=&gt;${sorted} = ['a', 1, 'b', 2, 'c', 3]${unsorted} = ['b', 2, 'a', 1, 'c', 3]    # Order depends on Python version", 'sort_keys is a new option in Robot Framework 3', '1', '2', ' Earlier items were always sorted based on keys', ],

	'Get Dictionary Keys' : ['Returns keys of the given dictionary as a list', 'By default keys are returned in sorted order (assuming they are sortable), but they can be returned in the original order by giving sort_keys  a false value (see Boolean arguments)', ' Notice that with Python 3', '5 and earlier dictionary order is undefined unless using ordered dictionaries', 'The given dictionary is never altered by this keyword', "Example:${sorted} =Get Dictionary Keys${D3}${unsorted} =Get Dictionary Keys${D3}sort_keys=False=&gt;${sorted} = ['a', 'b', 'c']${unsorted} = ['b', 'a', 'c']   # Order depends on Python version", 'sort_keys is a new option in Robot Framework 3', '1', '2', ' Earlier keys were always sorted', ],

	'Get Dictionary Values' : ['Returns values of the given dictionary as a list', 'Uses Get Dictionary Keys to get keys and then returns corresponding values', ' By default keys are sorted and values returned in that order, but this can be changed by giving sort_keys a false value (see Boolean arguments)', ' Notice that with Python 3', '5 and earlier dictionary order is undefined unless using ordered dictionaries', 'The given dictionary is never altered by this keyword', 'Example:${sorted} =Get Dictionary Values${D3}${unsorted} =Get Dictionary Values${D3}sort_keys=False=&gt;${sorted} = [1, 2, 3]${unsorted} = [2, 1, 3]    # Order depends on Python version', 'sort_keys is a new option in Robot Framework 3', '1', '2', ' Earlier values were always sorted based on keys', ],

	'Get From Dictionary' : ['Returns a value from the given dictionary based on the given key', 'If the given key cannot be found from the dictionary, this keyword fails', 'The given dictionary is never altered by this keyword', 'Example:${value} =Get From Dictionary${D3}b=&gt;${value} = 2,'],

	'Get From List' : ['Returns the value specified with an index from list', 'The given list is never altered by this keyword', 'Index 0 means the first position, 1 the second, and so on', ' Similarly, -1 is the last position, -2 the second last, and so on', ' Using an index that does not exist on the list causes an error', ' The index can be either an integer or a string that can be converted to an integer', "Examples (including Python equivalents in comments):${x} =Get From List${L5}0# L5[0]${y} =Get From List${L5}-2# L5[-2]=&gt;${x} = 'a'${y} = 'd'${L5} is not changed,"],

	'Get Index From List' : ['Returns the index of the first occurrence of the value on the list', 'The search can be narrowed to the selected sublist by the start and end indexes having the same semantics as with Get Slice From List keyword', ' In case the value is not found, -1 is returned', ' The given list is never altered by this keyword', 'Example:${x} =Get Index From List${L5}d=&gt;${x} = 3${L5} is not changed,'],

	'Get Match Count' : ['Returns the count of matches to pattern in list', 'For more information on pattern, case_insensitive, and whitespace_insensitive, see Should Contain Match', ''],

	'Get Matches' : ['Returns a list of matches to pattern in list', 'For more information on pattern, case_insensitive, and whitespace_insensitive, see Should Contain Match', ''],

	'Get Slice From List' : ['Returns a slice of the given list between start and end indexes', 'The given list is never altered by this keyword', 'If both start and end are given, a sublist containing values from start to end is returned', ' This is the same as list[start:end] in Python', ' To get all items from the beginning, use 0 as the start value, and to get all items until and including the end, use None (default) as the end value', 'Using start or end not found on the list is the same as using the largest (or smallest) available index', 'Examples (incl', " Python equivalents in comments):${x} =Get Slice From List${L5}24# L5[2:4]${y} =Get Slice From List${L5}1# L5[1:None]${z} =Get Slice From List${L5}end=-2# L5[0:-2]=&gt;${x} = ['c', 'd']${y} = ['b', 'c', 'd', 'e']${z} = ['a', 'b', 'c']${L5} is not changed,"],

	'Insert Into List' : ['Inserts value into list to the position specified with index', 'Index 0 adds the value into the first position, 1 to the second, and so on', ' Inserting from right works with negative indices so that -1 is the second last position, -2 third last, and so on', ' Use Append To List to add items to the end of the list', 'If the absolute value of the index is greater than the length of the list, the value is added at the end (positive index) or the beginning (negative index)', ' An index can be given either as an integer or a string that can be converted to an integer', "Example:Insert Into List${L1}0xxxInsert Into List${L2}${-1}xxx=&gt;${L1} = ['xxx', 'a']${L2} = ['a', 'xxx', 'b'],"],

	'Keep In Dictionary' : ['Keeps the given keys in the dictionary and removes all other', 'If the given key cannot be found from the dictionary, it is ignored', "Example:Keep In Dictionary${D5}bxd=&gt;${D5} = {'b': 2, 'd': 4},"],

	'List Should Contain Sub List' : ['Fails if not all of the elements in list2 are found in list1', 'The order of values and the number of values are not taken into account', 'See Lists Should Be Equal for more information about configuring the error message with msg and values arguments', ],

	'List Should Contain Value' : ['Fails if the value is not found from list', 'Use the msg argument to override the default error message', ],

	'List Should Not Contain Duplicates' : ['Fails if any element in the list is found from it more than once', 'The default error message lists all the elements that were found from the list multiple times, but it can be overridden by giving a custom msg', ' All multiple times found items and their counts are also logged', 'This keyword works with all iterables that can be converted to a list', ' The original iterable is never altered', ],

	'List Should Not Contain Value' : ['Fails if the value is found from list', 'Use the msg argument to override the default error message', ],

	'Lists Should Be Equal' : ['Fails if given lists are unequal', 'The keyword first verifies that the lists have equal lengths, and then it checks are all their values equal', ' Possible differences between the values are listed in the default error message like Index 4: ABC != Abc', ' The types of the lists do not need to be the same', ' For example, Python tuple and list with same content are considered equal', 'The error message can be configured using msg and values arguments:If msg is not given, the default error message is used', 'If msg is given and values gets a value considered true (see Boolean arguments), the error message starts with the given msg followed by a newline and the default message', 'If msg is given and values  is not given a true value, the error message is just the given msg', 'The optional names argument can be used for naming the indices shown in the default error message', ' It can either be a list of names matching the indices in the lists or a dictionary where keys are indices that need to be named', ' It is not necessary to name all of the indices', '  When using a dictionary, keys can be either integers or strings that can be converted to integers', ''],

	'Log Dictionary' : ['Logs the size and contents of the dictionary using given level', 'Valid levels are TRACE, DEBUG, INFO (default), and WARN', 'If you only want to log the size, use keyword Get Length from the BuiltIn library', ],

	'Log List' : ['Logs the length and contents of the list using given level', 'Valid levels are TRACE, DEBUG, INFO (default), and WARN', 'If you only want to the length, use keyword Get Length from the BuiltIn library', ],

	'Pop From Dictionary' : ['Pops the given key from the dictionary and returns its value', 'By default the keyword fails if the given key cannot be found from the dictionary', ' If optional default value is given, it will be returned instead of failing', "Example:${val}=Pop From Dictionary${D3}b=&gt;${val} = 2${D3} = {'a': 1, 'c': 3}New in Robot Framework 2", '9', '2', ],

	'Remove Duplicates' : ['Returns a list without duplicates based on the given list', 'Creates and returns a new list that contains all items in the given list so that one item can appear only once', ' Order of the items in the new list is the same as in the original except for missing duplicates', ' Number of the removed duplicates is logged', ],

	'Remove From Dictionary' : ['Removes the given keys from the dictionary', 'If the given key cannot be found from the dictionary, it is ignored', "Example:Remove From Dictionary${D3}bxy=&gt;${D3} = {'a': 1, 'c': 3},"],

	'Remove From List' : ['Removes and returns the value specified with an index from list', 'Index 0 means the first position, 1 the second and so on', ' Similarly, -1 is the last position, -2 the second last, and so on', ' Using an index that does not exist on the list causes an error', ' The index can be either an integer or a string that can be converted to an integer', "Example:${x} =Remove From List${L2}0=&gt;${x} = 'a'${L2} = ['b'],"],

	'Remove Values From List' : ['Removes all occurrences of given values from list', 'It is not an error if a value does not exist in the list at all', "Example:Remove Values From List${L4}acef=&gt;${L4} = ['b', 'd'],"],

	'Reverse List' : ['Reverses the given list in place', 'Note that the given list is changed and nothing is returned', ' Use Copy List first, if you need to keep also the original order', "Reverse List${L3}=&gt;${L3} = ['c', 'b', 'a'],"],

	'Set List Value' : ['Sets the value of list specified by index to the given value', 'Index 0 means the first position, 1 the second and so on', ' Similarly, -1 is the last position, -2 second last, and so on', ' Using an index that does not exist on the list causes an error', ' The index can be either an integer or a string that can be converted to an integer', "Example:Set List Value${L3}1xxxSet List Value${L3}-1yyy=&gt;${L3} = ['a', 'xxx', 'yyy'],"],

	'Set To Dictionary' : ['Adds the given key_value_pairs and items to the dictionary', "Giving items as key_value_pairs means giving keys and values as separate arguments:Set To Dictionary${D1}keyvaluesecond${2}=&gt;${D1} = {'a': 1, 'key': 'value', 'second': 2}Set To Dictionary${D1}key=valuesecond=${2}The latter syntax is typically more convenient to use, but it has a limitation that keys must be strings", 'If given keys already exist in the dictionary, their values are updated', ],

	'Should Contain Match' : ['Fails if pattern is not found in list', 'By default, pattern matching is similar to matching files in a shell and is case-sensitive and whitespace-sensitive', ' In the pattern syntax, * matches to anything and ? matches to any single character', ' You can also prepend glob= to your pattern to explicitly use this pattern matching behavior', 'If you prepend regexp= to your pattern, your pattern will be used according to the Python re module regular expression syntax', ' Important note: Backslashes are an escape character, and must be escaped with another backslash (e', 'g', ' regexp=d{6} to search for d{6})', ' See BuiltIn', 'Should Match Regexp for more details', 'If case_insensitive is given a true value (see Boolean arguments), the pattern matching will ignore case', 'If whitespace_insensitive is given a true value (see Boolean arguments), the pattern matching will ignore whitespace', 'Non-string values in lists are ignored when matching patterns', 'Use the msg argument to override the default error message', 'See also Should Not Contain Match', ''],

	'Should Not Contain Match' : ['Fails if pattern is found in list', 'Exact opposite of Should Contain Match keyword', ' See that keyword for information about arguments and usage in general', ],

	'Sort List' : ['Sorts the given list in place', 'Sorting fails if items in the list are not comparable with each others', ' On Python 2 most objects are comparable, but on Python 3 comparing, for example, strings with numbers is not possible', 'Note that the given list is changed and nothing is returned', ' Use Copy List first, if you need to keep also the original order', ],
	
		'Add Time To Date' : ['Adds time to date and returns the resulting date', 'Arguments:date:           Date to add time to in one of the supported date formats', 'time:           Time that is added in one of the supported time formats', 'result_format:  Format of the returned date', 'exclude_millis: When set to any true value, rounds and drops milliseconds as explained in millisecond handling', 'date_format:    Possible custom timestamp format of date', ''],

	'Add Time To Time' : ['Adds time to another time and returns the resulting time', 'Arguments:time1:          First time in one of the supported time formats', 'time2:          Second time in one of the supported time formats', 'result_format:  Format of the returned time', 'exclude_millis: When set to any true value, rounds and drops milliseconds as explained in millisecond handling', ''],

	'Convert Date' : ['Converts between supported date formats', 'Arguments:date:           Date in one of the supported date formats', 'result_format:  Format of the returned date', 'exclude_millis: When set to any true value, rounds and drops milliseconds as explained in millisecond handling', 'date_format:    Specifies possible custom timestamp format', ''],

	'Convert Time' : ['Converts between supported time formats', 'Arguments:time:           Time in one of the supported time formats', 'result_format:  Format of the returned time', 'exclude_millis: When set to any true value, rounds and drops milliseconds as explained in millisecond handling', ''],

	'Get Current Date' : ['Returns current local or UTC time with an optional increment', 'Arguments:time_zone:      Get the current time on this time zone', ' Currently only local (default) and UTC are supported', 'increment:      Optional time increment to add to the returned date in one of the supported time formats', ' Can be negative', 'result_format:  Format of the returned date (see date formats)', 'exclude_millis: When set to any true value, rounds and drops milliseconds as explained in millisecond handling', ''],

	'Subtract Date From Date' : ['Subtracts date from another date and returns time between', 'Arguments:date1:          Date to subtract another date from in one of the supported date formats', 'date2:          Date that is subtracted in one of the supported date formats', 'result_format:  Format of the returned time (see time formats)', 'exclude_millis: When set to any true value, rounds and drops milliseconds as explained in millisecond handling', 'date1_format:   Possible custom timestamp format of date1', 'date2_format:   Possible custom timestamp format of date2', ''],

	'Subtract Time From Date' : ['Subtracts time from date and returns the resulting date', 'Arguments:date:           Date to subtract time from in one of the supported date formats', 'time:           Time that is subtracted in one of the supported time formats', 'result_format:  Format of the returned date', 'exclude_millis: When set to any true value, rounds and drops milliseconds as explained in millisecond handling', 'date_format:    Possible custom timestamp format of date', ''],

	'Subtract Time From Time' : ['Subtracts time from another time and returns the resulting time', 'Arguments:time1:          Time to subtract another time from in one of the supported time formats', 'time2:          Time to subtract in one of the supported time formats', 'result_format:  Format of the returned time', 'exclude_millis: When set to any true value, rounds and drops milliseconds as explained in millisecond handling', ''],
	
	'Execute Manual Step' : ['Pauses test execution until user sets the keyword status', 'User can press either PASS or FAIL button', ' In the latter case execution fails and an additional dialog is opened for defining the error message', 'message is the instruction shown in the initial dialog and default_error is the default value shown in the possible error message dialog', ],

	'Get Selection From User' : ['Pauses test execution and asks user to select a value', 'The selected value is returned', ' Pressing Cancel fails the keyword', 'message is the instruction shown in the dialog and values are the options given to the user', 'Example:${user} =Get Selection From UserSelect useruser1user2admin,'],

	'Get Selections From User' : ['Pauses test execution and asks user to select multiple values', 'The selected values are returned as a list', ' Selecting no values is OK and in that case the returned list is empty', ' Pressing Cancel fails the keyword', 'message is the instruction shown in the dialog and values are the options given to the user', 'Example:${users} =Get Selections From UserSelect usersuser1user2adminNew in Robot Framework 3', '1', ],

	'Get Value From User' : ['Pauses test execution and asks user to input a value', 'Value typed by the user, or the possible default value, is returned', ' Returning an empty value is fine, but pressing Cancel fails the keyword', 'message is the instruction shown in the dialog and default_value is the possible default value shown in the input field', 'If hidden is given a true value, the value typed by the user is hidden', ' hidden is considered true if it is a non-empty string not equal to false, none or no, case-insensitively', ' If it is not a string, its truth value is got directly using same rules as in Python', 'Example:${username} =Get Value From UserInput user namedefault${password} =Get Value From UserInput passwordhidden=yesConsidering strings false and no to be false is new in RF 2', '9 and considering string none false is new in RF 3', '0', '3', ],

	'Pause Execution' : ['Pauses test execution until user clicks Ok button', 'message is the message shown in the dialog', ],
	
		'Append To Environment Variable' : ['Appends given values to environment variable name', 'If the environment variable already exists, values are added after it, and otherwise a new environment variable is created', 'Values are, by default, joined together using the operating system path separator (; on Windows, : elsewhere)', ' This can be changed by giving a separator after the values like separator=value', ' No other configuration parameters are accepted', 'Examples (assuming NAME and NAME2 do not exist initially):Append To Environment VariableNAMEfirstShould Be Equal%{NAME}firstAppend To Environment VariableNAMEsecondthirdShould Be Equal%{NAME}first${:}second${:}thirdAppend To Environment VariableNAME2firstseparator=-Should Be Equal%{NAME2}firstAppend To Environment VariableNAME2secondseparator=-Should Be Equal%{NAME2}first-second,'],

	'Append To File' : ['Appends the given content to the specified file', 'If the file exists, the given text is written to its end', ' If the file does not exist, it is created', 'Other than not overwriting possible existing files, this keyword works exactly like Create File', ' See its documentation for more details about the usage', 'Note that special encodings SYSTEM and CONSOLE only work with this keyword starting from Robot Framework 3', '1', '2', ],

	'Copy Directory' : ['Copies the source directory into the destination', 'If the destination exists, the source is copied under it', ' Otherwise the destination directory and the possible missing intermediate directories are created', ],

	'Copy File' : ['Copies the source file into the destination', 'Source must be a path to an existing file or a glob pattern (see Pattern matching) that matches exactly one file', ' How the destination is interpreted is explained below', '1) If the destination is an existing file, the source file is copied over it', '2) If the destination is an existing directory, the source file is copied into it', ' A possible file with the same name as the source is overwritten', '3) If the destination does not exist and it ends with a path separator (/ or ), it is considered a directory', ' That directory is created and a source file copied into it', ' Possible missing intermediate directories are also created', '4) If the destination does not exist and it does not end with a path separator, it is considered a file', ' If the path to the file does not exist, it is created', 'The resulting destination path is returned since Robot Framework 2', '9', '2', 'See also Copy Files, Move File, and Move Files', ],

	'Copy Files' : ['Copies specified files to the target directory', 'Source files can be given as exact paths and as glob patterns (see Pattern matching)', ' At least one source must be given, but it is not an error if it is a pattern that does not match anything', 'Last argument must be the destination directory', ' If the destination does not exist, it will be created', ''],

	'Count Directories In Directory' : ['Wrapper for Count Items In Directory returning only directory count', ],

	'Count Files In Directory' : ['Wrapper for Count Items In Directory returning only file count', ],

	'Count Items In Directory' : ['Returns and logs the number of all items in the given directory', 'The argument pattern has the same semantics as with List Directory keyword', ' The count is returned as an integer, so it must be checked e', 'g', ' with the built-in keyword Should Be Equal As Integers', ],

	'Create Binary File' : ['Creates a binary file with the given content', 'If content is given as a Unicode string, it is first converted to bytes character by character', ' All characters with ordinal below 256 can be used and are converted to bytes with same values', ' Using characters with higher ordinal is an error', 'Byte strings, and possible other types, are written to the file as is', 'If the directory for the file does not exist, it is created, along with missing intermediate directories', ''],

	'Create Directory' : ['Creates the specified directory', 'Also possible intermediate directories are created', ' Passes if the directory already exists, but fails if the path exists and is not a directory', ],

	'Create File' : ['Creates a file with the given content and encoding', 'If the directory where the file is created does not exist, it is automatically created along with possible missing intermediate directories', ' Possible existing file is overwritten', 'On Windows newline characters () in content are automatically converted to Windows native newline sequence (r)', 'See Get File for more information about possible encoding values, including special values SYSTEM and CONSOLE', ''],

	'Directory Should Be Empty' : ['Fails unless the specified directory is empty', 'The default error message can be overridden with the msg argument', ],

	'Directory Should Exist' : ['Fails unless the given path points to an existing directory', 'The path can be given as an exact path or as a glob pattern', ' The pattern matching syntax is explained in introduction', ' The default error message can be overridden with the msg argument', ],

	'Directory Should Not Be Empty' : ['Fails if the specified directory is empty', 'The default error message can be overridden with the msg argument', ],

	'Directory Should Not Exist' : ['Fails if the given path points to an existing file', 'The path can be given as an exact path or as a glob pattern', ' The pattern matching syntax is explained in introduction', ' The default error message can be overridden with the msg argument', ],

	'Empty Directory' : ['Deletes all the content from the given directory', 'Deletes both files and sub-directories, but the specified directory itself if not removed', ' Use Remove Directory if you want to remove the whole directory', ],

	'Environment Variable Should Be Set' : ['Fails if the specified environment variable is not set', 'The default error message can be overridden with the msg argument', ],

	'Environment Variable Should Not Be Set' : ['Fails if the specified environment variable is set', 'The default error message can be overridden with the msg argument', ],

	'File Should Be Empty' : ['Fails unless the specified file is empty', 'The default error message can be overridden with the msg argument', ],

	'File Should Exist' : ['Fails unless the given path points to an existing file', 'The path can be given as an exact path or as a glob pattern', ' The pattern matching syntax is explained in introduction', ' The default error message can be overridden with the msg argument', ],

	'File Should Not Be Empty' : ['Fails if the specified directory is empty', 'The default error message can be overridden with the msg argument', ],

	'File Should Not Exist' : ['Fails if the given path points to an existing file', 'The path can be given as an exact path or as a glob pattern', ' The pattern matching syntax is explained in introduction', ' The default error message can be overridden with the msg argument', ],

	'Get Binary File' : ['Returns the contents of a specified file', 'This keyword reads the specified file and returns the contents as is', ' See also Get File', ],

	'Get Environment Variable' : ['Returns the value of an environment variable with the given name', 'If no such environment variable is set, returns the default value, if given', ' Otherwise fails the test case', 'Returned variables are automatically decoded to Unicode using the system encoding', 'Note that you can also access environment variables directly using the variable syntax %{ENV_VAR_NAME}', ],

	'Get Environment Variables' : ['Returns currently available environment variables as a dictionary', 'Both keys and values are decoded to Unicode using the system encoding', ' Altering the returned dictionary has no effect on the actual environment variables', ],

	'Get File' : ['Returns the contents of a specified file', 'This keyword reads the specified file and returns the contents', ' Line breaks in content are converted to platform independent form', ' See also Get Binary File', 'encoding defines the encoding of the file', ' The default value is UTF-8, which means that UTF-8 and ASCII encoded files are read correctly', ' In addition to the encodings supported by the underlying Python implementation, the following special encoding values can be used:SYSTEM: Use the default system encoding', 'CONSOLE: Use the console encoding', ' Outside Windows this is same as the system encoding', 'encoding_errors argument controls what to do if decoding some bytes fails', ' All values accepted by decode method in Python are valid, but in practice the following values are most useful:strict: Fail if characters cannot be decoded (default)', 'ignore: Ignore characters that cannot be decoded', 'replace: Replace characters that cannot be decoded with a replacement character', 'Support for SYSTEM and CONSOLE encodings in Robot Framework 3', '0', ],

	'Get File Size' : ['Returns and logs file size as an integer in bytes', ],

	'Get Modified Time' : ['Returns the last modification time of a file or directory', 'How time is returned is determined based on the given format string as follows', ' Note that all checks are case-insensitive', ' Returned time is also automatically logged', '1) If format contains the word epoch, the time is returned in seconds after the UNIX epoch', ' The return value is always an integer', '2) If format contains any of the words year, month, day, hour, min or sec, only the selected parts are returned', ' The order of the returned parts is always the one in the previous sentence and the order of the words in format is not significant', ' The parts are returned as zero-padded strings (e', 'g', ' May -&gt; 05)', '3) Otherwise, and by default, the time is returned as a timestamp string in the format 2006-02-24 15:08:31', "Examples (when the modified time of ${CURDIR} is 2006-03-29 15:06:21):${time} =Get Modified Time${CURDIR}${secs} =Get Modified Time${CURDIR}epoch${year} =Get Modified Time${CURDIR}return year${y}${d} =Get Modified Time${CURDIR}year,day@{time} =Get Modified Time${CURDIR}year,month,day,hour,min,sec=&gt;${time} = '2006-03-29 15:06:21'${secs} = 1143637581${year} = '2006'${y} = '2006' &amp; ${d} = '29'@{time} = ['2006', '03', '29', '15', '06', '21'],"],

	'Grep File' : ['Returns the lines of the specified file that match the pattern', 'This keyword reads a file from the file system using the defined path, encoding and encoding_errors similarly as Get File', ' A difference is that only the lines that match the given pattern are returned', ' Lines are returned as a single string catenated back together with newlines and the number of matched lines is automatically logged', ' Possible trailing newline is never returned', 'A line matches if it contains the pattern anywhere in it and it does not need to match the pattern fully', ' The pattern matching syntax is explained in introduction, and in this case matching is case-sensitive', ''],

	'Join Path' : ['Joins the given path part(s) to the given base path', 'The path separator (/ or ) is inserted when needed and the possible absolute paths handled as expected', ' The resulted path is also normalized', ''],

	'Join Paths' : ['Joins given paths with base and returns resulted paths', 'See Join Path for more information', ''],

	'List Directories In Directory' : ['Wrapper for List Directory that returns only directories', ],

	'List Directory' : ['Returns and logs items in a directory, optionally filtered with pattern', 'File and directory names are returned in case-sensitive alphabetical order, e', 'g', " ['A Name', 'Second', 'a lower case name', 'one more']", ' Implicit directories ', ' and ', '', ' are not returned', ' The returned items are automatically logged', 'File and directory names are returned relative to the given path (e', 'g', " 'file", "txt') by default", ' If you want them be returned in absolute format (e', 'g', " '/home/robot/file", "txt'), give the absolute argument a true value (see Boolean arguments)", 'If pattern is given, only items matching it are returned', ' The pattern matching syntax is explained in introduction, and in this case matching is case-sensitive', 'Examples (using also other List Directory variants):@{items} =List Directory${TEMPDIR}@{files} =List Files In Directory/tmp*', 'txtabsolute${count} =Count Files In Directory${CURDIR}???,'],

	'List Files In Directory' : ['Wrapper for List Directory that returns only files', ],

	'Log Environment Variables' : ['Logs all environment variables using the given log level', 'Environment variables are also returned the same way as with Get Environment Variables keyword', ],

	'Log File' : ['Wrapper for Get File that also logs the returned file', 'The file is logged with the INFO level', ' If you want something else, just use Get File and the built-in keyword Log with the desired level', 'See Get File for more information about encoding and encoding_errors arguments', ],

	'Move Directory' : ['Moves the source directory into a destination', 'Uses Copy Directory keyword internally, and source and destination arguments have exactly same semantics as with that keyword', ],

	'Move File' : ['Moves the source file into the destination', 'Arguments have exactly same semantics as with Copy File keyword', ' Destination file path is returned since Robot Framework 2', '9', '2', 'If the source and destination are on the same filesystem, rename operation is used', ' Otherwise file is copied to the destination filesystem and then removed from the original filesystem', 'See also Move Files, Copy File, and Copy Files', ],

	'Move Files' : ['Moves specified files to the target directory', 'Arguments have exactly same semantics as with Copy Files keyword', 'See also Move File, Copy File, and Copy Files', ],

	'Normalize Path' : ['Normalizes the given path', 'Collapses redundant separators and up-level references', 'Converts / to  on Windows', "Replaces initial ~ or ~user by that user's home directory", ' The latter is not supported on Jython', 'If case_normalize is given a true value (see Boolean arguments) on Windows, converts the path to all lowercase', ' New in Robot Framework 3', '1', ''],

	'Remove Directory' : ['Removes the directory pointed to by the given path', 'If the second argument recursive is given a true value (see Boolean arguments), the directory is removed recursively', ' Otherwise removing fails if the directory is not empty', 'If the directory pointed to by the path does not exist, the keyword passes, but it fails, if the path points to a file', ],

	'Remove Environment Variable' : ['Deletes the specified environment variable', 'Does nothing if the environment variable is not set', 'It is possible to remove multiple variables by passing them to this keyword as separate arguments', ],

	'Remove File' : ['Removes a file with the given path', 'Passes if the file does not exist, but fails if the path does not point to a regular file (e', 'g', ' it points to a directory)', 'The path can be given as an exact path or as a glob pattern', ' The pattern matching syntax is explained in introduction', ' If the path is a pattern, all files matching it are removed', ],

	'Remove Files' : ['Uses Remove File to remove multiple files one-by-one', 'Example:Remove Files${TEMPDIR}${/}foo', 'txt${TEMPDIR}${/}bar', 'txt${TEMPDIR}${/}zap', 'txt,'],

	'Run' : ['Runs the given command in the system and returns the output', 'The execution status of the command is not checked by this keyword, and it must be done separately based on the returned output', ' If the execution return code is needed, either Run And Return RC or Run And Return RC And Output can be used', 'The standard error stream is automatically redirected to the standard output stream by adding 2&gt;&amp;1 after the executed command', ' This automatic redirection is done only when the executed command does not contain additional output redirections', ' You can thus freely forward the standard error somewhere else, for example, like my_command 2&gt;stderr', 'txt', 'The returned output contains everything written into the standard output or error streams by the command (unless either of them is redirected explicitly)', ' Many commands add an extra newline () after the output to make it easier to read in the console', ' To ease processing the returned output, this possible trailing newline is stripped by this keyword', ''],

	'Run And Return Rc' : ['Runs the given command in the system and returns the return code', 'The return code (RC) is returned as a positive integer in range from 0 to 255 as returned by the executed command', ' On some operating systems (notable Windows) original return codes can be something else, but this keyword always maps them to the 0-255 range', ' Since the RC is an integer, it must be checked e', 'g', ' with the keyword Should Be Equal As Integers instead of Should Be Equal (both are built-in keywords)', ''],

	'Run And Return Rc And Output' : ['Runs the given command in the system and returns the RC and output', 'The return code (RC) is returned similarly as with Run And Return RC and the output similarly as with Run', ''],

	'Set Environment Variable' : ['Sets an environment variable to a specified value', 'Values are converted to strings automatically', ' Set variables are automatically encoded using the system encoding', ],

	'Set Modified Time' : ['Sets the file modification and access times', 'Changes the modification and access times of the given file to the value determined by mtime', ' The time can be given in different formats described below', ' Note that all checks involving strings are case-insensitive', ' Modified time can only be set to regular files', '1) If mtime is a number, or a string that can be converted to a number, it is interpreted as seconds since the UNIX epoch (1970-01-01 00:00:00 UTC)', ' This documentation was originally written about 1177654467 seconds after the epoch', '2) If mtime is a timestamp, that time will be used', ' Valid timestamp formats are YYYY-MM-DD hh:mm:ss and YYYYMMDD hhmmss', '3) If mtime is equal to NOW, the current local time is used', '4) If mtime is equal to UTC, the current time in UTC is used', '5) If mtime is in the format like NOW - 1 day or UTC + 1 hour 30 min, the current local/UTC time plus/minus the time specified with the time string is used', ' The time string format is described in an appendix of Robot Framework User Guide', ''],

	'Should Exist' : ['Fails unless the given path (file or directory) exists', 'The path can be given as an exact path or as a glob pattern', ' The pattern matching syntax is explained in introduction', ' The default error message can be overridden with the msg argument', ],

	'Should Not Exist' : ['Fails if the given path (file or directory) exists', 'The path can be given as an exact path or as a glob pattern', ' The pattern matching syntax is explained in introduction', ' The default error message can be overridden with the msg argument', ],

	'Split Extension' : ['Splits the extension from the given path', 'The given path is first normalized (e', 'g', ' possible trailing path separators removed, special directories ', '', ' and ', ' removed)', ' The base path and extension are returned as separate components so that the dot used as an extension separator is removed', ' If the path contains no extension, an empty string is returned for it', ' Possible leading and trailing dots in the file name are never considered to be extension separators', ''],

	'Split Path' : ['Splits the given path from the last path separator (/ or )', 'The given path is first normalized (e', 'g', ' a possible trailing path separator is removed, special directories ', '', ' and ', ' removed)', ' The parts that are split are returned as separate components', ''],

	'Touch' : ['Emulates the UNIX touch command', 'Creates a file, if it does not exist', ' Otherwise changes its access and modification times to the current time', 'Fails if used with the directories or the parent directory of the given file does not exist', ],

	'Wait Until Created' : ['Waits until the given file or directory is created', 'The path can be given as an exact path or as a glob pattern', ' The pattern matching syntax is explained in introduction', ' If the path is a pattern, the keyword returns when an item matching it is created', 'The optional timeout can be used to control the maximum time of waiting', ' The timeout is given as a timeout string, e', 'g', ' in a format 15 seconds, 1min 10s or just 10', ' The time string format is described in an appendix of Robot Framework User Guide', 'If the timeout is negative, the keyword is never timed-out', ' The keyword returns immediately, if the path already exists', ],

	'Wait Until Removed' : ['Waits until the given file or directory is removed', 'The path can be given as an exact path or as a glob pattern', ' The pattern matching syntax is explained in introduction', ' If the path is a pattern, the keyword waits until all matching items are removed', 'The optional timeout can be used to control the maximum time of waiting', ' The timeout is given as a timeout string, e', 'g', ' in a format 15 seconds, 1min 10s or just 10', ' The time string format is described in an appendix of Robot Framework User Guide', 'If the timeout is negative, the keyword is never timed-out', ' The keyword returns immediately, if the path does not exist in the first place', ],
	
		'Get Process Id' : ['Returns the process ID (pid) of the process as an integer', 'If handle is not given, uses the current active process', 'Notice that the pid is not the same as the handle returned by Start Process that is used internally by this library', ],

	'Get Process Object' : ['Return the underlying subprocess', 'Popen object', 'If handle is not given, uses the current active process', ],

	'Get Process Result' : ['Returns the specified result object or some of its attributes', 'The given handle specifies the process whose results should be returned', ' If no handle is given, results of the current active process are returned', ' In either case, the process must have been finishes before this keyword can be used', ' In practice this means that processes started with Start Process must be finished either with Wait For Process or Terminate Process before using this keyword', 'If no other arguments than the optional handle are given, a whole result object is returned', ' If one or more of the other arguments are given any true value, only the specified attributes of the result object are returned', ' These attributes are always returned in the same order as arguments are specified in the keyword signature', ' See Boolean arguments section for more details about true and false values', ''],

	'Is Process Running' : ['Checks is the process running or not', 'If handle is not given, uses the current active process', 'Returns True if the process is still running and False otherwise', ],

	'Join Command Line' : ['Joins arguments into one command line string', 'In resulting command line string arguments are delimited with a space, arguments containing spaces are surrounded with quotes, and possible quotes are escaped with a backslash', 'If this keyword is given only one argument and that is a list like object, then the values of that list are joined instead', 'Example:${cmd} =Join Command Line--optionvalue with spacesShould Be Equal${cmd}--option value with spacesNew in Robot Framework 2', '9', '2', ],

	'Process Should Be Running' : ['Verifies that the process is running', 'If handle is not given, uses the current active process', 'Fails if the process has stopped', ],

	'Process Should Be Stopped' : ['Verifies that the process is not running', 'If handle is not given, uses the current active process', 'Fails if the process is still running', ],

	'Run Process' : ['Runs a process and waits for it to complete', 'command and *arguments specify the command to execute and arguments passed to it', ' See Specifying command and arguments for more details', '**configuration contains additional configuration related to starting processes and waiting for them to finish', ' See Process configuration for more details about configuration related to starting processes', ' Configuration related to waiting for processes consists of timeout and on_timeout arguments that have same semantics as with Wait For Process keyword', ' By default there is no timeout, and if timeout is defined the default action on timeout is terminate', 'Returns a result object containing information about the execution', 'Note that possible equal signs in *arguments must be escaped with a backslash (e', 'g', ' name=value) to avoid them to be passed in as **configuration', ''],

	'Send Signal To Process' : ['Sends the given signal to the specified process', 'If handle is not given, uses the current active process', 'Signal can be specified either as an integer as a signal name', ' In the latter case it is possible to give the name both with or without SIG prefix, but names are case-sensitive', ' For example, all the examples below send signal INT (2):Send Signal To Process2# Send to active processSend Signal To ProcessINTSend Signal To ProcessSIGINTmyproc# Send to named processThis keyword is only supported on Unix-like machines, not on Windows', ' What signals are supported depends on the system', ' For a list of existing signals on your system, see the Unix man pages related to signal handling (typically man signal or man 7 signal)', 'By default sends the signal only to the parent process, not to possible child processes started by it', ' Notice that when running processes in shell, the shell is the parent process and it depends on the system does the shell propagate the signal to the actual started process', 'To send the signal to the whole process group, group argument can be set to any true value (see Boolean arguments)', ' This is not supported by Jython, however', ],

	'Split Command Line' : ['Splits command line string into a list of arguments', 'String is split from spaces, but argument surrounded in quotes may contain spaces in them', ' If escaping is given a true value, then backslash is treated as an escape character', ' It can escape unquoted spaces, quotes inside quotes, and so on, but it also requires using double backslashes when using Windows paths', ''],

	'Start Process' : ['Starts a new process on background', 'See Specifying command and arguments and Process configuration for more information about the arguments, and Run Process keyword for related examples', 'Makes the started process new active process', ' Returns an identifier that can be used as a handle to activate the started process if needed', 'Processes are started so that they create a new process group', ' This allows sending signals to and terminating also possible child processes', ' This is not supported on Jython', ],

	'Switch Process' : ['Makes the specified process the current active process', 'The handle can be an identifier returned by Start Process or the alias given to it explicitly', 'Example:Start Processprog1alias=process1Start Processprog2alias=process2# currently active process is process2Switch Processprocess1# now active process is process1,'],

	'Terminate All Processes' : ['Terminates all still running processes started by this library', 'This keyword can be used in suite teardown or elsewhere to make sure that all processes are stopped,By default tries to terminate processes gracefully, but can be configured to forcefully kill them immediately', ' See Terminate Process that this keyword uses internally for more details', ],

	'Terminate Process' : ['Stops the process gracefully or forcefully', 'If handle is not given, uses the current active process', 'By default first tries to stop the process gracefully', ' If the process does not stop in 30 seconds, or kill argument is given a true value, (see Boolean arguments) kills the process forcefully', ' Stops also all the child processes of the originally started process', 'Waits for the process to stop after terminating it', ' Returns a result object containing information about the execution similarly as Wait For Process', 'On Unix-like machines graceful termination is done using TERM (15) signal and killing using KILL (9)', ' Use Send Signal To Process instead if you just want to send either of these signals without waiting for the process to stop', 'On Windows graceful termination is done using CTRL_BREAK_EVENT event and killing using Win32 API function TerminateProcess()', ''],

	'Wait For Process' : ['Waits for the process to complete or to reach the given timeout', 'The process to wait for must have been started earlier with Start Process', ' If handle is not given, uses the current active process', 'timeout defines the maximum time to wait for the process', ' It can be given in various time formats supported by Robot Framework, for example, 42, 42 s, or 1 minute 30 seconds', ' The timeout is ignored if it is Python None (default), string NONE (case-insensitively), zero, or negative', 'on_timeout defines what to do if the timeout occurs', ' Possible values and corresponding actions are explained in the table below', ' Notice that reaching the timeout never fails the test', 'ValueActioncontinueThe process is left running (default)', 'terminateThe process is gracefully terminated', 'killThe process is forcefully stopped', 'See Terminate Process keyword for more details how processes are terminated and killed', 'If the process ends before the timeout or it is terminated or killed, this keyword returns a result object containing information about the execution', ' If the process is left running, Python None is returned instead', ''],
	
	'Init' : ['Configure where screenshots are saved', 'If screenshot_directory is not given, screenshots are saved into same directory as the log file', ' The directory can also be set using Set Screenshot Directory keyword', 'screenshot_module specifies the module or tool to use when using this library on Python outside OSX', ' Possible values are wxPython, PyGTK, PIL and scrot, case-insensitively', ' If no value is given, the first module/tool found is used in that order', ' See Using with Python for more information', 'Examples (use only one of these):SettingValueValueLibraryScreenshotLibraryScreenshot${TEMPDIR}LibraryScreenshotscreenshot_module=PyGTKSpecifying explicit screenshot module is new in Robot Framework 2', '9', '2', ],

	'Set Screenshot Directory' : ['Sets the directory where screenshots are saved', 'It is possible to use / as a path separator in all operating systems', ' Path to the old directory is returned', 'The directory can also be set in importing', ],

	'Take Screenshot' : ['Takes a screenshot in JPEG format and embeds it into the log file', 'Name of the file where the screenshot is stored is derived from the given name', ' If the name ends with extension ', 'jpg or ', 'jpeg, the screenshot will be stored with that exact name', ' Otherwise a unique name is created by adding an underscore, a running index and an extension to the name', 'The name will be interpreted to be relative to the directory where the log file is written', ' It is also possible to use absolute paths', ' Using / as a path separator works in all operating systems', 'width specifies the size of the screenshot in the log file', ''],

	'Take Screenshot Without Embedding' : ['Takes a screenshot and links it from the log file', 'This keyword is otherwise identical to Take Screenshot but the saved screenshot is not embedded into the log file', ' The screenshot is linked so it is nevertheless easily available', ],
	
		'Convert To Lower Case' : ['Converts string to lower case', "Uses Python's standard lower() method", ''],

	'Convert To Title Case' : ['Converts string to title case', 'Uses the following algorithm:Split the string to words from whitespace characters (spaces, newlines, etc', ')', 'Exclude words that are not all lower case', ' This preserves, for example, OK and iPhone', 'Exclude also words listed in the optional exclude argument', 'Title case the first alphabetical character of each word that has not been excluded', 'Join all words together so that original whitespace is preserved', 'Explicitly excluded words can be given as a list or as a string with words separated by a comma and an optional space', ' Excluded words are actually considered to be regular expression patterns, so it is possible to use something like example[', '!?]? to match the word example on it own and also if followed by ', ', ! or ?', ' See BuiltIn', 'Should Match Regexp for more information about Python regular expression syntax in general and how to use it in Robot Framework test data in particular', ''],

	'Convert To Upper Case' : ['Converts string to upper case', "Uses Python's standard upper() method", ''],

	'Decode Bytes To String' : ['Decodes the given bytes to a Unicode string using the given encoding', 'errors argument controls what to do if decoding some bytes fails', ' All values accepted by decode method in Python are valid, but in practice the following values are most useful:strict: fail if characters cannot be decoded (default)ignore: ignore characters that cannot be decodedreplace: replace characters that cannot be decoded with a replacement character'],

	'Encode String To Bytes' : ['Encodes the given Unicode string to bytes using the given encoding', 'errors argument controls what to do if encoding some characters fails', ' All values accepted by encode method in Python are valid, but in practice the following values are most useful:strict: fail if characters cannot be encoded (default)ignore: ignore characters that cannot be encodedreplace: replace characters that cannot be encoded with a replacement character'],

	'Fetch From Left' : ['Returns contents of the string before the first occurrence of marker', 'If the marker is not found, whole string is returned', 'See also Fetch From Right, Split String and Split String From Right', ],

	'Fetch From Right' : ['Returns contents of the string after the last occurrence of marker', 'If the marker is not found, whole string is returned', 'See also Fetch From Left, Split String and Split String From Right', ],

	'Format String' : ['Formats a template using the given positional and named arguments', 'The template can be either be a string or an absolute path to an existing file', ' In the latter case the file is read and its contents are used as the template', ' If the template file contains non-ASCII characters, it must be encoded using UTF-8', "The template is formatted using Python's format string syntax", ' Placeholders are marked using {} with possible field name and format specification inside', ' Literal curly braces can be inserted by doubling them like {{ and }}', ''],

	'Generate Random String' : ['Generates a string with a desired length from the given chars', 'The population sequence chars contains the characters to use when generating the random string', ' It can contain any characters, and it is possible to use special markers explained in the table below:MarkerExplanation[LOWER]Lowercase ASCII characters from a to z', '[UPPER]Uppercase ASCII characters from A to Z', '[LETTERS]Lowercase and uppercase ASCII characters', '[NUMBERS]Numbers from 0 to 9', ''],

	'Get Line' : ['Returns the specified line from the given string', 'Line numbering starts from 0 and it is possible to use negative indices to refer to lines from the end', ' The line is returned without the newline character', ''],

	'Get Line Count' : ['Returns and logs the number of lines in the given string', ],

	'Get Lines Containing String' : ['Returns lines of the given string that contain the pattern', 'The pattern is always considered to be a normal string, not a glob or regexp pattern', ' A line matches if the pattern is found anywhere on it', 'The match is case-sensitive by default, but giving case_insensitive a true value makes it case-insensitive', ' The value is considered true if it is a non-empty string that is not equal to false, none or no', ' If the value is not a string, its truth value is got directly in Python', ' Considering none false is new in RF 3', '0', '3', 'Lines are returned as one string catenated back together with newlines', ' Possible trailing newline is never returned', ' The number of matching lines is automatically logged', ''],

	'Get Lines Matching Pattern' : ['Returns lines of the given string that match the pattern', 'The pattern is a glob pattern where:*matches everything?matches any single character[chars]matches any character inside square brackets (e', 'g', ' [abc] matches either a, b or c)[!chars]matches any character not inside square bracketsA line matches only if it matches the pattern fully', 'The match is case-sensitive by default, but giving case_insensitive a true value makes it case-insensitive', ' The value is considered true if it is a non-empty string that is not equal to false, none or no', ' If the value is not a string, its truth value is got directly in Python', ' Considering none false is new in RF 3', '0', '3', 'Lines are returned as one string catenated back together with newlines', ' Possible trailing newline is never returned', ' The number of matching lines is automatically logged', ''],

	'Get Lines Matching Regexp' : ['Returns lines of the given string that match the regexp pattern', 'See BuiltIn', 'Should Match Regexp for more information about Python regular expression syntax in general and how to use it in Robot Framework test data in particular', 'By default lines match only if they match the pattern fully, but partial matching can be enabled by giving the partial_match argument a true value', ' The value is considered true if it is a non-empty string that is not equal to false, none or no', ' If the value is not a string, its truth value is got directly in Python', ' Considering none false is new in RF 3', '0', '3', 'If the pattern is empty, it matches only empty lines by default', ' When partial matching is enabled, empty pattern matches all lines', 'Notice that to make the match case-insensitive, you need to prefix the pattern with case-insensitive flag (?i)', 'Lines are returned as one string concatenated back together with newlines', ' Possible trailing newline is never returned', ' The number of matching lines is automatically logged', ''],

	'Get Regexp Matches' : ['Returns a list of all non-overlapping matches in the given string', 'string is the string to find matches from and pattern is the regular expression', ' See BuiltIn', 'Should Match Regexp for more information about Python regular expression syntax in general and how to use it in Robot Framework test data in particular', 'If no groups are used, the returned list contains full matches', ' If one group is used, the list contains only contents of that group', ' If multiple groups are used, the list contains tuples that contain individual group contents', ' All groups can be given as indexes (starting from 1) and named groups also as names', ''],

	'Get Substring' : ['Returns a substring from start index to end index', 'The start index is inclusive and end is exclusive', ' Indexing starts from 0, and it is possible to use negative indices to refer to characters from the end', ''],

	'Remove String' : ['Removes all removables from the given string', 'removables are used as literal strings', ' Each removable will be matched to a temporary string from which preceding removables have been already removed', ' See second example below', 'Use Remove String Using Regexp if more powerful pattern matching is needed', ' If only a certain number of matches should be removed, Replace String or Replace String Using Regexp can be used', 'A modified version of the string is returned and the original string is not altered', ''],

	'Remove String Using Regexp' : ['Removes patterns from the given string', 'This keyword is otherwise identical to Remove String, but the patterns to search for are considered to be a regular expression', ' See Replace String Using Regexp for more information about the regular expression syntax', ' That keyword can also be used if there is a need to remove only a certain number of occurrences', ],

	'Replace String' : ['Replaces search_for in the given string with replace_with', 'search_for is used as a literal string', ' See Replace String Using Regexp if more powerful pattern matching is needed', ' If you need to just remove a string see Remove String', 'If the optional argument count is given, only that many occurrences from left are replaced', ' Negative count means that all occurrences are replaced (default behaviour) and zero means that nothing is done', 'A modified version of the string is returned and the original string is not altered', ''],

	'Replace String Using Regexp' : ['Replaces pattern in the given string with replace_with', 'This keyword is otherwise identical to Replace String, but the pattern to search for is considered to be a regular expression', '  See BuiltIn', 'Should Match Regexp for more information about Python regular expression syntax in general and how to use it in Robot Framework test data in particular', 'If you need to just remove a string see Remove String Using Regexp', ''],

	'Should Be Byte String' : ['Fails if the given item is not a byte string', 'Use Should Be Unicode String if you want to verify the item is a Unicode string, or Should Be String if both Unicode and byte strings are fine', ' See Should Be String for more details about Unicode strings and byte strings', 'The default error message can be overridden with the optional msg argument', ],

	'Should Be Lowercase' : ['Fails if the given string is not in lowercase', "For example, 'string' and 'with specials!' would pass, and 'String', '' and ' ' would fail", 'The default error message can be overridden with the optional msg argument', 'See also Should Be Uppercase and Should Be Titlecase', ],

	'Should Be String' : ['Fails if the given item is not a string', 'With Python 2, except with IronPython, this keyword passes regardless is the item a Unicode string or a byte string', ' Use Should Be Unicode String or Should Be Byte String if you want to restrict the string type', " Notice that with Python 2, except with IronPython, 'string' creates a byte string and u'unicode' must be used to create a Unicode string", 'With Python 3 and IronPython, this keyword passes if the string is a Unicode string but fails if it is bytes', " Notice that with both Python 3 and IronPython, 'string' creates a Unicode string, and b'bytes' must be used to create a byte string", 'The default error message can be overridden with the optional msg argument', ],

	'Should Be Titlecase' : ['Fails if given string is not title', 'string is a titlecased string if there is at least one character in it, uppercase characters only follow uncased characters and lowercase characters only cased ones', "For example, 'This Is Title' would pass, and 'Word In UPPER', 'Word In lower', '' and ' ' would fail", 'The default error message can be overridden with the optional msg argument', 'See also Should Be Uppercase and Should Be Lowercase', ],

	'Should Be Unicode String' : ['Fails if the given item is not a Unicode string', 'Use Should Be Byte String if you want to verify the item is a byte string, or Should Be String if both Unicode and byte strings are fine', ' See Should Be String for more details about Unicode strings and byte strings', 'The default error message can be overridden with the optional msg argument', ],

	'Should Be Uppercase' : ['Fails if the given string is not in uppercase', "For example, 'STRING' and 'WITH SPECIALS!' would pass, and 'String', '' and ' ' would fail", 'The default error message can be overridden with the optional msg argument', 'See also Should Be Titlecase and Should Be Lowercase', ],

	'Should Not Be String' : ['Fails if the given item is a string', 'See Should Be String for more details about Unicode strings and byte strings', 'The default error message can be overridden with the optional msg argument', ],

	'Split String' : ['Splits the string using separator as a delimiter string', 'If a separator is not given, any whitespace string is a separator', ' In that case also possible consecutive whitespace as well as leading and trailing whitespace is ignored', 'Split words are returned as a list', ' If the optional max_split is given, at most max_split splits are done, and the returned list will have maximum max_split + 1 elements', ''],

	'Split String From Right' : ['Splits the string using separator starting from right', 'Same as Split String, but splitting is started from right', ' This has an effect only when max_split is given', ''],

	'Split String To Characters' : ['Splits the given string to characters', 'Example:@{characters} =Split String To Characters${string},'],

	'Split To Lines' : ['Splits the given string to lines', 'It is possible to get only a selection of lines from start to end so that start index is inclusive and end is exclusive', ' Line numbering starts from 0, and it is possible to use negative indices to refer to lines from the end', 'Lines are returned without the newlines', ' The number of returned lines is automatically logged', ''],

	'Strip String' : ['Remove leading and/or trailing whitespaces from the given string', 'mode is either left to remove leading characters, right to remove trailing characters, both (default) to remove the characters from both sides of the string or none to return the unmodified string', 'If the optional characters is given, it must be a string and the characters in the string will be stripped in the string', ' Please note, that this is not a substring to be removed but a list of characters, see the example below', ''],
	
		'Init' : ['Telnet library can be imported with optional configuration parameters', 'Configuration parameters are used as default values when new connections are opened with Open Connection keyword', ' They can also be overridden after opening the connection using the Set ', '', '', ' keywords', ' See these keywords as well as Configuration, Terminal emulation and Logging sections above for more information about these parameters and their possible values', 'See Time string format and Boolean arguments sections for information about using arguments accepting times and Boolean values, respectively', 'Examples (use only one of these):SettingValueValueValueValueCommentLibraryTelnet# default valuesLibraryTelnet5 seconds# set only timeoutLibraryTelnetnewline=LFencoding=ISO-8859-1# set newline and encoding using named argumentsLibraryTelnetprompt=$# set promptLibraryTelnetprompt=(&gt; |# )prompt_is_regexp=yes# set prompt as a regular expressionLibraryTelnetterminal_emulation=Trueterminal_type=vt100window_size=400x100# use terminal emulation with defined window size and terminal typeLibraryTelnettelnetlib_log_level=NONE# disable logging messages from the underlying telnetlib,'],

	'Close All Connections' : ['Closes all open connections and empties the connection cache', 'If multiple connections are opened, this keyword should be used in a test or suite teardown to make sure that all connections are closed', ' It is not an error is some of the connections have already been closed by Close Connection', 'After this keyword, new indexes returned by Open Connection keyword are reset to 1', ],

	'Close Connection' : ['Closes the current Telnet connection', 'Remaining output in the connection is read, logged, and returned', ' It is not an error to close an already closed connection', 'Use Close All Connections if you want to make sure all opened connections are closed', 'See Logging section for more information about log levels', ],

	'Execute Command' : ['Executes the given command and reads, logs, and returns everything until the prompt', 'This keyword requires the prompt to be configured either in importing or with Open Connection or Set Prompt keyword', 'This is a convenience keyword that uses Write and Read Until Prompt internally', ' Following two examples are thus functionally identical:${out} =Execute CommandpwdWritepwd${out} =Read Until PromptSee Logging section for more information about log levels and Read Until Prompt for more information about the strip_prompt parameter', ],

	'Login' : ['Logs in to the Telnet server with the given user information', 'This keyword reads from the connection until the login_prompt is encountered and then types the given username', ' Then it reads until the password_prompt and types the given password', ' In both cases a newline is appended automatically and the connection specific timeout used when waiting for outputs', 'How logging status is verified depends on whether a prompt is set for this connection or not:1) If the prompt is set, this keyword reads the output until the prompt is found using the normal timeout', ' If no prompt is found, login is considered failed and also this keyword fails', ' Note that in this case both login_timeout and login_incorrect arguments are ignored', '2) If the prompt is not set, this keywords sleeps until login_timeout and then reads all the output available on the connection', ' If the output contains login_incorrect text, login is considered failed and also this keyword fails', 'See Configuration section for more information about setting newline, timeout, and prompt', ],

	'Open Connection' : ['Opens a new Telnet connection to the given host and port', 'The timeout, newline, prompt, prompt_is_regexp, encoding, default_log_level, window_size, environ_user, terminal_emulation, terminal_type and telnetlib_log_level arguments get default values when the library is imported', ' Setting them here overrides those values for the opened connection', ' See Configuration, Terminal emulation and Logging sections for more information about these parameters and their possible values', 'Possible already opened connections are cached and it is possible to switch back to them using Switch Connection keyword', ' It is possible to switch either using explicitly given alias or using index returned by this keyword', ' Indexing starts from 1 and is reset back to it by Close All Connections keyword', ],

	'Read' : ['Reads everything that is currently available in the output', 'Read output is both returned and logged', ' See Logging section for more information about log levels', ],

	'Read Until' : ['Reads output until expected text is encountered', 'Text up to and including the match is returned and logged', ' If no match is found, this keyword fails', ' How much to wait for the output depends on the configured timeout', 'See Logging section for more information about log levels', ' Use Read Until Regexp if more complex matching is needed', ],

	'Read Until Prompt' : ['Reads output until the prompt is encountered', 'This keyword requires the prompt to be configured either in importing or with Open Connection or Set Prompt keyword', 'By default, text up to and including the prompt is returned and logged', ' If no prompt is found, this keyword fails', ' How much to wait for the output depends on the configured timeout', 'If you want to exclude the prompt from the returned output, set strip_prompt to a true value (see Boolean arguments)', ' If your prompt is a regular expression, make sure that the expression spans the whole prompt, because only the part of the output that matches the regular expression is stripped away', 'See Logging section for more information about log levels', ],

	'Read Until Regexp' : ['Reads output until any of the expected regular expressions match', 'This keyword accepts any number of regular expressions patterns or compiled Python regular expression objects as arguments', ' Text up to and including the first match to any of the regular expressions is returned and logged', ' If no match is found, this keyword fails', ' How much to wait for the output depends on the configured timeout', 'If the last given argument is a valid log level, it is used as loglevel similarly as with Read Until keyword', 'See the documentation of Python re module for more information about the supported regular expression syntax', ' Notice that possible backslashes need to be escaped in Robot Framework test data', ''],

	'Set Default Log Level' : ['Sets the default log level used for logging in the current connection', 'The old default log level is returned and can be used to restore the log level later', 'See Configuration section for more information about global and connection specific configuration', ],

	'Set Encoding' : ['Sets the encoding to use for writing and reading in the current connection', 'The given encoding specifies the encoding to use when written/read text is encoded/decoded, and errors specifies the error handler to use if encoding/decoding fails', ' Either of these can be omitted and in that case the old value is not affected', ' Use string NONE to disable encoding altogether', 'See Configuration section for more information about encoding and error handlers, as well as global and connection specific configuration in general', 'The old values are returned and can be used to restore the encoding and the error handler later', ' See Set Prompt for a similar example', 'If terminal emulation is used, the encoding can not be changed on an open connection', ],

	'Set Newline' : ['Sets the newline used by Write keyword in the current connection', 'The old newline is returned and can be used to restore the newline later', ' See Set Timeout for a similar example', 'If terminal emulation is used, the newline can not be changed on an open connection', 'See Configuration section for more information about global and connection specific configuration', ],

	'Set Prompt' : ['Sets the prompt used by Read Until Prompt and Login in the current connection', 'If prompt_is_regexp is given a true value (see Boolean arguments), the given prompt is considered to be a regular expression', 'The old prompt is returned and can be used to restore the prompt later', 'Example:${prompt}${regexp} =Set Prompt$Do SomethingSet Prompt${prompt}${regexp}See the documentation of Python re module for more information about the supported regular expression syntax', ' Notice that possible backslashes need to be escaped in Robot Framework test data', 'See Configuration section for more information about global and connection specific configuration', ],

	'Set Telnetlib Log Level' : ['Sets the log level used for logging in the underlying telnetlib', 'Note that telnetlib can be very noisy thus using the level NONE can shutdown the messages generated by this library', ],

	'Set Timeout' : ['Sets the timeout used for waiting output in the current connection', 'Read operations that expect some output to appear (Read Until, Read Until Regexp, Read Until Prompt, Login) use this timeout and fail if the expected output does not appear before this timeout expires', 'The timeout must be given in time string format', ' The old timeout is returned and can be used to restore the timeout later', 'Example:${old} =Set Timeout2 minute 30 secondsDo SomethingSet Timeout${old}See Configuration section for more information about global and connection specific configuration', ],

	'Switch Connection' : ['Switches between active connections using an index or an alias', 'Aliases can be given to Open Connection keyword which also always returns the connection index', 'This keyword returns the index of previous active connection', 'Example:Open Connectionmyhost', 'netLoginjohnsecretWritesome commandOpen Connectionyourhost', 'com2nd connLoginrootpasswordWriteanother cmd${old index}=Switch Connection1# indexWritesomethingSwitch Connection2nd conn# aliasWritewhateverSwitch Connection${old index}# back to original[Teardown]Close All ConnectionsThe example above expects that there were no other open connections when opening the first one, because it used index 1 when switching to the connection later', ' If you are not sure about that, you can store the index into a variable as shown below', '${index} =Open Connectionmyhost', 'netDo SomethingSwitch Connection${index},'],

	'Write' : ['Writes the given text plus a newline into the connection', 'The newline character sequence to use can be configured both globally and per connection basis', ' The default value is CRLF', 'This keyword consumes the written text, until the added newline, from the output and logs and returns it', ' The given text itself must not contain newlines', ' Use Write Bare instead if either of these features causes a problem', 'Note: This keyword does not return the possible output of the executed command', ' To get the output, one of the Read ', '', '', ' keywords must be used', ' See Writing and reading section for more details', 'See Logging section for more information about log levels', ],

	'Write Bare' : ['Writes the given text, and nothing else, into the connection', 'This keyword does not append a newline nor consume the written text', ' Use Write if these features are needed', ],

	'Write Control Character' : ['Writes the given control character into the connection', 'The control character is prepended with an IAC (interpret as command) character', 'The following control character names are supported: BRK, IP, AO, AYT, EC, EL, NOP', ' Additionally, you can use arbitrary numbers to send any control character', 'Example:Write Control CharacterBRK# Send Break commandWrite Control Character241# Send No operation command,'],

	'Write Until Expected Output' : ['Writes the given text repeatedly, until expected appears in the output', 'text is written without appending a newline and it is consumed from the output before trying to find expected', ' If expected does not appear in the output within timeout, this keyword fails', 'retry_interval defines the time to wait expected to appear before writing the text again', ' Consuming the written text is subject to the normal configured timeout', 'Both timeout and retry_interval must be given in time string format', ' See Logging section for more information about log levels', 'Example:Write Until Expected Outputps -ef| grep myprocessrmyprocess', '', '', '5 s0', '5 sThe above example writes command ps -ef | grep myprocessr until myprocess appears in the output', ' The command is written every 0', '5 seconds and the keyword fails if myprocess does not appear in the output in 5 seconds', ],
	
		'Init' : ['Import library with optionally lxml mode enabled', "By default this library uses Python's standard ElementTree module for parsing XML", ' If use_lxml argument is given a true value (see Boolean arguments), the library will use lxml module instead', ' See Using lxml section for benefits provided by lxml', 'Using lxml requires that the lxml module is installed on the system', ' If lxml mode is enabled but the module is not installed, this library will emit a warning and revert back to using the standard ElementTree', ],

	'Add Element' : ['Adds a child element to the specified element', 'The element to whom to add the new element is specified using source and xpath', ' They have exactly the same semantics as with Get Element keyword', ' The resulting XML structure is returned, and if the source is an already parsed XML structure, it is also modified in place', 'The element to add can be specified as a path to an XML file or as a string containing XML, or it can be an already parsed XML element', ' The element is copied before adding so modifying either the original or the added element has no effect on the other ', ' The element is added as the last child by default, but a custom index can be used to alter the position', ' Indices start from zero (0 = first position, 1 = second position, etc', '), and negative numbers refer to positions at the end (-1 = second last position, -2 = third last, etc', ')', 'Examples using ${XML} structure from Example:Add Element${XML}&lt;new id=x&gt;&lt;c1/&gt;&lt;/new&gt;Add Element${XML}&lt;c2/&gt;xpath=newAdd Element${XML}&lt;c3/&gt;index=1xpath=new${new} =Get Element${XML}newElements Should Be Equal${new}&lt;new id=x&gt;&lt;c1/&gt;&lt;c3/&gt;&lt;c2/&gt;&lt;/new&gt;Use Remove Element or Remove Elements to remove elements', ],

	'Clear Element' : ['Clears the contents of the specified element', 'The element to clear is specified using source and xpath', ' They have exactly the same semantics as with Get Element keyword', ' The resulting XML structure is returned, and if the source is an already parsed XML structure, it is also modified in place', 'Clearing the element means removing its text, attributes, and children', " Element's tail text is not removed by default, but that can be changed by giving clear_tail a true value (see Boolean arguments)", ' See Element attributes section for more information about tail in general', 'Examples using ${XML} structure from Example:Clear Element${XML}xpath=first${first} =Get Element${XML}xpath=firstElements Should Be Equal${first}&lt;first/&gt;Clear Element${XML}xpath=html/p/bclear_tail=yesElement Text Should Be${XML}Text with italics', 'xpath=html/pnormalize_whitespace=yesClear Element${XML}Elements Should Be Equal${XML}&lt;example/&gt;Use Remove Element to remove the whole element', ],

	'Copy Element' : ['Returns a copy of the specified element', 'The element to copy is specified using source and xpath', ' They have exactly the same semantics as with Get Element keyword', 'If the copy or the original element is modified afterwards, the changes have no effect on the other', 'Examples using ${XML} structure from Example:${elem} =Get Element${XML}xpath=first${copy1} =Copy Element${elem}${copy2} =Copy Element${XML}xpath=firstSet Element Text${XML}new textxpath=firstSet Element Attribute${copy1}idnewElements Should Be Equal${elem}&lt;first id=1&gt;new text&lt;/first&gt;Elements Should Be Equal${copy1}&lt;first id=new&gt;text&lt;/first&gt;Elements Should Be Equal${copy2}&lt;first id=1&gt;text&lt;/first&gt;,'],

	'Element Attribute Should Be' : ['Verifies that the specified attribute is expected', 'The element whose attribute is verified is specified using source and xpath', ' They have exactly the same semantics as with Get Element keyword', 'The keyword passes if the attribute name of the element is equal to the expected value, and otherwise it fails', ' The default error message can be overridden with the message argument', 'To test that the element does not have a certain attribute, Python None (i', 'e', ' variable ${NONE}) can be used as the expected value', ' A cleaner alternative is using Element Should Not Have Attribute', 'Examples using ${XML} structure from Example:Element Attribute Should Be${XML}id1xpath=firstElement Attribute Should Be${XML}id${NONE}See also Element Attribute Should Match and Get Element Attribute', ],

	'Element Attribute Should Match' : ['Verifies that the specified attribute matches expected', 'This keyword works exactly like Element Attribute Should Be except that the expected value can be given as a pattern that the attribute of the element must match', 'Pattern matching is similar as matching files in a shell with *, ? and [chars] acting as wildcards', ' See the Pattern matching section for more information', 'Examples using ${XML} structure from Example:Element Attribute Should Match${XML}id?xpath=firstElement Attribute Should Match${XML}idc*dxpath=third/second,'],

	'Element Should Exist' : ['Verifies that one or more element match the given xpath', 'Arguments source and xpath have exactly the same semantics as with Get Elements keyword', ' Keyword passes if the xpath matches one or more elements in the source', ' The default error message can be overridden with the message argument', 'See also Element Should Not Exist as well as Get Element Count that this keyword uses internally', ],

	'Element Should Not Exist' : ['Verifies that no element match the given xpath', 'Arguments source and xpath have exactly the same semantics as with Get Elements keyword', ' Keyword fails if the xpath matches any element in the source', ' The default error message can be overridden with the message argument', 'See also Element Should Exist as well as Get Element Count that this keyword uses internally', ],

	'Element Should Not Have Attribute' : ['Verifies that the specified element does not have  attribute name', 'The element whose attribute is verified is specified using source and xpath', ' They have exactly the same semantics as with Get Element keyword', 'The keyword fails if the specified element has attribute name', ' The default error message can be overridden with the message argument', 'Examples using ${XML} structure from Example:Element Should Not Have Attribute${XML}idElement Should Not Have Attribute${XML}xxxxpath=firstSee also Get Element Attribute, Get Element Attributes, Element Text Should Be and Element Text Should Match', ],

	'Element Text Should Be' : ['Verifies that the text of the specified element is expected', 'The element whose text is verified is specified using source and xpath', ' They have exactly the same semantics as with Get Element keyword', 'The text to verify is got from the specified element using the same logic as with Get Element Text', ' This includes optional whitespace normalization using the normalize_whitespace option', 'The keyword passes if the text of the element is equal to the expected value, and otherwise it fails', ' The default error message can be overridden with the message argument', '  Use Element Text Should Match to verify the text against a pattern instead of an exact value', 'Examples using ${XML} structure from Example:Element Text Should Be${XML}textxpath=firstElement Text Should Be${XML}${EMPTY}xpath=second/child${paragraph} =Get Element${XML}xpath=html/pElement Text Should Be${paragraph}Text with bold and italics', 'normalize_whitespace=yes,'],

	'Element Text Should Match' : ['Verifies that the text of the specified element matches expected', 'This keyword works exactly like Element Text Should Be except that the expected value can be given as a pattern that the text of the element must match', 'Pattern matching is similar as matching files in a shell with *, ? and [chars] acting as wildcards', ' See the Pattern matching section for more information', 'Examples using ${XML} structure from Example:Element Text Should Match${XML}t???xpath=first${paragraph} =Get Element${XML}xpath=html/pElement Text Should Match${paragraph}Text with * and *', 'normalize_whitespace=yes,'],

	'Element To String' : ['Returns the string representation of the specified element', 'The element to convert to a string is specified using source and xpath', ' They have exactly the same semantics as with Get Element keyword', 'By default the string is returned as Unicode', ' If encoding argument is given any value, the string is returned as bytes in the specified encoding', ' The resulting string never contains the XML declaration', 'See also Log Element and Save XML', ],

	'Elements Should Be Equal' : ['Verifies that the given source element is equal to expected', 'Both source and expected can be given as a path to an XML file, as a string containing XML, or as an already parsed XML element structure', ' See introduction for more information about parsing XML in general', 'The keyword passes if the source element and expected element are equal', ' This includes testing the tag names, texts, and attributes of the elements', ' By default also child elements are verified the same way, but this can be disabled by setting exclude_children to a true value (see Boolean arguments)', 'All texts inside the given elements are verified, but possible text outside them is not', ' By default texts must match exactly, but setting normalize_whitespace to a true value makes text verification independent on newlines, tabs, and the amount of spaces', " For more details about handling text see Get Element Text keyword and discussion about elements' text and tail attributes in the introduction", 'Examples using ${XML} structure from Example:${first} =Get Element${XML}firstElements Should Be Equal${first}&lt;first id=1&gt;text&lt;/first&gt;${p} =Get Element${XML}html/pElements Should Be Equal${p}&lt;p&gt;Text with &lt;b&gt;bold&lt;/b&gt; and &lt;i&gt;italics&lt;/i&gt;', '&lt;/p&gt;normalize_whitespace=yesElements Should Be Equal${p}&lt;p&gt;Text with&lt;/p&gt;excludenormalizeThe last example may look a bit strange because the &lt;p&gt; element only has text Text with', ' The reason is that rest of the text inside &lt;p&gt; actually belongs to the child elements', ' This includes the ', ' at the end that is the tail text of the &lt;i&gt; element', 'See also Elements Should Match', ],

	'Elements Should Match' : ['Verifies that the given source element matches expected', 'This keyword works exactly like Elements Should Be Equal except that texts and attribute values in the expected value can be given as patterns', 'Pattern matching is similar as matching files in a shell with *, ? and [chars] acting as wildcards', ' See the Pattern matching section for more information', 'Examples using ${XML} structure from Example:${first} =Get Element${XML}firstElements Should Match${first}&lt;first id=?&gt;*&lt;/first&gt;See Elements Should Be Equal for more examples', ],

	'Evaluate Xpath' : ['Evaluates the given xpath expression and returns results', 'The element in which context the expression is executed is specified using source and context arguments', ' They have exactly the same semantics as source and xpath arguments have with Get Element keyword', 'The xpath expression to evaluate is given as expression argument', ' The result of the evaluation is returned as-is', "Examples using ${XML} structure from Example:${count} =Evaluate Xpath${XML}count(third/*)Should Be Equal${count}${3}${text} =Evaluate Xpath${XML}string(descendant::second[last()]/@id)Should Be Equal${text}child${bold} =Evaluate Xpath${XML}boolean(preceding-sibling::*[1] = 'bold')context=html/p/iShould Be Equal${bold}${True}This keyword works only if lxml mode is taken into use when importing the library", ],

	'Get Child Elements' : ['Returns the child elements of the specified element as a list', 'The element whose children to return is specified using source and xpath', ' They have exactly the same semantics as with Get Element keyword', 'All the direct child elements of the specified element are returned', ' If the element has no children, an empty list is returned', 'Examples using ${XML} structure from Example:${children} =Get Child Elements${XML}Length Should Be${children}4${children} =Get Child Elements${XML}xpath=firstShould Be Empty${children},'],

	'Get Element' : ['Returns an element in the source matching the xpath', 'The source can be a path to an XML file, a string containing XML, or an already parsed XML element', ' The xpath specifies which element to find', ' See the introduction for more details about both the possible sources and the supported xpath syntax', 'The keyword fails if more, or less, than one element matches the xpath', ' Use Get Elements if you want all matching elements to be returned', 'Examples using ${XML} structure from Example:${element} =Get Element${XML}second${child} =Get Element${element}childParse XML is recommended for parsing XML when the whole structure is needed', ' It must be used if there is a need to configure how XML namespaces are handled', 'Many other keywords use this keyword internally, and keywords modifying XML are typically documented to both to modify the given source and to return it', ' Modifying the source does not apply if the source is given as a string', ' The XML structure parsed based on the string and then modified is nevertheless returned', ],

	'Get Element Attribute' : ['Returns the named attribute of the specified element', 'The element whose attribute to return is specified using source and xpath', ' They have exactly the same semantics as with Get Element keyword', 'The value of the attribute name of the specified element is returned', ' If the element does not have such element, the default value is returned instead', 'Examples using ${XML} structure from Example:${attribute} =Get Element Attribute${XML}idxpath=firstShould Be Equal${attribute}1${attribute} =Get Element Attribute${XML}xxxpath=firstdefault=valueShould Be Equal${attribute}valueSee also Get Element Attributes, Element Attribute Should Be, Element Attribute Should Match and Element Should Not Have Attribute', ],

	'Get Element Attributes' : ['Returns all attributes of the specified element', 'The element whose attributes to return is specified using source and xpath', ' They have exactly the same semantics as with Get Element keyword', 'Attributes are returned as a Python dictionary', ' It is a copy of the original attributes so modifying it has no effect on the XML structure', 'Examples using ${XML} structure from Example:${attributes} =Get Element Attributes${XML}firstDictionary Should Contain Key${attributes}id${attributes} =Get Element Attributes${XML}thirdShould Be Empty${attributes}Use Get Element Attribute to get the value of a single attribute', ],

	'Get Element Count' : ['Returns and logs how many elements the given xpath matches', 'Arguments source and xpath have exactly the same semantics as with Get Elements keyword that this keyword uses internally', 'See also Element Should Exist and Element Should Not Exist', ],

	'Get Element Text' : ['Returns all text of the element, possibly whitespace normalized', 'The element whose text to return is specified using source and xpath', ' They have exactly the same semantics as with Get Element keyword', 'This keyword returns all the text of the specified element, including all the text its children and grandchildren contain', ' If the element has no text, an empty string is returned', ' The returned text is thus not always the same as the text attribute of the element', 'By default all whitespace, including newlines and indentation, inside the element is returned as-is', ' If normalize_whitespace is given a true value (see Boolean arguments), then leading and trailing whitespace is stripped, newlines and tabs converted to spaces, and multiple spaces collapsed into one', ' This is especially useful when dealing with HTML data', 'Examples using ${XML} structure from Example:${text} =Get Element Text${XML}firstShould Be Equal${text}text${text} =Get Element Text${XML}second/childShould Be Empty${text}${paragraph} =Get Element${XML}html/p${text} =Get Element Text${paragraph}normalize_whitespace=yesShould Be Equal${text}Text with bold and italics', 'See also Get Elements Texts, Element Text Should Be and Element Text Should Match', ],

	'Get Elements' : ['Returns a list of elements in the source matching the xpath', 'The source can be a path to an XML file, a string containing XML, or an already parsed XML element', ' The xpath specifies which element to find', ' See the introduction for more details', 'Elements matching the xpath are returned as a list', ' If no elements match, an empty list is returned', ' Use Get Element if you want to get exactly one match', 'Examples using ${XML} structure from Example:${children} =Get Elements${XML}third/childLength Should Be${children}2${children} =Get Elements${XML}first/childShould Be Empty${children},'],

	'Get Elements Texts' : ['Returns text of all elements matching xpath as a list', 'The elements whose text to return is specified using source and xpath', ' They have exactly the same semantics as with Get Elements keyword', 'The text of the matched elements is returned using the same logic as with Get Element Text', ' This includes optional whitespace normalization using the normalize_whitespace option', 'Examples using ${XML} structure from Example:@{texts} =Get Elements Texts${XML}third/childLength Should Be${texts}2Should Be Equal@{texts}[0]more textShould Be Equal@{texts}[1]${EMPTY},'],

	'Log Element' : ['Logs the string representation of the specified element', 'The element specified with source and xpath is first converted into a string using Element To String keyword internally', ' The resulting string is then logged using the given level', 'The logged string is also returned', ],

	'Parse Xml' : ['Parses the given XML file or string into an element structure', 'The source can either be a path to an XML file or a string containing XML', ' In both cases the XML is parsed into ElementTree element structure and the root element is returned', ' Possible comments and processing instructions in the source XML are removed', 'As discussed in Handling XML namespaces section, this keyword, by default, removes namespace information ElementTree has added to tag names and moves it into xmlns attributes', ' This typically eases handling XML documents with namespaces considerably', ' If you do not want that to happen, or want to avoid the small overhead of going through the element structure when your XML does not have namespaces, you can disable this feature by giving keep_clark_notation argument a true value (see Boolean arguments)', 'If you want to strip namespace information altogether so that it is not included even if XML is saved, you can give a true value to strip_namespaces argument', ' This functionality is new in Robot Framework 3', '0', '2', ''],

	'Remove Element' : ['Removes the element matching xpath from the source structure', 'The element to remove from the source is specified with xpath using the same semantics as with Get Element keyword', ' The resulting XML structure is returned, and if the source is an already parsed XML structure, it is also modified in place', 'The keyword fails if xpath does not match exactly one element', ' Use Remove Elements to remove all matched elements', "Element's tail text is not removed by default, but that can be changed by giving remove_tail a true value (see Boolean arguments)", ' See Element attributes section for more information about tail in general', 'Examples using ${XML} structure from Example:Remove Element${XML}xpath=secondElement Should Not Exist${XML}xpath=secondRemove Element${XML}xpath=html/p/bremove_tail=yesElement Text Should Be${XML}Text with italics', 'xpath=html/pnormalize_whitespace=yes,'],

	'Remove Element Attribute' : ['Removes attribute name from the specified element', 'The element whose attribute to remove is specified using source and xpath', ' They have exactly the same semantics as with Get Element keyword', ' The resulting XML structure is returned, and if the source is an already parsed XML structure, it is also modified in place', 'It is not a failure to remove a non-existing attribute', ' Use Remove Element Attributes to remove all attributes and Set Element Attribute to set them', 'Examples using ${XML} structure from Example:Remove Element Attribute${XML}idxpath=firstElement Should Not Have Attribute${XML}idxpath=firstCan only remove an attribute from a single element', ' Use Remove Elements Attribute to remove an attribute of multiple elements in one call', ],

	'Remove Element Attributes' : ['Removes all attributes from the specified element', 'The element whose attributes to remove is specified using source and xpath', ' They have exactly the same semantics as with Get Element keyword', ' The resulting XML structure is returned, and if the source is an already parsed XML structure, it is also modified in place', 'Use Remove Element Attribute to remove a single attribute and Set Element Attribute to set them', 'Examples using ${XML} structure from Example:Remove Element Attributes${XML}xpath=firstElement Should Not Have Attribute${XML}idxpath=firstCan only remove attributes from a single element', ' Use Remove Elements Attributes to remove all attributes of multiple elements in one call', ],

	'Remove Elements' : ['Removes all elements matching xpath from the source structure', 'The elements to remove from the source are specified with xpath using the same semantics as with Get Elements keyword', ' The resulting XML structure is returned, and if the source is an already parsed XML structure, it is also modified in place', 'It is not a failure if xpath matches no elements', ' Use Remove Element to remove exactly one element', "Element's tail text is not removed by default, but that can be changed by using remove_tail argument similarly as with Remove Element", 'Examples using ${XML} structure from Example:Remove Elements${XML}xpath=*/childElement Should Not Exist${XML}xpath=second/childElement Should Not Exist${XML}xpath=third/child,'],

	'Remove Elements Attribute' : ['Removes attribute name from the specified elements', 'Like Remove Element Attribute but removes the attribute of all elements matching the given xpath', ],

	'Remove Elements Attributes' : ['Removes all attributes from the specified elements', 'Like Remove Element Attributes but removes all attributes of all elements matching the given xpath', ],

	'Save Xml' : ['Saves the given element to the specified file', 'The element to save is specified with source using the same semantics as with Get Element keyword', 'The file where the element is saved is denoted with path and the encoding to use with encoding', ' The resulting file always contains the XML declaration', 'The resulting XML file may not be exactly the same as the original:Comments and processing instructions are always stripped', 'Possible doctype and namespace prefixes are only preserved when using lxml', 'Other small differences are possible depending on the ElementTree or lxml version', 'Use Element To String if you just need a string representation of the element', ],

	'Set Element Attribute' : ['Sets attribute name of the specified element to value', 'The element whose attribute to set is specified using source and xpath', ' They have exactly the same semantics as with Get Element keyword', ' The resulting XML structure is returned, and if the source is an already parsed XML structure, it is also modified in place', 'It is possible to both set new attributes and to overwrite existing', ' Use Remove Element Attribute or Remove Element Attributes for removing them', 'Examples using ${XML} structure from Example:Set Element Attribute${XML}attrvalueElement Attribute Should Be${XML}attrvalueSet Element Attribute${XML}idnewxpath=firstElement Attribute Should Be${XML}idnewxpath=firstCan only set an attribute of a single element', ' Use Set Elements Attribute to set an attribute of multiple elements in one call', ],

	'Set Element Tag' : ['Sets the tag of the specified element', 'The element whose tag to set is specified using source and xpath', ' They have exactly the same semantics as with Get Element keyword', ' The resulting XML structure is returned, and if the source is an already parsed XML structure, it is also modified in place', 'Examples using ${XML} structure from Example:Set Element Tag${XML}newTagShould Be Equal${XML', 'tag}newTagSet Element Tag${XML}xxxxpath=second/childElement Should Exist${XML}second/xxxElement Should Not Exist${XML}second/childCan only set the tag of a single element', ' Use Set Elements Tag to set the tag of multiple elements in one call', ],

	'Set Element Text' : ['Sets text and/or tail text of the specified element', 'The element whose text to set is specified using source and xpath', ' They have exactly the same semantics as with Get Element keyword', ' The resulting XML structure is returned, and if the source is an already parsed XML structure, it is also modified in place', "Element's text and tail text are changed only if new text and/or tail values are given", ' See Element attributes section for more information about text and tail in general', 'Examples using ${XML} structure from Example:Set Element Text${XML}new textxpath=firstElement Text Should Be${XML}new textxpath=firstSet Element Text${XML}tail=&amp;xpath=html/p/bElement Text Should Be${XML}Text with bold&amp;italics', 'xpath=html/pnormalize_whitespace=yesSet Element Text${XML}slanted!!xpath=html/p/iElement Text Should Be${XML}Text with bold&amp;slanted!!xpath=html/pnormalize_whitespace=yesCan only set the text/tail of a single element', ' Use Set Elements Text to set the text/tail of multiple elements in one call', ],

	'Set Elements Attribute' : ['Sets attribute name of the specified elements to value', 'Like Set Element Attribute but sets the attribute of all elements matching the given xpath', ],

	'Set Elements Tag' : ['Sets the tag of the specified elements', 'Like Set Element Tag but sets the tag of all elements matching the given xpath', ],

	'Set Elements Text' : ['Sets text and/or tail text of the specified elements', 'Like Set Element Text but sets the text or tail of all elements matching the given xpath', ],
	
	'Init' : ['You can change to hide the emulator screen set the argument visible=${False}For change the wait_time see Change Wait Time, to change the img_folder see the Set Screenshot Folder and to change the timeout see the Change Timeout keyword', ],

	'Change Timeout' : ['Change the timeout for connection in seconds', ],

	'Change Wait Time' : ['To give time for the mainframe screen to be drawn and receive the next commands, a wait time has been created, which by default is set to 0', '5 seconds', ' This is a sleep applied AFTER the follow keywords:Execute Command Send Enter Send PF Write Write in positionIf you want to change this value just use this keyword passing the time in seconds', ''],

	'Change Wait Time After Write' : ['To give the user time to see what is happening inside the mainframe, a change wait time after write has been created, which by default is set to 0 seconds', ' This is a sleep applied AFTER the string sent in this keywords:Write Write Bare Write in position Write Bare in positionIf you want to change this value just use this keyword passing the time in seconds', 'Note: This keyword is useful for debug purpose'],

	'Close Connection' : ['Disconnect from the host', ],

	'Delete Char' : ['Delete character under cursor', ' If you want to delete a character that is in another position, simply pass the coordinates ypos/xpos', 'Co-ordinates are 1 based, as listed in the status area of the terminal', ''],

	'Delete Field' : ['Delete a entire contents in field at current cursor location and positions cursor at beginning of field', ' If you want to delete a field that is in another position, simply pass the coordinates ypos/xpos of any part of the field', 'Co-ordinates are 1 based, as listed in the status area of the terminal', ''],

	'Execute Command' : ['Execute an x3270 command', ''],

	'Move Next Field' : ['Move the cursor to the next input field', ' Equivalent to pressing the Tab key', ],

	'Move Previous Field' : ['Move the cursor to the previous input field', ' Equivalent to pressing the Shift+Tab keys', ],

	'Open Connection' : ['Create a connection with IBM3270 mainframe with the default port 23', ' To make a connection with the mainframe you only must inform the Host', ' You can pass the Logical Unit Name and the Port as optional', 'Example:Open ConnectionHostnameOpen ConnectionHostnameLU=LUnameOpen ConnectionHostnameport=992,'],

	'Page Should Contain All Strings' : ['Search if all of the strings in a given list exists on the mainframe screen', 'The search is case sensitive, if you want ignore this you can pass the argument: ignore_case=${True} and you can edit the raise exception message with error_message', 'Example:Page Should Contain All Strings${list_of_string}Page Should Contain All Strings${list_of_string}ignore_case=${True}Page Should Contain All Strings${list_of_string}error_message=New error message,'],

	'Page Should Contain Any String' : ['Search if one of the strings in a given list exists on the mainframe screen', 'The search is case sensitive, if you want ignore this you can pass the argument: ignore_case=${True} and you can edit the raise exception message with error_message', 'Example:Page Should Contain Any String${list_of_string}Page Should Contain Any String${list_of_string}ignore_case=${True}Page Should Contain Any String${list_of_string}error_message=New error message,'],

	'Page Should Contain Match' : ['Fails unless the given string matches the given pattern', 'Pattern matching is similar as matching files in a shell, and it is always case-sensitive', ' In the pattern, * matches to anything and ? matches to any single character', 'Note that the entire screen is only considered a string for this keyword, so if you want to search for the string something and it is somewhere other than at the beginning or end of the screen it should be reported as follows: *something*The search is case sensitive, if you want ignore this you can pass the argument: ignore_case=${True} and you can edit the raise exception message with error_message', 'Example:Page Should Contain Match*something*Page Should Contain Match*so???hing*Page Should Contain Match*someTHING*ignore_case=${True}Page Should Contain Match*something*error_message=New error message,'],

	'Page Should Contain String' : ['Search if a given string exists on the mainframe screen', 'The search is case sensitive, if you want ignore this you can pass the argument: ignore_case=${True} and you can edit the raise exception message with error_message', 'Example:Page Should Contain StringsomethingPage Should Contain StringsomeTHINGignore_case=${True}Page Should Contain Stringsomethingerror_message=New error message,'],

	'Page Should Contain String X Times' : ['Search if the entered string appears the desired number of times on the mainframe screen', 'The search is case sensitive, if you want ignore this you can pass the argument: ignore_case=${True} and you can edit the raise exception message with error_message', 'Example:Page Should Contain String X Timessomething3Page Should Contain String X TimessomeTHING3ignore_case=${True}Page Should Contain String X Timessomething3error_message=New error message,'],

	'Page Should Match Regex' : ['Fails if string does not match pattern as a regular expression', ' Regular expression check is implemented using the Python re module', " Python's regular expression syntax is derived from Perl, and it is thus also very similar to the syntax used, for example, in Java, Ruby and ", 'NET', 'Backslash is an escape character in the test data, and possible backslashes in the pattern must thus be escaped with another backslash (e', 'g', ' dw+)', ],

	'Page Should Not Contain All Strings' : ['Fails if one of the strings in a given list exists on the mainframe screen', ' if one of the string are found, the keyword will raise a exception', 'The search is case sensitive, if you want ignore this you can pass the argument: ignore_case=${True} and you can edit the raise exception message with error_message', 'Example:Page Should Not Contain All Strings${list_of_string}Page Should Not Contain All Strings${list_of_string}ignore_case=${True}Page Should Not Contain All Strings${list_of_string}error_message=New error message,'],

	'Page Should Not Contain Any String' : ['Fails if one or more of the strings in a given list exists on the mainframe screen', ' if one or more of the string are found, the keyword will raise a exception', 'The search is case sensitive, if you want ignore this you can pass the argument: ignore_case=${True} and you can edit the raise exception message with error_message', 'Example:Page Should Not Contain Any Strings${list_of_string}Page Should Not Contain Any Strings${list_of_string}ignore_case=${True}Page Should Not Contain Any Strings${list_of_string}error_message=New error message,'],

	'Page Should Not Contain Match' : ['Fails if the given string matches the given pattern', 'Pattern matching is similar as matching files in a shell, and it is always case-sensitive', ' In the pattern, * matches to anything and ? matches to any single character', 'Note that the entire screen is only considered a string for this keyword, so if you want to search for the string something and it is somewhere other than at the beginning or end of the screen it should be reported as follows: *something*The search is case sensitive, if you want ignore this you can pass the argument: ignore_case=${True} and you can edit the raise exception message with error_message', 'Example:Page Should Not Contain Match*something*Page Should Not Contain Match*so???hing*Page Should Not Contain Match*someTHING*ignore_case=${True}Page Should Not Contain Match*something*error_message=New error message,'],

	'Page Should Not Contain String' : ['Search if a given string NOT exists on the mainframe screen', 'The search is case sensitive, if you want ignore this you can pass the argument: ignore_case=${True} and you can edit the raise exception message with error_message', 'Example:Page Should Not Contain StringsomethingPage Should Not Contain StringsomeTHINGignore_case=${True}Page Should Not Contain Stringsomethingerror_message=New error message,'],

	'Page Should Not Match Regex' : ['Fails if string does match pattern as a regular expression', ' Regular expression check is implemented using the Python re module', " Python's regular expression syntax is derived from Perl, and it is thus also very similar to the syntax used, for example, in Java, Ruby and ", 'NET', 'Backslash is an escape character in the test data, and possible backslashes in the pattern must thus be escaped with another backslash (e', 'g', ' dw+)', ],

	'Read' : ['Get a string of length at screen co-ordinates ypos/xpos', 'Co-ordinates are 1 based, as listed in the status area of the terminal', 'Example for read a string in the position y=8 / x=10 of a length 15:${value}Read81015,'],

	'Send Enter' : ['Send a Enter to the screen', ],

	'Send PF' : ['Send a Program Function to the screen', 'Example:Send PF3,'],

	'Set Screenshot Folder' : ['Set a folder to keep the html files generated by the Take Screenshot keyword', 'Example:Set Screenshot FolderC:TempImages,'],

	'Take Screenshot' : ['Generate a screenshot of the IBM 3270 Mainframe in a html format', ' The default folder is the log folder of RobotFramework, if you want change see the Set Screenshot Folder', 'The Screenshot is printed in a iframe log, with the values of height=410 and width=670, you can change this values passing them from the keyword', ''],

	'Wait Field Detected' : ['Wait until the screen is ready, the cursor has been positioned on a modifiable field, and the keyboard is unlocked', 'Sometimes the server will unlock the keyboard but the screen will not yet be ready', "  In that case, an attempt to read or write to the screen will result in a 'E' keyboard status because we tried to read from a screen that is not yet ready", 'Using this method tells the client to wait until a field is detected and the cursor has been positioned on it', ],

	'Wait Until String' : ['Wait until a string exists on the mainframe screen to perform the next step', ' If the string not appear on 5 seconds the keyword will raise a exception', ' You can define a different timeout', 'Example:Wait Until StringsomethingWait Until Stringsomethingtimeout=10,'],

	'Write' : ['Send a string to the screen at the current cursor location and a Enter', 'Example:Writesomething,'],

	'Write Bare' : ['Send only the string to the screen at the current cursor location', 'Example:Write Baresomething,'],

	'Write Bare In Position' : ['Send only the string to the screen at screen co-ordinates ypos/xpos', 'Co-ordinates are 1 based, as listed in the status area of the terminal', 'Example:Write Bare in Positionsomething911,'],

	'Write In Position' : ['Send a string to the screen at screen co-ordinates ypos/xpos and a Enter', 'Co-ordinates are 1 based, as listed in the status area of the terminal', 'Example:Write in Positionsomething911,'],
	
	'Init' : ["@port: sikuli java process socket port @timeout: Timeout of waiting java process started @mode: if set as 'DOC',  will stop java process automatically, if set as 'PYTHON', means library is running out of robot environment if set as 'CREATE', it is only for mvn package usage, will create keywords", "py file if set as 'OLD'(default), sikuli java process will be started when library is inited if set as 'NEW', user should use 'start_sikuli_process' to start java process,"],

	'Add Image Path' : ['Add image path,'],

	'Capture Region' : ['Capture regionCapture region passed '],

	'Capture Roi' : ['Capture Roi,'],

	'Capture Screen' : ['Capture whole screen, file name is returned,'],

	'Change Screen Id' : ['Change screen id For multi display, user could use this keyword to switch to the correct screen'],

	'Clear All Highlights' : ['Clear all highlights from screen,'],

	'Clear Highlight' : ['Clear highlight from screen,'],

	'Click' : ['ClickClick on an image with similarity and offset', ' '],

	'Click In' : ['Click in', ' Click target image in area image', ],

	'Click Nth' : ['Click nthClick on specific image', ' Optionally pass similarity and sort by column or row', ''],

	'Click Region' : ['Click regionClick on defined region cooridinates', ' Optionally Wait for specified time to ensure region has changed', ' Also, optionally set highlight'],

	'Click Text' : ['Click TextClick on text', ' '],

	'Close Application' : ['Close application,'],

	'Double Click' : ['Double click,'],

	'Double Click In' : ['Double click in', ' Double click target image in area image', ],

	'Drag And Drop' : ['Drag the source image to target image', ' If source image is empty, drag the last match and drop at given target,'],

	'Drag And Drop By Offset' : ['Drag the source image to target by offset', ' If source image is empty, drag the last match and drop at given target,'],

	'Exists' : ['ExistsCheck whether image exists in screen @image: expected image in screen @timeout: wait seconds'],

	'Get Current Screen Id' : ['Get current screen id,'],

	'Get Extended Region From' : ['Get extended region from Extended the given image creating a region above or below with the same width The height can change using the multiplier @number_of_times_to_repeat, if 2 is given the new region will have twice the height of the orignalge,'],

	'Get Image Coordinates' : ['Get Image CoordinatesReturn image coordinates, within region '],

	'Get Match Score' : ['Get match scoreTries to find the image on the screen, returns accuracy score (0-1)'],

	'Get Number Of Screens' : ['Get number of screens,'],

	'Get Screen Coordinates' : ['Get screen coordinatesReturn screen coordinates for active screen'],

	'Get Text' : ['Get textIf image is not given, keyword will get text from whole Screen If image is given, keyword will get text from matched region Call keyword setOcrTextRead to set OcrTextRead as true, before using text recognition keywords'],

	'Highlight' : ['Highlight matched image', ' If secs is set, highlight will vanish automatically after setted seconds,'],

	'Highlight Region' : ['Highlight region,'],

	'Highlight Roi' : ['Highlight ROI,'],

	'Image Count' : ['Image Count Count how many times the same picture is detected in screen', ''],

	'Input Text' : ['Input text Image could be empty'],

	'Mouse Down' : ['Mouse down Press and hold the specified buttons@mouseButtons: Could be LEFT, MIDDLE, RIGHT'],

	'Mouse Move' : ['Mouse moveMove the mouse pointer to the target@image: if image is empty, will move mouse to the last matched', ''],

	'Mouse Up' : ['Mouse up Release the specified mouse buttons@mouseButtons: Could be LEFT, MIDDLE, RIGHT', ' If empty, all currently held buttons are released'],

	'Open Application' : ['Open application To open app with parameters, refer: https://sikulix-2014', 'readthedocs', 'io/en/latest/appclass', 'html#App', 'App,'],

	'Paste Text' : ['Paste text', ' Image could be empty,'],

	'Press Special Key' : ['Press special key Presses a special keyboard key', 'For a list of possible Keys view docs for org', 'sikuli', 'script', 'Key ', ''],

	'Read Text From Region' : ['Read text from region,'],

	'Remove Image Path' : ['Remove image path,'],

	'Reset Roi' : ['Reset ROI Set Region of interest to full screen'],

	'Right Click' : ['Right click,'],

	'Right Click In' : ['Right click in', ' Right click target image in area image', ],

	'Screen Should Contain' : ['Screen should contain,'],

	'Screen Should Not Contain' : ['Screen should not contain Screen should not contain image'],

	'Select Region' : ['Select RegionAllow user to select a region and capture it', ' Return array of [capturedImagePath, x, y, w, h]'],

	'Set Capture Folder' : ['Set captured folderSet folder for captured images '],

	'Set Capture Matched Image' : ['Set capture matched imageSet capture matched images, the default value is true '],

	'Set Min Similarity' : ['Set min similarity,'],

	'Set Move Mouse Delay' : ['Set move mouse delay,'],

	'Set Ocr Text Read' : ['OCR text read,'],

	'Set Roi' : ['Set ROISet region of interest on screen Optionally pass highlight timeout', ''],

	'Set Show Actions' : ['Set show actions,'],

	'Set Slow Motion Delay' : ['Set slow motion delay Control the duration of the visual effect (seconds)', ],

	'Set Timeout' : ['Set timeoutSet Sikuli timeout(seconds) '],

	'Set Wait Scan Rate' : ['Set wait scan rate Specify the number of times actual search operations are performed per second while waiting for a pattern to appear or vanish', ],

	'Start Sikuli Process' : ['This keyword is used to start sikuli java process', ' If library is inited with mode OLD, sikuli java process is started automatically', ' If library is inited with mode NEW, this keyword should be used', ':param port: port of sikuli java process, if value is None or 0, a random free port will be used :return: None,'],

	'Stop Remote Server' : ['Stops the remote server', 'The server may be configured so that users cannot stop it', ],

	'Type With Modifiers' : ['Type with modifiers'],

	'Wait For Image' : ['Wait For ImageCheck wantedImage exist', ' If notWantedImage appear or timeout happened, throw exception@wantedImage: expected image in screen@notWantedImage: unexpected image in screen@timeout: wait seconds'],

	'Wait For Multiple Images' : ['Wait For Multiple ImagesCheck if images exists in expectedImages or notExpectedImages list', ' If image appears that is listed in notExpectedImages list or timeout happened, throw exception If image appears that is listed in expectedImageslist return succesfully', '@timeout: wait seconds@pollingInterval: time in seconds between screen checks@expectedImages: list of expected images in screen@notExpectedImages: list of not expected images in screen'],

	'Wait Until Screen Contain' : ['Wait until screen contain Wait until image shown in screen,'],

	'Wait Until Screen Not Contain' : ['Wait until screen not contain Wait until image not in screen,'],

	'Wheel Down' : ['Wheel down Move mouse to the target, and wheel down with give steps'],

	'Wheel Up' : ['Wheel up Move mouse to the target, and wheel up with give steps'],
	
	'Add Cookie' : ['Adds a cookie to your current session', 'name and value are required, path, domain, secure and expiry are optional', '  Expiry supports the same formats as the DateTime library or an epoch timestamp', 'Example:Add CookiefoobarAdd Cookiefoobardomain=example', 'comAdd Cookiefoobarexpiry=2027-09-28 16:21:35# Expiry as timestamp', 'Add Cookiefoobarexpiry=1822137695# Expiry as epoch seconds', 'Prior to SeleniumLibrary 3', '0 setting expiry did not work', ],

	'Add Location Strategy' : ['Adds a custom location strategy', 'See Custom locators for information on how to create and use custom strategies', ' Remove Location Strategy can be used to remove a registered strategy', 'Location strategies are automatically removed after leaving the current scope by default', ' Setting persist to a true value (see Boolean arguments) will cause the location strategy to stay registered throughout the life of the test', ],

	'Alert Should Be Present' : ['Verifies that an alert is present and by default, accepts it', 'Fails if no alert is present', " If text is a non-empty string, then it is used to verify alert's message", ' The alert is accepted by default, but that behavior can be controlled by using the action argument same way as with Handle Alert', 'timeout specifies how long to wait for the alert to appear', ' If it is not given, the global default timeout is used instead', 'action and timeout arguments are new in SeleniumLibrary 3', '0', ' In earlier versions, the alert was always accepted and a timeout was hardcoded to one second', ],

	'Alert Should Not Be Present' : ['Verifies that no alert is present', 'If the alert actually exists, the action argument determines how it should be handled', ' By default, the alert is accepted, but it can be also dismissed or left open the same way as with the Handle Alert keyword', 'timeout specifies how long to wait for the alert to appear', ' By default, is not waited for the alert at all, but a custom time can be given if alert may be delayed', ' See the time format section for information about the syntax', 'New in SeleniumLibrary 3', '0', ],

	'Assign Id To Element' : ['Assigns a temporary id to the element specified by locator', 'This is mainly useful if the locator is complicated and/or slow XPath expression and it is needed multiple times', ' Identifier expires when the page is reloaded', 'See the Locating elements section for details about the locator syntax', "Example:Assign ID to Element//ul[@class='example' and ", '/li[contains(', ", 'Stuff')]]my idPage Should Contain Elementmy id,"],

	'Capture Element Screenshot' : ['Captures a screenshot from the element identified by locator and embeds it into log file', 'See Capture Page Screenshot for details about filename argument', ' See the Locating elements section for details about the locator syntax', 'An absolute path to the created element screenshot is returned', 'Support for capturing the screenshot from an element has limited support among browser vendors', ' Please check the browser vendor driver documentation does the browser support capturing a screenshot from an element', 'New in SeleniumLibrary 3', '3', ' Support for EMBED is new in SeleniumLibrary 4', '2', ''],

	'Capture Page Screenshot' : ['Takes a screenshot of the current page and embeds it into a log file', 'filename argument specifies the name of the file to write the screenshot into', ' The directory where screenshots are saved can be set when importing the library or by using the Set Screenshot Directory keyword', " If the directory is not configured, screenshots are saved to the same directory where Robot Framework's log file is written", 'If filename equals to EMBED (case insensitive), then screenshot is embedded as Base64 image to the log', 'html', ' In this case file is not created in the filesystem', 'Starting from SeleniumLibrary 1', '8, if filename contains marker {index}, it will be automatically replaced with an unique running index, preventing files to be overwritten', " Indices start from 1, and how they are represented can be customized using Python's format string syntax", 'An absolute path to the created screenshot file is returned or if filename  equals to EMBED, word EMBED is returned', 'Support for EMBED is new in SeleniumLibrary 4', '2'],

	'Checkbox Should Be Selected' : ['Verifies checkbox locator is selected/checked', 'See the Locating elements section for details about the locator syntax', ],

	'Checkbox Should Not Be Selected' : ['Verifies checkbox locator is not selected/checked', 'See the Locating elements section for details about the locator syntax', ],

	'Choose File' : ['Inputs the file_path into the file input field locator', 'This keyword is most often used to input files into upload forms', ' The keyword does not check file_path is the file or folder available on the machine where tests are executed', ' If the file_path points at a file and when using Selenium Grid, Selenium will magically, transfer the file from the machine where the tests are executed to the Selenium Grid node where the browser is running', ' Then Selenium will send the file path, from the nodes file system, to the browser', 'That file_path is not checked, is new in SeleniumLibrary 4', '0', 'Example:Choose Filemy_upload_field${CURDIR}/trades', 'csv,'],

	'Clear Element Text' : ['Clears the value of the text-input-element identified by locator', 'See the Locating elements section for details about the locator syntax', ],

	'Click Button' : ['Clicks the button identified by locator', 'See the Locating elements section for details about the locator syntax', ' When using the default locator strategy, buttons are searched using id, name, and value', 'See the Click Element keyword for details about the modifier argument', 'The modifier argument is new in SeleniumLibrary 3', '3,'],

	'Click Element' : ['Click the element identified by locator', 'See the Locating elements section for details about the locator syntax', 'The modifier argument can be used to pass Selenium Keys when clicking the element', ' The + can be used as a separator for different Selenium Keys', ' The CTRL is internally translated to the CONTROL key', ' The modifier is space and case insensitive, example alt and  aLt  are supported formats to ALT key ', ' If modifier does not match to Selenium Keys, keyword fails', 'If action_chain argument is true, see Boolean arguments for more details on how to set boolean argument, then keyword uses ActionChain based click instead of the &lt;web_element&gt;', 'click() function', ' If both action_chain and modifier are defined, the click will be performed using modifier and action_chain will be ignored', 'Example:Click Elementid:button# Would click element without any modifiers', 'Click Elementid:buttonCTRL# Would click element with CTLR key pressed down', 'Click Elementid:buttonCTRL+ALT# Would click element with CTLR and ALT keys pressed down', 'Click Elementid:buttonaction_chain=True# Clicks the button using an Selenium  ActionChainsThe modifier argument is new in SeleniumLibrary 3', '2 The action_chain argument is new in SeleniumLibrary 4', '1,'],

	'Click Element At Coordinates' : ['Click the element locator at xoffset/yoffset', 'The Cursor is moved and the center of the element and x/y coordinates are calculated from that point', 'See the Locating elements section for details about the locator syntax', ],

	'Click Image' : ['Clicks an image identified by locator', 'See the Locating elements section for details about the locator syntax', ' When using the default locator strategy, images are searched using id, name, src and alt', 'See the Click Element keyword for details about the modifier argument', 'The modifier argument is new in SeleniumLibrary 3', '3,'],

	'Click Link' : ['Clicks a link identified by locator', 'See the Locating elements section for details about the locator syntax', ' When using the default locator strategy, links are searched using id, name, href and the link text', 'See the Click Element keyword for details about the modifier argument', 'The modifier argument is new in SeleniumLibrary 3', '3,'],

	'Close All Browsers' : ['Closes all open browsers and resets the browser cache', 'After this keyword, new indexes returned from Open Browser keyword are reset to 1', 'This keyword should be used in test or suite teardown to make sure all browsers are closed', ],

	'Close Browser' : ['Closes the current browser', ],

	'Close Window' : ['Closes currently opened and selected browser window/tab', ],

	'Cover Element' : ['Will cover elements identified by locator with a blue div without breaking page layout', 'See the Locating elements section for details about the locator syntax', 'New in SeleniumLibrary 3', '3', '0Example: |Cover Element | css:div#container |,'],

	'Create Webdriver' : ['Creates an instance of Selenium WebDriver', 'Like Open Browser, but allows passing arguments to the created WebDriver instance directly', ' This keyword should only be used if the functionality provided by Open Browser is not adequate', 'driver_name must be a WebDriver implementation name like Firefox, Chrome, Ie, Opera, Safari, PhantomJS, or Remote', 'The initialized WebDriver can be configured either with a Python dictionary kwargs or by using keyword arguments **init_kwargs', ' These arguments are passed directly to WebDriver without any processing', ' See Selenium API documentation for details about the supported arguments', ''],

	'Current Frame Should Contain' : ['Verifies that the current frame contains text', 'See Page Should Contain for an explanation about the loglevel argument', 'Prior to SeleniumLibrary 3', '0 this keyword was named Current Frame Contains', ],

	'Current Frame Should Not Contain' : ['Verifies that the current frame does not contain text', 'See Page Should Contain for an explanation about the loglevel argument', ],

	'Delete All Cookies' : ['Deletes all cookies', ],

	'Delete Cookie' : ['Deletes the cookie matching name', 'If the cookie is not found, nothing happens', ],

	'Double Click Element' : ['Double clicks the element identified by locator', 'See the Locating elements section for details about the locator syntax', ],

	'Drag And Drop' : ['Drags the element identified by locator into the target element', 'The locator argument is the locator of the dragged element and the target is the locator of the target', ' See the Locating elements section for details about the locator syntax', 'Example:Drag And Dropcss:div#elementcss:div', 'target,'],

	'Drag And Drop By Offset' : ['Drags the element identified with locator by xoffset/yoffset', 'See the Locating elements section for details about the locator syntax', 'The element will be moved by xoffset and yoffset, each of which is a negative or positive number specifying the offset', 'Example:Drag And Drop By OffsetmyElem50-35# Move myElem 50px right and 35px down,'],

	'Element Attribute Value Should Be' : ['Verifies element identified by locator contains expected attribute value', 'See the Locating elements section for details about the locator syntax', 'Example: Element Attribute Value Should Be | css:img | href | valueNew in SeleniumLibrary 3', '2', ],

	'Element Should Be Disabled' : ['Verifies that element identified by locator is disabled', 'This keyword considers also elements that are read-only to be disabled', 'See the Locating elements section for details about the locator syntax', ],

	'Element Should Be Enabled' : ['Verifies that element identified by locator is enabled', 'This keyword considers also elements that are read-only to be disabled', 'See the Locating elements section for details about the locator syntax', ],

	'Element Should Be Focused' : ['Verifies that element identified by locator is focused', 'See the Locating elements section for details about the locator syntax', 'New in SeleniumLibrary 3', '0', ],

	'Element Should Be Visible' : ['Verifies that the element identified by locator is visible', 'Herein, visible means that the element is logically visible, not optically visible in the current browser viewport', ' For example, an element that carries display:none is not logically visible, so using this keyword on that element would fail', 'See the Locating elements section for details about the locator syntax', 'The message argument can be used to override the default error message', ],

	'Element Should Contain' : ['Verifies that element locator contains text expected', 'See the Locating elements section for details about the locator syntax', 'The message argument can be used to override the default error message', 'The ignore_case argument can be set to True to compare case insensitive, default is False', ' New in SeleniumLibrary 3', '1', 'ignore_case argument is new in SeleniumLibrary 3', '1', 'Use Element Text Should Be if you want to match the exact text, not a substring', ],

	'Element Should Not Be Visible' : ['Verifies that the element identified by locator is NOT visible', 'Passes if the element does not exists', ' See Element Should Be Visible for more information about visibility and supported arguments', ],

	'Element Should Not Contain' : ['Verifies that element locator does not contain text expected', 'See the Locating elements section for details about the locator syntax', 'The message argument can be used to override the default error message', 'The ignore_case argument can be set to True to compare case insensitive, default is False', 'ignore_case argument new in SeleniumLibrary 3', '1', ],

	'Element Text Should Be' : ['Verifies that element locator contains exact the text expected', 'See the Locating elements section for details about the locator syntax', 'The message argument can be used to override the default error message', 'The ignore_case argument can be set to True to compare case insensitive, default is False', 'ignore_case argument is new in SeleniumLibrary 3', '1', 'Use Element Should Contain if a substring match is desired', ],

	'Element Text Should Not Be' : ['Verifies that element locator does not contain exact the text not_expected', 'See the Locating elements section for details about the locator syntax', 'The message argument can be used to override the default error message', 'The ignore_case argument can be set to True to compare case insensitive, default is False', 'New in SeleniumLibrary 3', '1', '1,'],

	'Execute Async Javascript' : ['Executes asynchronous JavaScript code with possible arguments', 'Similar to Execute Javascript except that scripts executed with this keyword must explicitly signal they are finished by invoking the provided callback', ' This callback is always injected into the executed function as the last argument', 'Scripts must complete within the script timeout or this keyword will fail', ' See the Timeout section for more information', 'Starting from SeleniumLibrary 3', '2 it is possible to provide JavaScript arguments as part of code argument', ' See Execute Javascript for more details', ''],

	'Execute Javascript' : ['Executes the given JavaScript code with possible arguments', 'code may be divided into multiple cells in the test data and code may contain multiple lines of code and arguments', ' In that case, the JavaScript code parts are concatenated together without adding spaces and optional arguments are separated from code', 'If code is a path to an existing file, the JavaScript to execute will be read from that file', ' Forward slashes work as a path separator on all operating systems', 'The JavaScript executes in the context of the currently selected frame or window as the body of an anonymous function', ' Use window to refer to the window of your application and document to refer to the document object of the current frame or window, e', 'g', ' document', "getElementById('example')", 'This keyword returns whatever the executed JavaScript code returns', ' Return values are converted to the appropriate Python types', 'Starting from SeleniumLibrary 3', '2 it is possible to provide JavaScript arguments as part of code argument', ' The JavaScript code and arguments must be separated with JAVASCRIPT and ARGUMENTS markers and must be used exactly with this format', ' If the Javascript code is first, then the JAVASCRIPT marker is optional', ' The order of JAVASCRIPT and ARGUMENTS markers can be swapped, but if ARGUMENTS is the first marker, then JAVASCRIPT marker is mandatory', ' It is only allowed to use JAVASCRIPT and ARGUMENTS markers only one time in the code argument', ''],

	'Frame Should Contain' : ['Verifies that frame identified by locator contains text', 'See the Locating elements section for details about the locator syntax', 'See Page Should Contain for an explanation about the loglevel argument', ],

	'Get All Links' : ['Returns a list containing ids of all links found in current page', 'If a link has no id, an empty string will be in the list instead', ],

	'Get Browser Aliases' : ['Returns aliases of all active browser that has an alias as NormalizedDict', ' The dictionary contains the aliases as keys and the index as value', ' This can be accessed as dictionary ${aliases', 'key} or as list @{aliases}[0]', 'Example:Open Browserhttps://example', 'comalias=BrowserAOpen Browserhttps://example', 'comalias=BrowserB&amp;{aliases}Get Browser Aliases# &amp;{aliases} = { BrowserA=1|BrowserB=2 }Log${aliases', 'BrowserA}# logs 1FOR${alias}IN@{aliases}Log${alias}# logs BrowserA and BrowserBENDSee Switch Browser for more information and examples', 'New in SeleniumLibrary 4', '0,'],

	'Get Browser Ids' : ['Returns index of all active browser as list', 'Example:@{browser_ids}=Get Browser IdsFOR${id}IN@{browser_ids}@{window_titles}=Get Window Titlesbrowser=${id}LogBrowser ${id} has these windows: ${window_titles}ENDSee Switch Browser for more information and examples', 'New in SeleniumLibrary 4', '0,'],

	'Get Cookie' : ['Returns information of cookie with name as an object', 'If no cookie is found with name, keyword fails', ' The cookie object contains details about the cookie', ' Attributes available in the object are documented in the table below', 'AttributeExplanationnameThe name of a cookie', 'valueValue of the cookie', 'pathIndicates a URL path, for example /', 'domainThe domain, the cookie is visible to', 'secureWhen true, the cookie is only used with HTTPS connections', 'httpOnlyWhen true, the cookie is not accessible via JavaScript', 'expiryPython datetime object indicating when the cookie expires', 'extraPossible attributes outside of the WebDriver specificationSee the WebDriver specification for details about the cookie information', ' Notice that expiry is specified as a datetime object, not as seconds since Unix Epoch like WebDriver natively does', 'In some cases, example when running a browser in the cloud, it is possible that the cookie contains other attributes than is defined in the WebDriver specification', ' These other attributes are available in an extra attribute in the cookie object and it contains a dictionary of the other attributes', ' The extra attribute is new in SeleniumLibrary 4', '0', 'Example:Add Cookiefoobar${cookie} =Get CookiefooShould Be Equal${cookie', 'name}fooShould Be Equal${cookie', 'value}barShould Be True${cookie', 'expiry', 'year} &gt; 2017New in SeleniumLibrary 3', '0', ],

	'Get Cookies' : ['Returns all cookies of the current page', 'If as_dict argument evaluates as false, see Boolean arguments for more details, then cookie information is returned as a single string in format name1=value1; name2=value2; name3=value3', ' When as_dict argument evaluates as true, cookie information is returned as Robot Framework dictionary format', ' The string format can be used, for example, for logging purposes or in headers when sending HTTP requests', " The dictionary format is helpful when the result can be passed to requests library's Create Session keyword's optional cookies parameter", 'The ` as_dict` argument is new in SeleniumLibrary 3', '3,'],

	'Get Element Attribute' : ['Returns the value of attribute from the element locator', 'See the Locating elements section for details about the locator syntax', 'Example:${id}=Get Element Attributecss:h1idPassing attribute name as part of the locator was removed in SeleniumLibrary 3', '2', ' The explicit attribute argument should be used instead', ],

	'Get Element Count' : ['Returns the number of elements matching locator', 'If you wish to assert the number of matching elements, use Page Should Contain Element with limit argument', ' Keyword will always return an integer', 'Example:${count} =Get Element Countname:div_nameShould Be True${count} &gt; 2New in SeleniumLibrary 3', '0', ],

	'Get Element Size' : ['Returns width and height of the element identified by locator', 'See the Locating elements section for details about the locator syntax', 'Both width and height are returned as integers', 'Example:${width}${height} =Get Element Sizecss:div#container,'],

	'Get Horizontal Position' : ['Returns the horizontal position of the element identified by locator', 'See the Locating elements section for details about the locator syntax', 'The position is returned in pixels off the left side of the page, as an integer', 'See also Get Vertical Position', ],

	'Get List Items' : ['Returns all labels or values of selection list locator', 'See the Locating elements section for details about the locator syntax', 'Returns visible labels by default, but values can be returned by setting the values argument to a true value (see Boolean arguments)', 'Example:${labels} =Get List Itemsmylist${values} =Get List Itemscss:#example selectvalues=TrueSupport to return values is new in SeleniumLibrary 3', '0', ],

	'Get Location' : ['Returns the current browser window URL', ],

	'Get Locations' : ['Returns and logs URLs of all windows of the selected browser', 'Browser Scope:The browser argument specifies the browser that shall return its windows information', 'browser can be index_or_alias like in Switch Browser', 'If browser is CURRENT (default, case-insensitive) the currently active browser is selected', 'If browser is ALL (case-insensitive) the window information of all windows of all opened browsers are returned', ],

	'Get Selected List Label' : ['Returns the label of selected option from selection list locator', 'If there are multiple selected options, the label of the first option is returned', 'See the Locating elements section for details about the locator syntax', ],

	'Get Selected List Labels' : ['Returns labels of selected options from selection list locator', 'Starting from SeleniumLibrary 3', '0, returns an empty list if there are no selections', ' In earlier versions, this caused an error', 'See the Locating elements section for details about the locator syntax', ],

	'Get Selected List Value' : ['Returns the value of selected option from selection list locator', 'If there are multiple selected options, the value of the first option is returned', 'See the Locating elements section for details about the locator syntax', ],

	'Get Selected List Values' : ['Returns values of selected options from selection list locator', 'Starting from SeleniumLibrary 3', '0, returns an empty list if there are no selections', ' In earlier versions, this caused an error', 'See the Locating elements section for details about the locator syntax', ],

	'Get Selenium Implicit Wait' : ['Gets the implicit wait value used by Selenium', 'The value is returned as a human-readable string like 1 second', 'See the Implicit wait section above for more information', ],

	'Get Selenium Speed' : ['Gets the delay that is waited after each Selenium command', 'The value is returned as a human-readable string like 1 second', 'See the Selenium Speed section above for more information', ],

	'Get Selenium Timeout' : ['Gets the timeout that is used by various keywords', 'The value is returned as a human-readable string like 1 second', 'See the Timeout section above for more information', ],

	'Get Session Id' : ['Returns the currently active browser session id', 'New in SeleniumLibrary 3', '2,'],

	'Get Source' : ['Returns the entire HTML source of the current page or frame', ],

	'Get Table Cell' : ['Returns contents of a table cell', 'The table is located using the locator argument and its cell found using row and column', ' See the Locating elements section for details about the locator syntax', 'Both row and column indexes start from 1, and header and footer rows are included in the count', ' It is possible to refer to rows and columns from the end by using negative indexes so that -1 is the last row/column, -2 is the second last, and so on', 'All &lt;th&gt; and &lt;td&gt; elements anywhere in the table are considered to be cells', 'See Page Should Contain for an explanation about the loglevel argument', ],

	'Get Text' : ['Returns the text value of the element identified by locator', 'See the Locating elements section for details about the locator syntax', ],

	'Get Title' : ['Returns the title of the current page', ],

	'Get Value' : ['Returns the value attribute of the element identified by locator', 'See the Locating elements section for details about the locator syntax', ],

	'Get Vertical Position' : ['Returns the vertical position of the element identified by locator', 'See the Locating elements section for details about the locator syntax', 'The position is returned in pixels off the top of the page, as an integer', 'See also Get Horizontal Position', ],

	'Get WebElement' : ['Returns the first WebElement matching the given locator', 'See the Locating elements section for details about the locator syntax', ],

	'Get WebElements' : ['Returns a list of WebElement objects matching the locator', 'See the Locating elements section for details about the locator syntax', 'Starting from SeleniumLibrary 3', '0, the keyword returns an empty list if there are no matching elements', ' In previous releases, the keyword failed in this case', ],

	'Get Window Handles' : ['Returns all child window handles of the selected browser as a list', 'Can be used as a list of windows to exclude with Select Window', 'How to select the browser scope of this keyword, see Get Locations', 'Prior to SeleniumLibrary 3', '0, this keyword was named List Windows', ],

	'Get Window Identifiers' : ['Returns and logs id attributes of all windows of the selected browser', 'How to select the browser scope of this keyword, see Get Locations', ],

	'Get Window Names' : ['Returns and logs names of all windows of the selected browser', 'How to select the browser scope of this keyword, see Get Locations', ],

	'Get Window Position' : ['Returns current window position', 'The position is relative to the top left corner of the screen', ' Returned values are integers', ' See also Set Window Position', 'Example:${x}${y}=Get Window Position,'],

	'Get Window Size' : ['Returns current window width and height as integers', 'See also Set Window Size', 'If inner parameter is set to True, keyword returns HTML DOM window', 'innerWidth and window', 'innerHeight properties', ' See Boolean arguments for more details on how to set boolean arguments', ' The inner is new in SeleniumLibrary 4', '0', 'Example:${width}${height}=Get Window Size${width}${height}=Get Window SizeTrue,'],

	'Get Window Titles' : ['Returns and logs titles of all windows of the selected browser', 'How to select the browser scope of this keyword, see Get Locations', ],

	'Go Back' : ['Simulates the user clicking the back button on their browser', ],

	'Go To' : ['Navigates the current browser window to the provided url', ],

	'Handle Alert' : ['Handles the current alert and returns its message', 'By default, the alert is accepted, but this can be controlled with the action argument that supports the following case-insensitive values:ACCEPT: Accept the alert i', 'e', ' press Ok', ' Default', 'DISMISS: Dismiss the alert i', 'e', ' press Cancel', 'LEAVE: Leave the alert open', 'The timeout argument specifies how long to wait for the alert to appear', ' If it is not given, the global default timeout is used instead', ''],

	'Input Password' : ['Types the given password into the text field identified by locator', 'See the Locating elements section for details about the locator syntax', ' See Input Text for clear argument details', 'Difference compared to Input Text is that this keyword does not log the given password on the INFO level', ' Notice that if you use the keyword likeInput Passwordpassword_fieldpasswordthe password is shown as a normal keyword argument', ' A way to avoid that is using variables likeInput Passwordpassword_field${PASSWORD}Please notice that Robot Framework logs all arguments using the TRACE level and tests must not be executed using level below DEBUG if the password should not be logged in any format', 'The clear argument is new in SeleniumLibrary 4', '0', ' Hiding password logging from Selenium logs is new in SeleniumLibrary 4', '2', ],

	'Input Text' : ['Types the given text into the text field identified by locator', 'When clear is true, the input element is cleared before the text is typed into the element', ' When false, the previous text is not cleared from the element', ' Use Input Password if you do not want the given text to be logged', 'If Selenium Grid is used and the text argument points to a file in the file system, then this keyword prevents the Selenium to transfer the file to the Selenium Grid hub', ' Instead, this keyword will send the text string as is to the element', ' If a file should be transferred to the hub and upload should be performed, please use Choose File keyword', 'See the Locating elements section for details about the locator syntax', ' See the Boolean arguments section how Boolean values are handled', 'Disabling the file upload the Selenium Grid node and the clear argument are new in SeleniumLibrary 4', '0,'],

	'Input Text Into Alert' : ['Types the given text into an input field in an alert', 'The alert is accepted by default, but that behavior can be controlled by using the action argument same way as with Handle Alert', 'timeout specifies how long to wait for the alert to appear', ' If it is not given, the global default timeout is used instead', 'New in SeleniumLibrary 3', '0', ],

	'List Selection Should Be' : ['Verifies selection list locator has expected options selected', 'It is possible to give expected options both as visible labels and as values', ' Starting from SeleniumLibrary 3', '0, mixing labels and values is not possible', ' Order of the selected options is not validated', 'If no expected options are given, validates that the list has no selections', ' A more explicit alternative is using List Should Have No Selections', 'See the Locating elements section for details about the locator syntax', ''],

	'List Should Have No Selections' : ['Verifies selection list locator has no options selected', 'See the Locating elements section for details about the locator syntax', ],

	'Location Should Be' : ['Verifies that the current URL is exactly url', 'The url argument contains the exact url that should exist in browser', 'The message argument can be used to override the default error message', 'message argument is new in SeleniumLibrary 3', '2', '0', ],

	'Location Should Contain' : ['Verifies that the current URL contains expected', 'The expected argument contains the expected value in url', 'The message argument can be used to override the default error message', 'message argument is new in SeleniumLibrary 3', '2', '0', ],

	'Locator Should Match X Times' : ['DEPRECATED in SeleniumLibrary 4', '0', ', use Page Should Contain Element with limit argument instead', ],

	'Log Location' : ['Logs and returns the current browser window URL', ],

	'Log Source' : ['Logs and returns the HTML source of the current page or frame', 'The loglevel argument defines the used log level', ' Valid log levels are WARN, INFO (default), DEBUG, TRACE and NONE (no logging)', ],

	'Log Title' : ['Logs and returns the title of the current page', ],

	'Maximize Browser Window' : ['Maximizes current browser window', ],

	'Mouse Down' : ['Simulates pressing the left mouse button on the element locator', 'See the Locating elements section for details about the locator syntax', 'The element is pressed without releasing the mouse button', 'See also the more specific keywords Mouse Down On Image and Mouse Down On Link', ],

	'Mouse Down On Image' : ['Simulates a mouse down event on an image identified by locator', 'See the Locating elements section for details about the locator syntax', ' When using the default locator strategy, images are searched using id, name, src and alt', ],

	'Mouse Down On Link' : ['Simulates a mouse down event on a link identified by locator', 'See the Locating elements section for details about the locator syntax', ' When using the default locator strategy, links are searched using id, name, href and the link text', ],

	'Mouse Out' : ['Simulates moving the mouse away from the element locator', 'See the Locating elements section for details about the locator syntax', ],

	'Mouse Over' : ['Simulates hovering the mouse over the element locator', 'See the Locating elements section for details about the locator syntax', ],

	'Mouse Up' : ['Simulates releasing the left mouse button on the element locator', 'See the Locating elements section for details about the locator syntax', ],

	'Open Browser' : ['Opens a new browser instance to the optional url', 'The browser argument specifies which browser to use', ' The supported browsers are listed in the table below', ' The browser names are case-insensitive and some browsers have multiple supported names', 'BrowserName(s)Firefoxfirefox, ffGoogle Chromegooglechrome, chrome, gcHeadless FirefoxheadlessfirefoxHeadless ChromeheadlesschromeInternet Explorerinternetexplorer, ieEdgeedgeSafarisafariOperaoperaAndroidandroidIphoneiphonePhantomJSphantomjsHTMLUnithtmlunitHTMLUnit with JavascripthtmlunitwithjsTo be able to actually use one of these browsers, you need to have a matching Selenium browser driver available', ' See the project documentation for more details', ' Headless Firefox and Headless Chrome are new additions in SeleniumLibrary 3', '1', '0 and require Selenium 3', '8', '0 or newer', 'After opening the browser, it is possible to use optional url to navigate the browser to the desired address', 'Optional alias is an alias given for this browser instance and it can be used for switching between browsers', ' When same alias is given with two Open Browser keywords, the first keyword will open a new browser, but the second one will switch to the already opened browser and will not open a new browser', ' The alias definition overrules browser definition', ' When same alias is used but a different browser is defined, then switch to a browser with same alias is done and new browser is not opened', ' An alternative approach for switching is using an index returned by this keyword', ' These indices start from 1, are incremented when new browsers are opened, and reset back to 1 when Close All Browsers is called', ' See Switch Browser for more information and examples', 'Optional remote_url is the URL for a Selenium Grid', 'Optional desired_capabilities can be used to configure, for example, logging preferences for a browser or a browser and operating system when using Sauce Labs', ' Desired capabilities can be given either as a Python dictionary or as a string in the format key1:value1,key2:value2', ' Selenium documentation lists possible capabilities that can be enabled', 'Optional ff_profile_dir is the path to the Firefox profile directory if you wish to overwrite the default profile Selenium uses', ' Notice that prior to SeleniumLibrary 3', '0, the library contained its own profile that was used by default', ' The ff_profile_dir can also be an instance of the selenium', 'webdriver', 'FirefoxProfile ', ' As a third option, it is possible to use FirefoxProfile methods and attributes to define the profile using methods and attributes in the same way as with options argument', ' Example: It is possible to use FirefoxProfile set_preference to define different profile settings', ' See options argument documentation in below how to handle backslash escaping', 'Optional options argument allows defining browser specific Selenium options', ' Example for Chrome, the options argument allows defining the following methods and attributes and for Firefox these methods and attributes are available', ' Please note that not all browsers, supported by the SeleniumLibrary, have Selenium options available', ' Therefore please consult the Selenium documentation which browsers do support the Selenium options', ' If browser argument is android then Chrome options is used', ' Selenium options are also supported, when remote_url argument is used', 'The SeleniumLibrary options argument accepts Selenium options in two different formats: as a string and as Python object which is an instance of the Selenium options class', 'The string format allows defining Selenium options methods or attributes and their arguments in Robot Framework test data', ' The method and attributes names are case and space sensitive and must match to the Selenium options methods and attributes names', ' When defining a method, it must be defined in a similar way as in python: method name, opening parenthesis, zero to many arguments and closing parenthesis', ' If there is a need to define multiple arguments for a single method, arguments must be separated with comma, just like in Python', ' Example: add_argument(--headless) or add_experimental_option(key, value)', ' Attributes are defined in a similar way as in Python: attribute name, equal sign, and attribute value', ' Example, headless=True', ' Multiple methods and attributes must be separated by a semicolon', ' Example: add_argument(--headless);add_argument(--start-maximized)', 'Arguments allow defining Python data types and arguments are evaluated by using Python ast', 'literal_eval', " Strings must be quoted with single or double quotes, example value or 'value'", ' It is also possible to define other Python builtin data types, example True or None, by not using quotes around the arguments', 'The string format is space friendly', ' Usually, spaces do not alter the defining methods or attributes', ' There are two exceptions', ' In some Robot Framework test data formats, two or more spaces are considered as cell separator and instead of defining a single argument, two or more arguments may be defined', ' Spaces in string arguments are not removed and are left as is', ' Example add_argument ( --headless ) is same as add_argument(--headless)', ' But add_argument( --headless ) is not same same as add_argument ( --headless ), because spaces inside of quotes are not removed', ' Please note that if options string contains backslash, example a Windows OS path, the backslash needs escaping both in Robot Framework data and in Python side', ' This means single backslash must be writen using four backslash characters', ' Example, Windows path: C:pathtoprofile must be written as C:pathtoprofile', ' Another way to write backslash is use Python raw strings and example write: rC:pathtoprofile', 'As last format, options argument also supports receiving the Selenium options as Python class instance', ' In this case, the instance is used as-is and the SeleniumLibrary will not convert the instance to other formats', ' For example, if the following code return value is saved to ${options} variable in the Robot Framework data:options = webdriver', 'ChromeOptions()options', "add_argument('--disable-dev-shm-usage')return optionsThen the ${options} variable can be used as an argument to options", 'Example the options argument can be used to launch Chomium-based applications which utilize the Chromium Embedded Framework ', ' To lauch Chomium-based application, use options to define binary_location attribute and use add_argument method to define remote-debugging-port port for the application', ' Once the browser is opened, the test can interact with the embedded web-content of the system under test', 'Optional service_log_path argument defines the name of the file where to write the browser driver logs', ' If the service_log_path  argument contain a  marker {index}, it will be automatically replaced with unique running index preventing files to be overwritten', " Indices start's from 1, and how they are represented can be customized using Python's format string syntax", 'Optional executable_path argument defines the path to the driver executable, example to a chromedriver or a geckodriver', ' If not defined it is assumed the executable is in the $PATH', ''],

	'Open Context Menu' : ['Opens the context menu on the element identified by locator', ],

	'Page Should Contain' : ['Verifies that current page contains text', 'If this keyword fails, it automatically logs the page source using the log level specified with the optional loglevel argument', ' Valid log levels are DEBUG, INFO (default), WARN, and NONE', ' If the log level is NONE or below the current active log level the source will not be logged', ],

	'Page Should Contain Button' : ['Verifies button locator is found from current page', 'See Page Should Contain Element for an explanation about message and loglevel arguments', 'See the Locating elements section for details about the locator syntax', ' When using the default locator strategy, buttons are searched using id, name, and value', ],

	'Page Should Contain Checkbox' : ['Verifies checkbox locator is found from the current page', 'See Page Should Contain Element for an explanation about message and loglevel arguments', 'See the Locating elements section for details about the locator syntax', ],

	'Page Should Contain Element' : ['Verifies that element locator is found on the current page', 'See the Locating elements section for details about the locator syntax', 'The message argument can be used to override the default error message', 'The limit argument can used to define how many elements the page should contain', ' When limit is None (default) page can contain one or more elements', ' When limit is a number, page must contain same number of elements', 'See Page Should Contain for an explanation about the loglevel argument', 'Examples assumes that locator matches to two elements', 'Page Should Contain Elementdiv_namelimit=1# Keyword fails', 'Page Should Contain Elementdiv_namelimit=2# Keyword passes', 'Page Should Contain Elementdiv_namelimit=none# None is considered one or more', 'Page Should Contain Elementdiv_name# Same as above', 'The limit argument is new in SeleniumLibrary 3', '0', ],

	'Page Should Contain Image' : ['Verifies image identified by locator is found from current page', 'See the Locating elements section for details about the locator syntax', ' When using the default locator strategy, images are searched using id, name, src and alt', 'See Page Should Contain Element for an explanation about message and loglevel arguments', ],

	'Page Should Contain Link' : ['Verifies link identified by locator is found from current page', 'See the Locating elements section for details about the locator syntax', ' When using the default locator strategy, links are searched using id, name, href and the link text', 'See Page Should Contain Element for an explanation about message and loglevel arguments', ],

	'Page Should Contain List' : ['Verifies selection list locator is found from current page', 'See Page Should Contain Element for an explanation about message and loglevel arguments', 'See the Locating elements section for details about the locator syntax', ],

	'Page Should Contain Radio Button' : ['Verifies radio button locator is found from current page', 'See Page Should Contain Element for an explanation about message and loglevel arguments', 'See the Locating elements section for details about the locator syntax', ' When using the default locator strategy, radio buttons are searched using id, name and value', ],

	'Page Should Contain Textfield' : ['Verifies text field locator is found from current page', 'See Page Should Contain Element for an explanation about message and loglevel arguments', 'See the Locating elements section for details about the locator syntax', ],

	'Page Should Not Contain' : ['Verifies the current page does not contain text', 'See Page Should Contain for an explanation about the loglevel argument', ],

	'Page Should Not Contain Button' : ['Verifies button locator is not found from current page', 'See Page Should Contain Element for an explanation about message and loglevel arguments', 'See the Locating elements section for details about the locator syntax', ' When using the default locator strategy, buttons are searched using id, name, and value', ],

	'Page Should Not Contain Checkbox' : ['Verifies checkbox locator is not found from the current page', 'See Page Should Contain Element for an explanation about message and loglevel arguments', 'See the Locating elements section for details about the locator syntax', ],

	'Page Should Not Contain Element' : ['Verifies that element locator is not found on the current page', 'See the Locating elements section for details about the locator syntax', 'See Page Should Contain for an explanation about message and loglevel arguments', ],

	'Page Should Not Contain Image' : ['Verifies image identified by locator is not found from current page', 'See the Locating elements section for details about the locator syntax', ' When using the default locator strategy, images are searched using id, name, src and alt', 'See Page Should Contain Element for an explanation about message and loglevel arguments', ],

	'Page Should Not Contain Link' : ['Verifies link identified by locator is not found from current page', 'See the Locating elements section for details about the locator syntax', ' When using the default locator strategy, links are searched using id, name, href and the link text', 'See Page Should Contain Element for an explanation about message and loglevel arguments', ],

	'Page Should Not Contain List' : ['Verifies selection list locator is not found from current page', 'See Page Should Contain Element for an explanation about message and loglevel arguments', 'See the Locating elements section for details about the locator syntax', ],

	'Page Should Not Contain Radio Button' : ['Verifies radio button locator is not found from current page', 'See Page Should Contain Element for an explanation about message and loglevel arguments', 'See the Locating elements section for details about the locator syntax', ' When using the default locator strategy, radio buttons are searched using id, name and value', ],

	'Page Should Not Contain Textfield' : ['Verifies text field locator is not found from current page', 'See Page Should Contain Element for an explanation about message and loglevel arguments', 'See the Locating elements section for details about the locator syntax', ],

	'Press Key' : ['DEPRECATED in SeleniumLibrary 4', '0', ' use Press Keys instead', ],

	'Press Keys' : ['Simulates the user pressing key(s) to an element or on the active browser', 'If locator evaluates as false, see Boolean arguments for more details, then the keys are sent to the currently active browser', ' Otherwise element is searched and keys are send to the element identified by the locator', ' In later case, keyword fails if element is not found', ' See the Locating elements section for details about the locator syntax', 'keys arguments can contain one or many strings, but it can not be empty', ' keys can also be a combination of Selenium Keys and strings or a single Selenium Key', ' If Selenium Key is combined with strings, Selenium key and strings must be separated by the + character, like in CONTROL+c', ' Selenium Keys are space and case sensitive and Selenium Keys are not parsed inside of the string', ' Example AALTO, would send string AALTO and ALT not parsed inside of the string', ' But A+ALT+O would found Selenium ALT key from the keys argument', " It also possible to press many Selenium Keys down at the same time, example 'ALT+ARROW_DOWN`", 'If Selenium Keys are detected in the keys argument, keyword will press the Selenium Key down, send the strings and then release the Selenium Key', ' If keyword needs to send a Selenium Key as a string, then each character must be separated with + character, example E+N+D', 'CTRL is alias for Selenium CONTROL and ESC is alias for Selenium ESCAPENew in SeleniumLibrary 3', '3'],

	'Radio Button Should Be Set To' : ['Verifies radio button group group_name is set to value', 'group_name is the name of the radio button group', ],

	'Radio Button Should Not Be Selected' : ['Verifies radio button group group_name has no selection', 'group_name is the name of the radio button group', ],

	'Register Keyword To Run On Failure' : ['Sets the keyword to execute, when a SeleniumLibrary keyword fails', 'keyword is the name of a keyword that will be executed if a SeleniumLibrary keyword fails', ' It is possible to use any available keyword, including user keywords or keywords from other libraries, but the keyword must not take any arguments', 'The initial keyword to use is set when importing the library, and the keyword that is used by default is Capture Page Screenshot', ' Taking a screenshot when something failed is a very useful feature, but notice that it can slow down the execution', 'It is possible to use string NOTHING or NONE, case-insensitively, as well as Python None to disable this feature altogether', 'This keyword returns the name of the previously registered failure keyword or Python None if this functionality was previously disabled', ' The return value can be always used to restore the original value later', 'Example:Register Keyword To Run On FailureLog Source${previous kw}=Register Keyword To Run On FailureNONERegister Keyword To Run On Failure${previous kw}Changes in SeleniumLibrary 3', '0:Possible to use string NONE or Python None to disable the functionality', 'Return Python None when the functionality was disabled earlier', ' In previous versions special value No Keyword was returned and it could not be used to restore the original state', ],

	'Reload Page' : ['Simulates user reloading page', ],

	'Remove Location Strategy' : ['Removes a previously added custom location strategy', 'See Custom locators for information on how to create and use custom strategies', ],

	'Scroll Element Into View' : ['Scrolls the element identified by locator into view', 'See the Locating elements section for details about the locator syntax', 'New in SeleniumLibrary 3', '2', '0,'],

	'Select All From List' : ['Selects all options from multi-selection list locator', 'See the Locating elements section for details about the locator syntax', ],

	'Select Checkbox' : ['Selects the checkbox identified by locator', 'Does nothing if checkbox is already selected', 'See the Locating elements section for details about the locator syntax', ],

	'Select Frame' : ['Sets frame identified by locator as the current frame', 'See the Locating elements section for details about the locator syntax', 'Works both with frames and iframes', ' Use Unselect Frame to cancel the frame selection and return to the main frame', "Example:Select Frametop-frame# Select frame with id or name 'top-frame'Click Linkexample# Click link 'example' in the selected frameUnselect Frame# Back to main frame", "Select Frame//iframe[@name='xxx']# Select frame using xpath,"],

	'Select From List By Index' : ['Selects options from selection list locator by indexes', 'Indexes of list options start from 0', 'If more than one option is given for a single-selection list, the last value will be selected', ' With multi-selection lists all specified options are selected, but possible old selections are not cleared', 'See the Locating elements section for details about the locator syntax', ],

	'Select From List By Label' : ['Selects options from selection list locator by labels', 'If more than one option is given for a single-selection list, the last value will be selected', ' With multi-selection lists all specified options are selected, but possible old selections are not cleared', 'See the Locating elements section for details about the locator syntax', ],

	'Select From List By Value' : ['Selects options from selection list locator by values', 'If more than one option is given for a single-selection list, the last value will be selected', ' With multi-selection lists all specified options are selected, but possible old selections are not cleared', 'See the Locating elements section for details about the locator syntax', ],

	'Select Radio Button' : ['Sets the radio button group group_name to value', 'The radio button to be selected is located by two arguments:group_name is the name of the radio button group', 'value is the id or value attribute of the actual radio button', ''],

	'Select Window' : ['DEPRECATED in SeleniumLibrary 4', '0', ' , use Switch Window instead', ],

	'Set Browser Implicit Wait' : ['Sets the implicit wait value used by Selenium', 'Same as Set Selenium Implicit Wait but only affects the current browser', ],

	'Set Focus To Element' : ['Sets the focus to the element identified by locator', 'See the Locating elements section for details about the locator syntax', 'Prior to SeleniumLibrary 3', '0 this keyword was named Focus', ],

	'Set Screenshot Directory' : ['Sets the directory for captured screenshots', 'path argument specifies the absolute path to a directory where the screenshots should be written to', ' If the directory does not exist, it will be created', ' The directory can also be set when importing the library', " If it is not configured anywhere, screenshots are saved to the same directory where Robot Framework's log file is written", 'If path equals to EMBED (case insensitive) and Capture Page Screenshot or capture Element Screenshot keywords filename argument is not changed from the default value, then the page or element screenshot is embedded as Base64 image to the log', 'html', 'The previous value is returned and can be used to restore the original value later if needed', 'Returning the previous value is new in SeleniumLibrary 3', '0', ' The persist argument was removed in SeleniumLibrary 3', '2 and EMBED is new in SeleniumLibrary 4', '2', ],

	'Set Selenium Implicit Wait' : ['Sets the implicit wait value used by Selenium', 'The value can be given as a number that is considered to be seconds or as a human-readable string like 1 second', ' The previous value is returned and can be used to restore the original value later if needed', 'This keyword sets the implicit wait for all opened browsers', ' Use Set Browser Implicit Wait to set it only to the current browser', 'See the Implicit wait section above for more information', 'Example:${orig wait} =Set Selenium Implicit Wait10 secondsPerform AJAX call that is slowSet Selenium Implicit Wait${orig wait},'],

	'Set Selenium Speed' : ['Sets the delay that is waited after each Selenium command', 'The value can be given as a number that is considered to be seconds or as a human-readable string like 1 second', ' The previous value is returned and can be used to restore the original value later if needed', 'See the Selenium Speed section above for more information', 'Example:Set Selenium Speed0', '5 seconds,'],

	'Set Selenium Timeout' : ['Sets the timeout that is used by various keywords', 'The value can be given as a number that is considered to be seconds or as a human-readable string like 1 second', ' The previous value is returned and can be used to restore the original value later if needed', 'See the Timeout section above for more information', 'Example:${orig timeout} =Set Selenium Timeout15 secondsOpen page that loads slowlySet Selenium Timeout${orig timeout},'],

	'Set Window Position' : ['Sets window position using x and y coordinates', 'The position is relative to the top left corner of the screen, but some browsers exclude possible task bar set by the operating system from the calculation', ' The actual position may thus be different with different browsers', 'Values can be given using strings containing numbers or by using actual numbers', ' See also Get Window Position', 'Example:Set Window Position100200,'],

	'Set Window Size' : ['Sets current windows size to given width and height', 'Values can be given using strings containing numbers or by using actual numbers', ' See also Get Window Size', 'Browsers have a limit on their minimum size', ' Trying to set them smaller will cause the actual size to be bigger than the requested size', 'If inner parameter is set to True, keyword sets the necessary window width and height to have the desired HTML DOM window', 'innerWidth and window', 'innerHeight', ' See Boolean arguments for more details on how to set boolean arguments', 'The inner argument is new since SeleniumLibrary 4', '0', 'This inner argument does not support Frames', ' If a frame is selected, switch to default before running this', 'Example:Set Window Size800600Set Window Size800600True,'],

	'Simulate Event' : ['Simulates event on the element identified by locator', 'This keyword is useful if element has OnEvent handler that needs to be explicitly invoked', 'See the Locating elements section for details about the locator syntax', 'Prior to SeleniumLibrary 3', '0 this keyword was named Simulate', ],

	'Submit Form' : ['Submits a form identified by locator', 'If locator is not given, first form on the page is submitted', 'See the Locating elements section for details about the locator syntax', ],

	'Switch Browser' : ['Switches between active browsers using index_or_alias', 'Indices are returned by the Open Browser keyword and aliases can be given to it explicitly', ' Indices start from 1', 'Example:Open Browserhttp://google', 'comffLocation Should Behttp://google', 'comOpen Browserhttp://yahoo', 'comiealias=secondLocation Should Behttp://yahoo', "comSwitch Browser1# indexPage Should ContainI'm feeling luckySwitch Browsersecond# aliasPage Should ContainMore Yahoo!Close All BrowsersAbove example expects that there was no other open browsers when opening the first one because it used index 1 when switching to it later", ' If you are not sure about that, you can store the index into a variable as below', '${index} =Open Browserhttp://google', 'com# Do something ', '', '', 'Switch Browser${index},'],

	'Switch Window' : ['Switches to browser window matching locator', 'If the window is found, all subsequent commands use the selected window, until this keyword is used again', ' If the window is not found, this keyword fails', ' The previous windows handle is returned and can be used to switch back to it later', 'Notice that alerts should be handled with Handle Alert or other alert related keywords', 'The locator can be specified using different strategies somewhat similarly as when locating elements on pages', 'By default, the locator is matched against window handle, name, title, and URL', ' Matching is done in that order and the first matching window is selected', 'The locator can specify an explicit strategy by using the format strategy:value (recommended) or strategy=value', ' Supported strategies are name, title, and url', ' These matches windows using their name, title, or URL, respectively', ' Additionally, default can be used to explicitly use the default strategy explained above', 'If the locator is NEW (case-insensitive), the latest opened window is selected', ' It is an error if this is the same as the current window', 'If the locator is MAIN (default, case-insensitive), the main window is selected', 'If the locator is CURRENT (case-insensitive), nothing is done', ' This effectively just returns the current window handle', 'If the locator is not a string, it is expected to be a list of window handles to exclude', ' Such a list of excluded windows can be got from Get Window Handles before doing an action that opens a new window', 'The timeout is used to specify how long keyword will poll to select the new window', ' The timeout is new in SeleniumLibrary 3', '2', 'Example:Click Linkpopup1# Open new windowSwitch Windowexample# Select window using default strategyTitle Should BePop-up 1Click Buttonpopup2# Open another window${handle} =Switch WindowNEW# Select latest opened windowTitle Should BePop-up 2Switch Window${handle}# Select window using handleTitle Should BePop-up 1Switch WindowMAIN# Select the main windowTitle Should BeMain${excludes} =Get Window Handles# Get list of current windowsClick Linkpopup3# Open one more windowSwitch Window${excludes}# Select window using excludesTitle Should BePop-up 3The browser argument allows with index_or_alias to implicitly switch to a specific browser when switching to a window', ' See Switch BrowserIf the browser is CURRENT (case-insensitive), no other browser is selected', 'NOTE:The strategy:value syntax is only supported by SeleniumLibrary 3', '0 and newer', 'Prior to SeleniumLibrary 3', '0 matching windows by name, title and URL was case-insensitive', 'Earlier versions supported aliases None, null and the empty string for selecting the main window, and alias self for selecting the current window', ' Support for these aliases was removed in SeleniumLibrary 3', '2', ],

	'Table Cell Should Contain' : ['Verifies table cell contains text expected', 'See Get Table Cell that this keyword uses internally for an explanation about accepted arguments', ],

	'Table Column Should Contain' : ['Verifies table column contains text expected', 'The table is located using the locator argument and its column found using column', ' See the Locating elements section for details about the locator syntax', 'Column indexes start from 1', ' It is possible to refer to columns from the end by using negative indexes so that -1 is the last column, -2 is the second last, and so on', 'If a table contains cells that span multiple columns, those merged cells count as a single column', 'See Page Should Contain Element for an explanation about the loglevel argument', ],

	'Table Footer Should Contain' : ['Verifies table footer contains text expected', 'Any &lt;td&gt; element inside &lt;tfoot&gt; element is considered to be part of the footer', 'The table is located using the locator argument', ' See the Locating elements section for details about the locator syntax', 'See Page Should Contain Element for an explanation about the loglevel argument', ],

	'Table Header Should Contain' : ['Verifies table header contains text expected', 'Any &lt;th&gt; element anywhere in the table is considered to be part of the header', 'The table is located using the locator argument', ' See the Locating elements section for details about the locator syntax', 'See Page Should Contain Element for an explanation about the loglevel argument', ],

	'Table Row Should Contain' : ['Verifies that table row contains text expected', 'The table is located using the locator argument and its column found using column', ' See the Locating elements section for details about the locator syntax', 'Row indexes start from 1', ' It is possible to refer to rows from the end by using negative indexes so that -1 is the last row, -2 is the second last, and so on', 'If a table contains cells that span multiple rows, a match only occurs for the uppermost row of those merged cells', 'See Page Should Contain Element for an explanation about the loglevel argument', ],

	'Table Should Contain' : ['Verifies table contains text expected', 'The table is located using the locator argument', ' See the Locating elements section for details about the locator syntax', 'See Page Should Contain Element for an explanation about the loglevel argument', ],

	'Textarea Should Contain' : ['Verifies text area locator contains text expected', 'message can be used to override default error message', 'See the Locating elements section for details about the locator syntax', ],

	'Textarea Value Should Be' : ['Verifies text area locator has exactly text expected', 'message can be used to override default error message', 'See the Locating elements section for details about the locator syntax', ],

	'Textfield Should Contain' : ['Verifies text field locator contains text expected', 'message can be used to override the default error message', 'See the Locating elements section for details about the locator syntax', ],

	'Textfield Value Should Be' : ['Verifies text field locator has exactly text expected', 'message can be used to override default error message', 'See the Locating elements section for details about the locator syntax', ],

	'Title Should Be' : ['Verifies that the current page title equals title', 'The message argument can be used to override the default error message', 'message argument is new in SeleniumLibrary 3', '1', ],

	'Unselect All From List' : ['Unselects all options from multi-selection list locator', 'See the Locating elements section for details about the locator syntax', 'New in SeleniumLibrary 3', '0', ],

	'Unselect Checkbox' : ['Removes the selection of checkbox identified by locator', 'Does nothing if the checkbox is not selected', 'See the Locating elements section for details about the locator syntax', ],

	'Unselect Frame' : ['Sets the main frame as the current frame', 'In practice cancels the previous Select Frame call', ],

	'Unselect From List By Index' : ['Unselects options from selection list locator by indexes', 'Indexes of list options start from 0', ' This keyword works only with multi-selection lists', 'See the Locating elements section for details about the locator syntax', ],

	'Unselect From List By Label' : ['Unselects options from selection list locator by labels', 'This keyword works only with multi-selection lists', 'See the Locating elements section for details about the locator syntax', ],

	'Unselect From List By Value' : ['Unselects options from selection list locator by values', 'This keyword works only with multi-selection lists', 'See the Locating elements section for details about the locator syntax', ],

	'Wait For Condition' : ['Waits until condition is true or timeout expires', 'The condition can be arbitrary JavaScript expression but it must return a value to be evaluated', ' See Execute JavaScript for information about accessing content on pages', 'Fails if the timeout expires before the condition becomes true', ' See the Timeouts section for more information about using timeouts and their default value', 'error can be used to override the default error message', ''],

	'Wait Until Element Contains' : ['Waits until the element locator contains text', 'Fails if timeout expires before the text appears', ' See the Timeouts section for more information about using timeouts and their default value and the Locating elements section for details about the locator syntax', 'error can be used to override the default error message', ],

	'Wait Until Element Does Not Contain' : ['Waits until the element locator does not contain text', 'Fails if timeout expires before the text disappears', ' See the Timeouts section for more information about using timeouts and their default value and the Locating elements section for details about the locator syntax', 'error can be used to override the default error message', ],

	'Wait Until Element Is Enabled' : ['Waits until the element locator is enabled', 'Element is considered enabled if it is not disabled nor read-only', 'Fails if timeout expires before the element is enabled', ' See the Timeouts section for more information about using timeouts and their default value and the Locating elements section for details about the locator syntax', 'error can be used to override the default error message', 'Considering read-only elements to be disabled is a new feature in SeleniumLibrary 3', '0', ],

	'Wait Until Element Is Not Visible' : ['Waits until the element locator is not visible', 'Fails if timeout expires before the element is not visible', ' See the Timeouts section for more information about using timeouts and their default value and the Locating elements section for details about the locator syntax', 'error can be used to override the default error message', ],

	'Wait Until Element Is Visible' : ['Waits until the element locator is visible', 'Fails if timeout expires before the element is visible', ' See the Timeouts section for more information about using timeouts and their default value and the Locating elements section for details about the locator syntax', 'error can be used to override the default error message', ],

	'Wait Until Location Contains' : ['Waits until the current URL contains expected', 'The expected argument contains the expected value in url', 'Fails if timeout expires before the location contains', ' See the Timeouts section for more information about using timeouts and their default value', 'The message argument can be used to override the default error message', 'New in SeleniumLibrary 4', '0,'],

	'Wait Until Location Does Not Contain' : ['Waits until the current URL does not contains location', 'The location argument contains value not expected in url', 'Fails if timeout expires before the location not contains', ' See the Timeouts section for more information about using timeouts and their default value', 'The message argument can be used to override the default error message', 'New in SeleniumLibrary 4', '3,'],

	'Wait Until Location Is' : ['Waits until the current URL is expected', 'The expected argument is the expected value in url', 'Fails if timeout expires before the location is', ' See the Timeouts section for more information about using timeouts and their default value', 'The message argument can be used to override the default error message', 'New in SeleniumLibrary 4', '0,'],

	'Wait Until Location Is Not' : ['Waits until the current URL is not location', 'The location argument is the unexpected value in url', 'Fails if timeout expires before the location is not', ' See the Timeouts section for more information about using timeouts and their default value', 'The message argument can be used to override the default error message', 'New in SeleniumLibrary 4', '3,'],

	'Wait Until Page Contains' : ['Waits until text appears on the current page', 'Fails if timeout expires before the text appears', ' See the Timeouts section for more information about using timeouts and their default value', 'error can be used to override the default error message', ],

	'Wait Until Page Contains Element' : ['Waits until the element locator appears on the current page', 'Fails if timeout expires before the element appears', ' See the Timeouts section for more information about using timeouts and their default value and the Locating elements section for details about the locator syntax', 'error can be used to override the default error message', 'The limit argument can used to define how many elements the page should contain', ' When limit is None (default) page can contain one or more elements', ' When limit is a number, page must contain same number of elements', 'limit is new in SeleniumLibrary 4', '4,'],

	'Wait Until Page Does Not Contain' : ['Waits until text disappears from the current page', 'Fails if timeout expires before the text disappears', ' See the Timeouts section for more information about using timeouts and their default value', 'error can be used to override the default error message', ],

	'Wait Until Page Does Not Contain Element' : ['Waits until the element locator disappears from the current page', 'Fails if timeout expires before the element disappears', ' See the Timeouts section for more information about using timeouts and their default value and the Locating elements section for details about the locator syntax', 'error can be used to override the default error message', 'The limit argument can used to define how many elements the page should not contain', ' When limit is None (default) page can`t contain any elements', ' When limit is a number, page must not contain same number of elements', 'limit is new in SeleniumLibrary 4', '4,']

}
